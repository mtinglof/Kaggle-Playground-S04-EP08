{"cells":[{"source":"<a href=\"https://www.kaggle.com/code/mtinglof/i-don-t-feel-so-good?scriptVersionId=194338776\" target=\"_blank\"><img align=\"left\" alt=\"Kaggle\" title=\"Open in Kaggle\" src=\"https://kaggle.com/static/images/open-in-kaggle.svg\"></a>","metadata":{},"cell_type":"markdown"},{"cell_type":"markdown","id":"1a045637","metadata":{"papermill":{"duration":0.012205,"end_time":"2024-08-27T23:38:43.044109","exception":false,"start_time":"2024-08-27T23:38:43.031904","status":"completed"},"tags":[]},"source":["# Resources \n","## Links \n","* https://www.kaggle.com/code/satyaprakashshukl/mushroom-classification-analysis/notebook\n","* https://www.kaggle.com/code/ambrosm/pss4e8-eda-which-makes-sense#First-observations \n","* https://www.kaggle.com/code/annastasy/ps4e8-data-cleaning-and-eda-of-mushrooms\n","\n","## Code Imports"]},{"cell_type":"code","execution_count":1,"id":"e1a5db2f","metadata":{"_kg_hide-output":true,"execution":{"iopub.execute_input":"2024-08-27T23:38:43.068861Z","iopub.status.busy":"2024-08-27T23:38:43.068531Z","iopub.status.idle":"2024-08-27T23:38:57.513374Z","shell.execute_reply":"2024-08-27T23:38:57.512559Z"},"papermill":{"duration":14.460352,"end_time":"2024-08-27T23:38:57.516102","exception":false,"start_time":"2024-08-27T23:38:43.05575","status":"completed"},"tags":[]},"outputs":[{"name":"stderr","output_type":"stream","text":["2024-08-27 23:38:45.005306: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered\n","2024-08-27 23:38:45.005443: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered\n","2024-08-27 23:38:45.140422: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered\n"]}],"source":["from keras_tuner import HyperModel\n","from keras_tuner.tuners import RandomSearch\n","from keras_tuner import Objective\n","import matplotlib.pyplot as plt\n","import numpy as np\n","import pandas as pd\n","import seaborn as sns\n","from sklearn.model_selection import train_test_split\n","from sklearn.preprocessing import MinMaxScaler\n","from sklearn.metrics import confusion_matrix\n","from sklearn.ensemble import RandomForestClassifier\n","from sklearn.metrics import classification_report\n","from sklearn.metrics import matthews_corrcoef\n","from tensorflow import keras\n","import tensorflow as tf\n","import xgboost as xgb"]},{"cell_type":"markdown","id":"61169346","metadata":{"papermill":{"duration":0.012562,"end_time":"2024-08-27T23:38:57.549549","exception":false,"start_time":"2024-08-27T23:38:57.536987","status":"completed"},"tags":[]},"source":["# 1. Problem Definition\n","## 1.1 Scenario\n","\n","Welcome back! Today, our client has given us the task of binary classification of mushrooms. The client lives far out in a magical forest and needs an application to help her identify which mushrooms she can eat and which she cannot. Luckily for us, she brought with her an ancient tome of mushroom classification. The book is pretty old, though, and some of the text is messed up- so we will have to work around that. She is hoping that we can come up with a model, so she does not have to flip through every page of this massive book. Oh, and she's hoping that your model will not get her sick either! \n","\n","## 1.2 Scoring Metric\n","For our client, we will be using the Matthews correlation coefficient (MCC). What does this mean? The MCC is a scoring equation that is calculated using true positives (TP), true negatives (TN), false positives (FP), and false negatives (FN). For you nerds, here is the full equation. \n","\n","$$\n","\\text{MCC} = \\frac{(TP \\times TN) - (FP \\times FN)}{\\sqrt{(TP + FP) \\times (TP + FN) \\times (TN + FP) \\times (TN + FN)}}\n","$$\n","\n","The MCC is great for binary classification, especially where datasets are imbalanced in favor of one type of classification. The other thing to know is that this equation will give us a score from -1 to 1, where -1 is total misclassification, 0 is no predictive power (randomly guessing), and 1 is a perfect classification. \n","\n","# 2. Data Collection and Analysis\n","## 2.1 Import Data and Look at Raw Reads\n","Alright, let's look at this data that our client has collect from her massive tome.  "]},{"cell_type":"code","execution_count":2,"id":"9f58c763","metadata":{"execution":{"iopub.execute_input":"2024-08-27T23:38:57.577427Z","iopub.status.busy":"2024-08-27T23:38:57.576844Z","iopub.status.idle":"2024-08-27T23:39:11.991984Z","shell.execute_reply":"2024-08-27T23:39:11.991188Z"},"papermill":{"duration":14.431899,"end_time":"2024-08-27T23:39:11.994243","exception":false,"start_time":"2024-08-27T23:38:57.562344","status":"completed"},"tags":[]},"outputs":[],"source":["train_df = pd.read_csv(\"/kaggle/input/playground-series-s4e8/train.csv\")\n","test_df = pd.read_csv(\"/kaggle/input/playground-series-s4e8/test.csv\")"]},{"cell_type":"code","execution_count":3,"id":"3e7589b3","metadata":{"execution":{"iopub.execute_input":"2024-08-27T23:39:12.019022Z","iopub.status.busy":"2024-08-27T23:39:12.018729Z","iopub.status.idle":"2024-08-27T23:39:12.048733Z","shell.execute_reply":"2024-08-27T23:39:12.047946Z"},"papermill":{"duration":0.044601,"end_time":"2024-08-27T23:39:12.050856","exception":false,"start_time":"2024-08-27T23:39:12.006255","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>class</th>\n","      <th>cap-diameter</th>\n","      <th>cap-shape</th>\n","      <th>cap-surface</th>\n","      <th>cap-color</th>\n","      <th>does-bruise-or-bleed</th>\n","      <th>gill-attachment</th>\n","      <th>gill-spacing</th>\n","      <th>gill-color</th>\n","      <th>stem-height</th>\n","      <th>stem-width</th>\n","      <th>stem-root</th>\n","      <th>stem-surface</th>\n","      <th>stem-color</th>\n","      <th>veil-type</th>\n","      <th>veil-color</th>\n","      <th>has-ring</th>\n","      <th>ring-type</th>\n","      <th>spore-print-color</th>\n","      <th>habitat</th>\n","      <th>season</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>e</td>\n","      <td>8.80</td>\n","      <td>f</td>\n","      <td>s</td>\n","      <td>u</td>\n","      <td>f</td>\n","      <td>a</td>\n","      <td>c</td>\n","      <td>w</td>\n","      <td>4.51</td>\n","      <td>15.39</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>w</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>f</td>\n","      <td>f</td>\n","      <td>NaN</td>\n","      <td>d</td>\n","      <td>a</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>p</td>\n","      <td>4.51</td>\n","      <td>x</td>\n","      <td>h</td>\n","      <td>o</td>\n","      <td>f</td>\n","      <td>a</td>\n","      <td>c</td>\n","      <td>n</td>\n","      <td>4.79</td>\n","      <td>6.48</td>\n","      <td>NaN</td>\n","      <td>y</td>\n","      <td>o</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>t</td>\n","      <td>z</td>\n","      <td>NaN</td>\n","      <td>d</td>\n","      <td>w</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>e</td>\n","      <td>6.94</td>\n","      <td>f</td>\n","      <td>s</td>\n","      <td>b</td>\n","      <td>f</td>\n","      <td>x</td>\n","      <td>c</td>\n","      <td>w</td>\n","      <td>6.85</td>\n","      <td>9.93</td>\n","      <td>NaN</td>\n","      <td>s</td>\n","      <td>n</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>f</td>\n","      <td>f</td>\n","      <td>NaN</td>\n","      <td>l</td>\n","      <td>w</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>e</td>\n","      <td>3.88</td>\n","      <td>f</td>\n","      <td>y</td>\n","      <td>g</td>\n","      <td>f</td>\n","      <td>s</td>\n","      <td>NaN</td>\n","      <td>g</td>\n","      <td>4.16</td>\n","      <td>6.53</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>w</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>f</td>\n","      <td>f</td>\n","      <td>NaN</td>\n","      <td>d</td>\n","      <td>u</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>e</td>\n","      <td>5.85</td>\n","      <td>x</td>\n","      <td>l</td>\n","      <td>w</td>\n","      <td>f</td>\n","      <td>d</td>\n","      <td>NaN</td>\n","      <td>w</td>\n","      <td>3.37</td>\n","      <td>8.36</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>w</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>f</td>\n","      <td>f</td>\n","      <td>NaN</td>\n","      <td>g</td>\n","      <td>a</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   id class  cap-diameter cap-shape cap-surface cap-color  \\\n","0   0     e          8.80         f           s         u   \n","1   1     p          4.51         x           h         o   \n","2   2     e          6.94         f           s         b   \n","3   3     e          3.88         f           y         g   \n","4   4     e          5.85         x           l         w   \n","\n","  does-bruise-or-bleed gill-attachment gill-spacing gill-color  stem-height  \\\n","0                    f               a            c          w         4.51   \n","1                    f               a            c          n         4.79   \n","2                    f               x            c          w         6.85   \n","3                    f               s          NaN          g         4.16   \n","4                    f               d          NaN          w         3.37   \n","\n","   stem-width stem-root stem-surface stem-color veil-type veil-color has-ring  \\\n","0       15.39       NaN          NaN          w       NaN        NaN        f   \n","1        6.48       NaN            y          o       NaN        NaN        t   \n","2        9.93       NaN            s          n       NaN        NaN        f   \n","3        6.53       NaN          NaN          w       NaN        NaN        f   \n","4        8.36       NaN          NaN          w       NaN        NaN        f   \n","\n","  ring-type spore-print-color habitat season  \n","0         f               NaN       d      a  \n","1         z               NaN       d      w  \n","2         f               NaN       l      w  \n","3         f               NaN       d      u  \n","4         f               NaN       g      a  "]},"execution_count":3,"metadata":{},"output_type":"execute_result"}],"source":["pd.set_option('display.max_columns', None)\n","train_df.head()"]},{"cell_type":"code","execution_count":4,"id":"32cc54f3","metadata":{"execution":{"iopub.execute_input":"2024-08-27T23:39:12.075688Z","iopub.status.busy":"2024-08-27T23:39:12.075413Z","iopub.status.idle":"2024-08-27T23:39:12.095008Z","shell.execute_reply":"2024-08-27T23:39:12.094179Z"},"papermill":{"duration":0.034825,"end_time":"2024-08-27T23:39:12.097587","exception":false,"start_time":"2024-08-27T23:39:12.062762","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 2077964 entries, 0 to 2077963\n","Data columns (total 21 columns):\n"," #   Column                Dtype  \n","---  ------                -----  \n"," 0   id                    int64  \n"," 1   cap-diameter          float64\n"," 2   cap-shape             object \n"," 3   cap-surface           object \n"," 4   cap-color             object \n"," 5   does-bruise-or-bleed  object \n"," 6   gill-attachment       object \n"," 7   gill-spacing          object \n"," 8   gill-color            object \n"," 9   stem-height           float64\n"," 10  stem-width            float64\n"," 11  stem-root             object \n"," 12  stem-surface          object \n"," 13  stem-color            object \n"," 14  veil-type             object \n"," 15  veil-color            object \n"," 16  has-ring              object \n"," 17  ring-type             object \n"," 18  spore-print-color     object \n"," 19  habitat               object \n"," 20  season                object \n","dtypes: float64(3), int64(1), object(17)\n","memory usage: 332.9+ MB\n"]}],"source":["test_df.info()"]},{"cell_type":"markdown","id":"bc09a2de","metadata":{"papermill":{"duration":0.011777,"end_time":"2024-08-27T23:39:12.121325","exception":false,"start_time":"2024-08-27T23:39:12.109548","status":"completed"},"tags":[]},"source":["## 2.2 Visualizations\n","The biggest problem we are going to have with this dataset is the number of artifacts that can be found in each column. "]},{"cell_type":"code","execution_count":5,"id":"70822c05","metadata":{"execution":{"iopub.execute_input":"2024-08-27T23:39:12.146387Z","iopub.status.busy":"2024-08-27T23:39:12.145879Z","iopub.status.idle":"2024-08-27T23:39:14.744837Z","shell.execute_reply":"2024-08-27T23:39:14.743727Z"},"papermill":{"duration":2.613886,"end_time":"2024-08-27T23:39:14.747081","exception":false,"start_time":"2024-08-27T23:39:12.133195","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["id                      3116945\n","class                         2\n","cap-diameter               3913\n","cap-shape                    74\n","cap-surface                  83\n","cap-color                    78\n","does-bruise-or-bleed         26\n","gill-attachment              78\n","gill-spacing                 48\n","gill-color                   63\n","stem-height                2749\n","stem-width                 5836\n","stem-root                    38\n","stem-surface                 60\n","stem-color                   59\n","veil-type                    22\n","veil-color                   24\n","has-ring                     23\n","ring-type                    40\n","spore-print-color            32\n","habitat                      52\n","season                        4\n","dtype: int64\n"]}],"source":["unique_counts = {}\n","\n","for column in train_df.columns:\n","    unique_counts[column] = train_df[column].nunique()\n","\n","unique_counts_series = pd.Series(unique_counts)\n","\n","print(unique_counts_series)"]},{"cell_type":"markdown","id":"35f533be","metadata":{"papermill":{"duration":0.011871,"end_time":"2024-08-27T23:39:14.771666","exception":false,"start_time":"2024-08-27T23:39:14.759795","status":"completed"},"tags":[]},"source":["From the table above, we see that there are quite a few unique values per column. In addition, it does not seem that the data dictionary found [here](https://archive.ics.uci.edu/dataset/73/mushroom) or [here](https://archive.ics.uci.edu/dataset/848/secondary+mushroom+dataset) correlates exactly with our dataset. While it seems very close, both data dictionaries do not seem to describe all variables in our dataset. Lets see what percentage each value makes in each column with the code below. "]},{"cell_type":"code","execution_count":6,"id":"3f0a7841","metadata":{"_kg_hide-output":true,"collapsed":true,"execution":{"iopub.execute_input":"2024-08-27T23:39:14.796936Z","iopub.status.busy":"2024-08-27T23:39:14.796641Z","iopub.status.idle":"2024-08-27T23:39:20.083216Z","shell.execute_reply":"2024-08-27T23:39:20.082194Z"},"jupyter":{"outputs_hidden":true},"papermill":{"duration":5.301818,"end_time":"2024-08-27T23:39:20.085423","exception":false,"start_time":"2024-08-27T23:39:14.783605","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["Column: class\n","class\n","p    54.713702\n","e    45.286298\n","\n","Column: cap-shape\n","cap-shape\n","x            46.072177\n","f            21.695817\n","s            11.715019\n","b            10.223154\n","o             3.491765\n","p             3.431834\n","c             3.353326\n","d             0.002085\n","e             0.001925\n","n             0.001315\n","w             0.001155\n","t             0.001155\n","g             0.001091\n","y             0.001059\n","r             0.001027\n","a             0.000962\n","u             0.000866\n","z             0.000706\n","l             0.000674\n","i             0.000449\n","k             0.000417\n","h             0.000192\n","7 x           0.000064\n","3.55          0.000064\n","m             0.000064\n","4.97          0.000064\n","8             0.000064\n","6.44          0.000032\n","8.3           0.000032\n","7.6           0.000032\n","17.44         0.000032\n","4.33          0.000032\n","2.82          0.000032\n","3.91          0.000032\n","6.21          0.000032\n","8.29          0.000032\n","54.78         0.000032\n","20.25         0.000032\n","3.52          0.000032\n","3.04          0.000032\n","ring-type     0.000032\n","10.13         0.000032\n","is p          0.000032\n","7.43          0.000032\n","0.82          0.000032\n","10.46         0.000032\n","2.77          0.000032\n","2.94          0.000032\n","12.62         0.000032\n","5.15          0.000032\n","19.04         0.000032\n","49.21         0.000032\n","b f           0.000032\n","9.13          0.000032\n","1.66          0.000032\n","3.37          0.000032\n","7.21          0.000032\n","3.25          0.000032\n","11.12         0.000032\n","3 x           0.000032\n","is s          0.000032\n","4.22          0.000032\n","3.6           0.000032\n","21.56         0.000032\n","6 x           0.000032\n","24.16         0.000032\n","2.85          0.000032\n","6.53          0.000032\n","19.29         0.000032\n","5 f           0.000032\n","4.3           0.000032\n","7.41          0.000032\n","2.63          0.000032\n","19.06         0.000032\n","\n","Column: cap-surface\n","cap-surface\n","t                       18.838581\n","s                       15.739259\n","y                       13.402962\n","h                       11.629970\n","g                       10.782396\n","d                        8.456198\n","k                        5.268974\n","e                        4.894351\n","i                        4.637924\n","w                        4.490740\n","l                        1.834032\n","n                        0.003925\n","f                        0.003066\n","p                        0.002412\n","u                        0.002003\n","a                        0.001799\n","m                        0.001717\n","o                        0.001594\n","r                        0.001431\n","x                        0.001349\n","c                        0.001267\n","b                        0.000736\n","z                        0.000327\n","season                   0.000286\n","ring-type                0.000164\n","class                    0.000082\n","does None                0.000082\n","has-ring                 0.000082\n","does t                   0.000082\n","is None                  0.000041\n","5.73                     0.000041\n","14.04                    0.000041\n","1.42                     0.000041\n","8.96                     0.000041\n","10.83                    0.000041\n","has h                    0.000041\n","24.38                    0.000041\n","2.81                     0.000041\n","0.88                     0.000041\n","2.11                     0.000041\n","2.79                     0.000041\n","does-bruise-or-bleed     0.000041\n","4.93                     0.000041\n","1.08                     0.000041\n","is k                     0.000041\n","10.34                    0.000041\n","spore-print-color        0.000041\n","spore-color              0.000041\n","2.92                     0.000041\n","41.91                    0.000041\n","12.2                     0.000041\n","does h                   0.000041\n","8.01                     0.000041\n","0.87                     0.000041\n","9.22                     0.000041\n","1.14                     0.000041\n","6.49                     0.000041\n","10.1                     0.000041\n","2.51                     0.000041\n","7.99                     0.000041\n","is y                     0.000041\n","3.64                     0.000041\n","3.33                     0.000041\n","15.94                    0.000041\n","2.7                      0.000041\n","does l                   0.000041\n","4.21                     0.000041\n","cap-diameter             0.000041\n","1.43                     0.000041\n","7.14                     0.000041\n","is h                     0.000041\n","0.85                     0.000041\n","6.57                     0.000041\n","12.79                    0.000041\n","6.45                     0.000041\n","4.66                     0.000041\n","23.18                    0.000041\n","3.06                     0.000041\n","16.39                    0.000041\n","veil-color               0.000041\n","11.78                    0.000041\n","8.1                      0.000041\n","5.07                     0.000041\n","\n","Column: cap-color\n","cap-color\n","n                       43.617941\n","y                       12.404084\n","w                       12.173569\n","g                        6.763861\n","e                        6.329620\n","o                        5.737916\n","p                        2.946422\n","r                        2.510031\n","u                        2.347564\n","b                        1.967094\n","k                        1.921376\n","l                        1.269132\n","f                        0.001700\n","d                        0.001540\n","s                        0.001251\n","a                        0.000962\n","t                        0.000834\n","h                        0.000706\n","m                        0.000449\n","c                        0.000449\n","x                        0.000449\n","i                        0.000417\n","z                        0.000321\n","season                   0.000192\n","ring-type                0.000192\n","class                    0.000160\n","3.34                     0.000064\n","does-bruise-or-bleed     0.000064\n","11.13                    0.000064\n","5.41                     0.000032\n","3.11                     0.000032\n","2.57                     0.000032\n","17.93                    0.000032\n","8.67                     0.000032\n","2.7                      0.000032\n","8.57                     0.000032\n","11.92                    0.000032\n","3.08                     0.000032\n","2.82                     0.000032\n","4.24                     0.000032\n","25.98                    0.000032\n","20                       0.000032\n","7                        0.000032\n","2.9                      0.000032\n","6.36                     0.000032\n","5.91                     0.000032\n","10.56                    0.000032\n","20.02                    0.000032\n","stem-surface             0.000032\n","20.62                    0.000032\n","4. n                     0.000032\n","17.19                    0.000032\n","26.89                    0.000032\n","9.02                     0.000032\n","2.05                     0.000032\n","13                       0.000032\n","7.72                     0.000032\n","6.76                     0.000032\n","7.15                     0.000032\n","12.89                    0.000032\n","8.83                     0.000032\n","24.75                    0.000032\n","22.38                    0.000032\n","1.51                     0.000032\n","3.57                     0.000032\n","17.94                    0.000032\n","does n                   0.000032\n","4.89                     0.000032\n","6.2                      0.000032\n","21.53                    0.000032\n","6.41                     0.000032\n","4.98                     0.000032\n","3.95                     0.000032\n","6.59                     0.000032\n","5.25                     0.000032\n","veil-color               0.000032\n","6.9                      0.000032\n","10.1                     0.000032\n","\n","Column: does-bruise-or-bleed\n","does-bruise-or-bleed\n","f           82.444496\n","t           17.552007\n","w            0.000449\n","c            0.000353\n","h            0.000289\n","b            0.000225\n","y            0.000225\n","a            0.000225\n","x            0.000225\n","s            0.000192\n","k            0.000192\n","d            0.000128\n","e            0.000128\n","p            0.000128\n","l            0.000128\n","z            0.000096\n","o            0.000096\n","g            0.000096\n","n            0.000064\n","i            0.000064\n","has-ring     0.000032\n","r            0.000032\n","3.43         0.000032\n","4.42         0.000032\n","2.9          0.000032\n","u            0.000032\n","\n","Column: gill-attachment\n","gill-attachment\n","a                       24.914453\n","d                       22.724024\n","x                       13.917345\n","e                       11.641225\n","s                       11.393674\n","p                       10.763943\n","f                        4.626016\n","c                        0.002854\n","u                        0.002160\n","w                        0.001427\n","t                        0.001388\n","k                        0.001273\n","y                        0.001080\n","i                        0.000964\n","g                        0.000848\n","m                        0.000848\n","b                        0.000810\n","n                        0.000771\n","o                        0.000694\n","h                        0.000694\n","l                        0.000617\n","r                        0.000386\n","z                        0.000193\n","season                   0.000193\n","3.45                     0.000077\n","15.49                    0.000039\n","19.65                    0.000039\n","4.01                     0.000039\n","8.37                     0.000039\n","28.7                     0.000039\n","6.32                     0.000039\n","2.54                     0.000039\n","2.41                     0.000039\n","6.11                     0.000039\n","8.47                     0.000039\n","1.32                     0.000039\n","does f                   0.000039\n","13.15                    0.000039\n","1.37                     0.000039\n","28.15                    0.000039\n","7.09                     0.000039\n","9.88                     0.000039\n","2.67                     0.000039\n","has d                    0.000039\n","5.93                     0.000039\n","1.51                     0.000039\n","16.27                    0.000039\n","11.26                    0.000039\n","2.79                     0.000039\n","is f                     0.000039\n","1.48                     0.000039\n","18.21                    0.000039\n","13.94                    0.000039\n","32.54                    0.000039\n","does-bruise-or-bleed     0.000039\n","4.64                     0.000039\n","4.77                     0.000039\n","p p                      0.000039\n","7.92                     0.000039\n","8.79                     0.000039\n","does None                0.000039\n","has f                    0.000039\n","ring-type                0.000039\n","7.86                     0.000039\n","10.85                    0.000039\n","20.07                    0.000039\n","2.82                     0.000039\n","3.91                     0.000039\n","does                     0.000039\n","10.23                    0.000039\n","6.74                     0.000039\n","0.92                     0.000039\n","1                        0.000039\n","is a                     0.000039\n","3.71                     0.000039\n","50.44                    0.000039\n","11.62                    0.000039\n","16.33                    0.000039\n","\n","Column: gill-spacing\n","gill-spacing\n","c              71.619416\n","d              21.949411\n","f               6.423425\n","e               0.001291\n","a               0.000915\n","s               0.000861\n","b               0.000646\n","x               0.000430\n","t               0.000430\n","p               0.000377\n","g               0.000215\n","k               0.000215\n","h               0.000161\n","l               0.000161\n","y               0.000108\n","r               0.000108\n","6.67            0.000108\n","0               0.000108\n","9.01            0.000054\n","2.69            0.000054\n","3.61            0.000054\n","class           0.000054\n","4.8             0.000054\n","4.04            0.000054\n","3.57            0.000054\n","i               0.000054\n","w               0.000054\n","24.38           0.000054\n","cap-surface     0.000054\n","0.73            0.000054\n","5.22            0.000054\n","3.92            0.000054\n","5.42            0.000054\n","12.27           0.000054\n","1               0.000054\n","1.6             0.000054\n","n               0.000054\n","3.81            0.000054\n","4.09            0.000054\n","1.36            0.000054\n","3.24            0.000054\n","5.55            0.000054\n","5.7             0.000054\n","3.62            0.000054\n","does f          0.000054\n","6.4             0.000054\n","1.88            0.000054\n","55.13           0.000054\n","\n","Column: gill-color\n","gill-color\n","w                       29.886797\n","n                       17.433607\n","y                       15.061946\n","p                       11.024650\n","g                        6.806918\n","o                        5.040893\n","k                        4.105698\n","f                        3.840176\n","r                        2.014798\n","e                        1.798172\n","b                        1.515839\n","u                        1.456549\n","l                        0.001765\n","t                        0.001732\n","d                        0.001732\n","s                        0.001476\n","x                        0.001123\n","c                        0.000995\n","a                        0.000898\n","h                        0.000770\n","z                        0.000513\n","m                        0.000513\n","i                        0.000289\n","class                    0.000225\n","season                   0.000225\n","ring-type                0.000160\n","spacing                  0.000128\n","has-ring                 0.000096\n","5                        0.000096\n","spore-print-color        0.000096\n","18.03                    0.000064\n","habitat                  0.000064\n","18.12                    0.000032\n","does w                   0.000032\n","4                        0.000032\n","3.39                     0.000032\n","3.45                     0.000032\n","0.92                     0.000032\n","6.19                     0.000032\n","5.01                     0.000032\n","9.46                     0.000032\n","4.49                     0.000032\n","3.4                      0.000032\n","17                       0.000032\n","10.07                    0.000032\n","8.06                     0.000032\n","7.59                     0.000032\n","20.6                     0.000032\n","stem-root                0.000032\n","does-bruise-or-bleed     0.000032\n","8.83                     0.000032\n","10.21                    0.000032\n","4.64                     0.000032\n","6.4                      0.000032\n","is y                     0.000032\n","e y                      0.000032\n","1.91                     0.000032\n","does n                   0.000032\n","16.41                    0.000032\n","6.41                     0.000032\n","veil-type                0.000032\n","20.44                    0.000032\n","8.37                     0.000032\n","\n","Column: stem-root\n","stem-root\n","b                    46.065814\n","s                    32.492040\n","r                    13.281489\n","c                     7.943943\n","f                     0.165869\n","d                     0.006668\n","y                     0.003890\n","g                     0.003334\n","w                     0.003334\n","p                     0.003334\n","k                     0.003056\n","l                     0.002778\n","t                     0.002778\n","n                     0.002778\n","x                     0.002501\n","i                     0.002223\n","u                     0.002223\n","a                     0.001945\n","e                     0.001667\n","o                     0.001389\n","h                     0.001111\n","m                     0.001111\n","z                     0.000556\n","5.59                  0.000278\n","2.77                  0.000278\n","20.01                 0.000278\n","3.63                  0.000278\n","10.87                 0.000278\n","16.88                 0.000278\n","15.69                 0.000278\n","3.23                  0.000278\n","1.48                  0.000278\n","20.0                  0.000278\n","18.06                 0.000278\n","spore-print-color     0.000278\n","3.49                  0.000278\n","13.03                 0.000278\n","7.15                  0.000278\n","\n","Column: stem-surface\n","stem-surface\n","s                       28.836776\n","y                       22.489534\n","i                       19.747307\n","t                       13.024917\n","g                        6.872731\n","k                        6.459294\n","h                        2.489517\n","f                        0.045067\n","w                        0.004313\n","d                        0.004225\n","e                        0.003169\n","n                        0.002993\n","x                        0.002289\n","b                        0.002024\n","c                        0.001936\n","l                        0.001760\n","r                        0.001760\n","p                        0.001760\n","u                        0.001408\n","o                        0.001320\n","a                        0.000968\n","m                        0.000616\n","season                   0.000528\n","0.0                      0.000264\n","10.48                    0.000176\n","z                        0.000176\n","does-bruise-or-bleed     0.000176\n","5.56                     0.000176\n","1.59                     0.000088\n","25.83                    0.000088\n","3.89                     0.000088\n","4.34                     0.000088\n","6.58                     0.000088\n","12.04                    0.000088\n","5.81                     0.000088\n","5.97                     0.000088\n","4.41                     0.000088\n","5.48                     0.000088\n","5.51                     0.000088\n","class                    0.000088\n","has-ring                 0.000088\n","13.1                     0.000088\n","17.46                    0.000088\n","3.68                     0.000088\n","5.35                     0.000088\n","7.23                     0.000088\n","1.03                     0.000088\n","does None                0.000088\n","does s                   0.000088\n","7.45                     0.000088\n","has h                    0.000088\n","1.94                     0.000088\n","49.46                    0.000088\n","19.35                    0.000088\n","2.68                     0.000088\n","4.74                     0.000088\n","spore-print-color        0.000088\n","10.93                    0.000088\n","24.12                    0.000088\n","13.94                    0.000088\n","\n","Column: stem-color\n","stem-color\n","w                    38.391810\n","n                    32.194223\n","y                    11.998144\n","g                     4.235577\n","o                     3.578580\n","e                     3.316525\n","u                     2.150112\n","p                     1.754624\n","k                     1.080430\n","r                     0.716383\n","l                     0.320638\n","b                     0.236292\n","f                     0.018384\n","s                     0.001636\n","t                     0.001283\n","a                     0.001155\n","x                     0.000642\n","i                     0.000610\n","d                     0.000513\n","h                     0.000385\n","m                     0.000353\n","c                     0.000225\n","z                     0.000192\n","ring-type             0.000096\n","spore-print-color     0.000064\n","class                 0.000064\n","3.13                  0.000032\n","1.75                  0.000032\n","e n                   0.000032\n","7.33                  0.000032\n","is n                  0.000032\n","2.78                  0.000032\n","23.59                 0.000032\n","8.32                  0.000032\n","33.52                 0.000032\n","is w                  0.000032\n","26.4                  0.000032\n","4.75                  0.000032\n","7.84                  0.000032\n","2.75                  0.000032\n","8.49                  0.000032\n","4.49                  0.000032\n","1.41                  0.000032\n","17.45                 0.000032\n","3.53                  0.000032\n","12.92                 0.000032\n","3.98                  0.000032\n","20.07                 0.000032\n","7.7                   0.000032\n","22.6                  0.000032\n","6.31                  0.000032\n","6.09                  0.000032\n","3.56                  0.000032\n","3.37                  0.000032\n","4.62                  0.000032\n","2.54                  0.000032\n","39.51                 0.000032\n","18.06                 0.000032\n","4.33                  0.000032\n","\n","Column: veil-type\n","veil-type\n","u          99.950455\n","w           0.006899\n","a           0.005644\n","e           0.005017\n","f           0.005017\n","c           0.003136\n","b           0.003136\n","y           0.002509\n","k           0.002509\n","g           0.002509\n","n           0.001881\n","s           0.001881\n","d           0.001254\n","h           0.001254\n","i           0.001254\n","p           0.001254\n","r           0.001254\n","21.11       0.000627\n","t           0.000627\n","is None     0.000627\n","l           0.000627\n","5.94        0.000627\n","\n","Column: veil-color\n","veil-color\n","w       74.221139\n","y        8.104564\n","n        7.989138\n","u        3.730339\n","k        3.478742\n","e        2.438577\n","g        0.007979\n","p        0.006117\n","r        0.003723\n","o        0.003457\n","s        0.002926\n","t        0.001862\n","a        0.001862\n","d        0.001596\n","i        0.001596\n","h        0.001330\n","f        0.001064\n","c        0.001064\n","l        0.001064\n","b        0.000798\n","8.25     0.000266\n","2.49     0.000266\n","z        0.000266\n","3.32     0.000266\n","\n","Column: has-ring\n","has-ring\n","f             75.998718\n","t             23.997464\n","r              0.000513\n","h              0.000417\n","c              0.000353\n","s              0.000353\n","l              0.000353\n","p              0.000353\n","g              0.000257\n","z              0.000192\n","e              0.000192\n","x              0.000160\n","m              0.000128\n","y              0.000096\n","d              0.000096\n","o              0.000064\n","k              0.000064\n","n              0.000064\n","f has-ring     0.000032\n","i              0.000032\n","10.3           0.000032\n","w              0.000032\n","a              0.000032\n","\n","Column: ring-type\n","ring-type\n","f                       82.902146\n","e                        4.016178\n","z                        3.807815\n","l                        2.457878\n","r                        2.272675\n","p                        2.264944\n","g                        2.131379\n","m                        0.133598\n","t                        0.003280\n","d                        0.001238\n","n                        0.001138\n","x                        0.001071\n","b                        0.000971\n","y                        0.000837\n","s                        0.000602\n","k                        0.000602\n","a                        0.000535\n","h                        0.000502\n","w                        0.000469\n","u                        0.000435\n","c                        0.000368\n","o                        0.000301\n","ring-type                0.000234\n","i                        0.000134\n","does f                   0.000100\n","season                   0.000100\n","4                        0.000033\n","15                       0.000033\n","3.12                     0.000033\n","does-bruise-or-bleed     0.000033\n","11                       0.000033\n","23.6                     0.000033\n","1                        0.000033\n","14                       0.000033\n","2                        0.000033\n","spore-print-color        0.000033\n","class                    0.000033\n","sp                       0.000033\n","2.87                     0.000033\n","8.25                     0.000033\n","\n","Column: spore-print-color\n","spore-print-color\n","k             40.151461\n","p             25.531780\n","w             18.772894\n","n              8.473302\n","r              2.983952\n","u              2.714929\n","g              1.306578\n","y              0.013470\n","s              0.007857\n","c              0.005987\n","f              0.005238\n","e              0.005238\n","a              0.004864\n","t              0.004864\n","d              0.003367\n","l              0.002993\n","b              0.001871\n","m              0.001497\n","h              0.001122\n","o              0.001122\n","veil-color     0.000748\n","i              0.000748\n","x              0.000748\n","2.49           0.000374\n","9 None         0.000374\n","10 None        0.000374\n","class          0.000374\n","2.62           0.000374\n","season         0.000374\n","9.55           0.000374\n","6.36           0.000374\n","4.58           0.000374\n","\n","Column: habitat\n","habitat\n","d                       69.863422\n","g                       14.594886\n","l                        5.514838\n","m                        4.843563\n","h                        3.854375\n","w                        0.594501\n","p                        0.551189\n","u                        0.168886\n","e                        0.001765\n","s                        0.001668\n","n                        0.001315\n","t                        0.001283\n","r                        0.001219\n","y                        0.001091\n","a                        0.001091\n","k                        0.000995\n","c                        0.000834\n","b                        0.000577\n","o                        0.000385\n","f                        0.000353\n","i                        0.000225\n","x                        0.000160\n","z                        0.000160\n","habitat                  0.000160\n","class                    0.000096\n","spore-print-color        0.000096\n","ring-type                0.000064\n","8.09                     0.000032\n","17.1                     0.000032\n","is w                     0.000032\n","9.28                     0.000032\n","does-bruise-or-bleed     0.000032\n","is h                     0.000032\n","4                        0.000032\n","5.56                     0.000032\n","2.94                     0.000032\n","10.07                    0.000032\n","7.31                     0.000032\n","5.62                     0.000032\n","cap-diameter             0.000032\n","3.11                     0.000032\n","16.46                    0.000032\n","7.37                     0.000032\n","veil-type                0.000032\n","17.38                    0.000032\n","1.66                     0.000032\n","6.63                     0.000032\n","18.35                    0.000032\n","6.75                     0.000032\n","2.44                     0.000032\n","3.68                     0.000032\n","2.25                     0.000032\n","\n","Column: season\n","season\n","a    49.513899\n","u    37.010214\n","w     8.925053\n","s     4.550834\n","\n"]}],"source":["def calculate_category_percentages(df):\n","    for column in df.columns:\n","        if df[column].dtype == 'object':\n","            print(f\"Column: {column}\")\n","            percentage = df[column].value_counts(normalize=True) * 100\n","            print(f\"{percentage.to_string()}\\n\")\n","\n","calculate_category_percentages(train_df)"]},{"cell_type":"markdown","id":"7e12fe1e","metadata":{"papermill":{"duration":0.01335,"end_time":"2024-08-27T23:39:20.1125","exception":false,"start_time":"2024-08-27T23:39:20.09915","status":"completed"},"tags":[]},"source":["If we are trying to reduce these values per column, a good cutoff looks like any row value that is < .1% of the total count values in a column. We will handle that in our data cleaning section. \n","\n","Lets take a look at the null values now. "]},{"cell_type":"code","execution_count":7,"id":"8a3d11e8","metadata":{"execution":{"iopub.execute_input":"2024-08-27T23:39:20.140936Z","iopub.status.busy":"2024-08-27T23:39:20.140168Z","iopub.status.idle":"2024-08-27T23:39:24.768065Z","shell.execute_reply":"2024-08-27T23:39:24.767256Z"},"papermill":{"duration":4.644815,"end_time":"2024-08-27T23:39:24.770635","exception":false,"start_time":"2024-08-27T23:39:20.12582","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["veil-type               2957493\n","spore-print-color       2849682\n","stem-root               2757023\n","veil-color              2740947\n","stem-surface            1980861\n","gill-spacing            1258435\n","cap-surface              671023\n","gill-attachment          523936\n","ring-type                128880\n","gill-color                   57\n","habitat                      45\n","cap-shape                    40\n","stem-color                   38\n","has-ring                     24\n","cap-color                    12\n","does-bruise-or-bleed          8\n","cap-diameter                  4\n","class                         0\n","id                            0\n","stem-width                    0\n","stem-height                   0\n","season                        0\n","dtype: int64\n"]},{"data":{"image/png":"","text/plain":["<Figure size 1000x600 with 1 Axes>"]},"metadata":{},"output_type":"display_data"}],"source":["null_counts = train_df.isnull().sum()\n","null_counts = null_counts.sort_values(ascending=False)\n","\n","print(null_counts)\n","\n","plt.figure(figsize=(10, 6))\n","sns.barplot(x=null_counts.index, y=null_counts.values, palette='viridis')\n","\n","plt.title('Number of Null Values in Each Column')\n","plt.xlabel('Column Names')\n","plt.ylabel('Number of Null Values')\n","plt.xticks(rotation=90)\n","\n","plt.show()"]},{"cell_type":"markdown","id":"fb1c45d9","metadata":{"papermill":{"duration":0.014134,"end_time":"2024-08-27T23:39:24.79937","exception":false,"start_time":"2024-08-27T23:39:24.785236","status":"completed"},"tags":[]},"source":["**NOTE** The numerical column **cap-diameter** has 4 null values. If you miss this, you're going to have some head scratching errors with training later. "]},{"cell_type":"code","execution_count":8,"id":"5eac4697","metadata":{"execution":{"iopub.execute_input":"2024-08-27T23:39:24.829369Z","iopub.status.busy":"2024-08-27T23:39:24.828667Z","iopub.status.idle":"2024-08-27T23:39:31.965823Z","shell.execute_reply":"2024-08-27T23:39:31.964699Z"},"papermill":{"duration":7.154422,"end_time":"2024-08-27T23:39:31.967912","exception":false,"start_time":"2024-08-27T23:39:24.81349","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["Number of duplicate rows: 0\n"]}],"source":["duplicate_count = train_df.duplicated().sum()\n","\n","print(f\"Number of duplicate rows: {duplicate_count}\")"]},{"cell_type":"markdown","id":"8bf48822","metadata":{"execution":{"iopub.status.busy":"2024-08-22T18:48:35.436017Z","iopub.status.idle":"2024-08-22T18:48:35.436411Z","shell.execute_reply":"2024-08-22T18:48:35.436227Z","shell.execute_reply.started":"2024-08-22T18:48:35.436211Z"},"papermill":{"duration":0.01424,"end_time":"2024-08-27T23:39:31.996912","exception":false,"start_time":"2024-08-27T23:39:31.982672","status":"completed"},"tags":[]},"source":["No duplicate rows, good to know. \n","\n","Finally, lets get some plots of our numerical data."]},{"cell_type":"code","execution_count":9,"id":"e6dd9e85","metadata":{"execution":{"iopub.execute_input":"2024-08-27T23:39:32.026975Z","iopub.status.busy":"2024-08-27T23:39:32.026227Z","iopub.status.idle":"2024-08-27T23:39:32.990759Z","shell.execute_reply":"2024-08-27T23:39:32.989843Z"},"papermill":{"duration":0.982239,"end_time":"2024-08-27T23:39:32.993306","exception":false,"start_time":"2024-08-27T23:39:32.011067","status":"completed"},"tags":[]},"outputs":[{"data":{"image/png":"","text/plain":["<Figure size 1500x500 with 3 Axes>"]},"metadata":{},"output_type":"display_data"}],"source":["fig, axes = plt.subplots(nrows=1, ncols=3, figsize=(15, 5))\n","\n","for i, col in enumerate(train_df.select_dtypes(include=['float64']).columns):\n","    axes[i].hist(train_df[col], bins=30, color='skyblue', edgecolor='black')\n","    axes[i].set_title(f'Histogram of {col}')\n","    axes[i].set_xlabel(col)\n","    axes[i].set_ylabel('Frequency')\n","\n","plt.tight_layout()\n","plt.show()"]},{"cell_type":"markdown","id":"7d90d3ef","metadata":{"papermill":{"duration":0.014707,"end_time":"2024-08-27T23:39:33.023163","exception":false,"start_time":"2024-08-27T23:39:33.008456","status":"completed"},"tags":[]},"source":["## 2.3 First Thoughts\n","* We have a **ton** of training data. Good news for us, we will be able to split this into a train, dev, test set. \n","* There are a lot of data artifacts in the set. In the next section, we will define .1% as the cutoff for artifacts that will get reassigned to another value. \n","* Null values will also have to be handled. \n","* No duplicates, that's a good sign. \n","\n","# 3. Data Cleaning\n","## 3.1 Replacing Null and Artifacts\n","Now that we have a good sense of what data we are working with, let's get it ready for a model. First, let's handle those data artifacts by writing a function to rewrite those smaller values and any null values we might have. Intuitively, we know already that we are probably going to be using a Deep Neural Network (DNN) for this problem. "]},{"cell_type":"code","execution_count":10,"id":"f5453ae4","metadata":{"execution":{"iopub.execute_input":"2024-08-27T23:39:33.054074Z","iopub.status.busy":"2024-08-27T23:39:33.053787Z","iopub.status.idle":"2024-08-27T23:39:33.112598Z","shell.execute_reply":"2024-08-27T23:39:33.111825Z"},"papermill":{"duration":0.076739,"end_time":"2024-08-27T23:39:33.114776","exception":false,"start_time":"2024-08-27T23:39:33.038037","status":"completed"},"tags":[]},"outputs":[],"source":["for col in train_df.select_dtypes(include=['float64']).columns:\n","    train_df[col] = train_df[col].fillna(0)\n"]},{"cell_type":"code","execution_count":11,"id":"9c3fb056","metadata":{"execution":{"iopub.execute_input":"2024-08-27T23:39:33.146113Z","iopub.status.busy":"2024-08-27T23:39:33.145853Z","iopub.status.idle":"2024-08-27T23:39:54.51238Z","shell.execute_reply":"2024-08-27T23:39:54.511537Z"},"papermill":{"duration":21.384805,"end_time":"2024-08-27T23:39:54.514839","exception":false,"start_time":"2024-08-27T23:39:33.130034","status":"completed"},"tags":[]},"outputs":[],"source":["def rewrite_values(df, threshold=0.1):\n","    for column in df.columns:\n","        if df[column].dtype == 'object':\n","            total_count = df[column].notna().sum()\n","            value_counts = df[column].value_counts()\n","            replace_dict = {value: 'not' if count / total_count < (threshold / 100) else value for value, count in value_counts.items()}\n","            df[column] = df[column].map(replace_dict).fillna('null')\n","\n","rewrite_values(train_df)"]},{"cell_type":"code","execution_count":12,"id":"bf517ece","metadata":{"execution":{"iopub.execute_input":"2024-08-27T23:39:54.547089Z","iopub.status.busy":"2024-08-27T23:39:54.546752Z","iopub.status.idle":"2024-08-27T23:39:58.863443Z","shell.execute_reply":"2024-08-27T23:39:58.862201Z"},"papermill":{"duration":4.33488,"end_time":"2024-08-27T23:39:58.865609","exception":false,"start_time":"2024-08-27T23:39:54.530729","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["id                      3116945\n","class                         2\n","cap-diameter               3914\n","cap-shape                     9\n","cap-surface                  13\n","cap-color                    14\n","does-bruise-or-bleed          4\n","gill-attachment               9\n","gill-spacing                  5\n","gill-color                   14\n","stem-height                2749\n","stem-width                 5836\n","stem-root                     7\n","stem-surface                  9\n","stem-color                   14\n","veil-type                     3\n","veil-color                    8\n","has-ring                      4\n","ring-type                    10\n","spore-print-color             9\n","habitat                      10\n","season                        4\n","dtype: int64\n"]}],"source":["unique_counts = {}\n","\n","for column in train_df.columns:\n","    unique_counts[column] = train_df[column].nunique()\n","\n","unique_counts_series = pd.Series(unique_counts)\n","\n","print(unique_counts_series)"]},{"cell_type":"markdown","id":"1e4263e1","metadata":{"papermill":{"duration":0.014992,"end_time":"2024-08-27T23:39:58.896017","exception":false,"start_time":"2024-08-27T23:39:58.881025","status":"completed"},"tags":[]},"source":["## 3.2 Prepare Data for Model\n","Alright, we handled our null values and data artifacts. Below, we are going to one hot encode our categorical values. I won't explain one hot encoding, but you can find a summary [here](https://www.geeksforgeeks.org/ml-one-hot-encoding/). We are also going to normalize our continuous variables between 0 and 1 for the NN. High level: we normalize our continuous variables to help with training our NN."]},{"cell_type":"code","execution_count":13,"id":"466f0ea0","metadata":{"execution":{"iopub.execute_input":"2024-08-27T23:39:58.927311Z","iopub.status.busy":"2024-08-27T23:39:58.926983Z","iopub.status.idle":"2024-08-27T23:40:12.578756Z","shell.execute_reply":"2024-08-27T23:40:12.577736Z"},"papermill":{"duration":13.670943,"end_time":"2024-08-27T23:40:12.5821","exception":false,"start_time":"2024-08-27T23:39:58.911157","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>cap-diameter</th>\n","      <th>stem-height</th>\n","      <th>stem-width</th>\n","      <th>class_e</th>\n","      <th>class_p</th>\n","      <th>cap-shape_b</th>\n","      <th>cap-shape_c</th>\n","      <th>cap-shape_f</th>\n","      <th>cap-shape_not</th>\n","      <th>cap-shape_null</th>\n","      <th>cap-shape_o</th>\n","      <th>cap-shape_p</th>\n","      <th>cap-shape_s</th>\n","      <th>cap-shape_x</th>\n","      <th>cap-surface_d</th>\n","      <th>cap-surface_e</th>\n","      <th>cap-surface_g</th>\n","      <th>cap-surface_h</th>\n","      <th>cap-surface_i</th>\n","      <th>cap-surface_k</th>\n","      <th>cap-surface_l</th>\n","      <th>cap-surface_not</th>\n","      <th>cap-surface_null</th>\n","      <th>cap-surface_s</th>\n","      <th>cap-surface_t</th>\n","      <th>cap-surface_w</th>\n","      <th>cap-surface_y</th>\n","      <th>cap-color_b</th>\n","      <th>cap-color_e</th>\n","      <th>cap-color_g</th>\n","      <th>cap-color_k</th>\n","      <th>cap-color_l</th>\n","      <th>cap-color_n</th>\n","      <th>cap-color_not</th>\n","      <th>cap-color_null</th>\n","      <th>cap-color_o</th>\n","      <th>cap-color_p</th>\n","      <th>cap-color_r</th>\n","      <th>cap-color_u</th>\n","      <th>cap-color_w</th>\n","      <th>cap-color_y</th>\n","      <th>does-bruise-or-bleed_f</th>\n","      <th>does-bruise-or-bleed_not</th>\n","      <th>does-bruise-or-bleed_null</th>\n","      <th>does-bruise-or-bleed_t</th>\n","      <th>gill-attachment_a</th>\n","      <th>gill-attachment_d</th>\n","      <th>gill-attachment_e</th>\n","      <th>gill-attachment_f</th>\n","      <th>gill-attachment_not</th>\n","      <th>gill-attachment_null</th>\n","      <th>gill-attachment_p</th>\n","      <th>gill-attachment_s</th>\n","      <th>gill-attachment_x</th>\n","      <th>gill-spacing_c</th>\n","      <th>gill-spacing_d</th>\n","      <th>gill-spacing_f</th>\n","      <th>gill-spacing_not</th>\n","      <th>gill-spacing_null</th>\n","      <th>gill-color_b</th>\n","      <th>gill-color_e</th>\n","      <th>gill-color_f</th>\n","      <th>gill-color_g</th>\n","      <th>gill-color_k</th>\n","      <th>gill-color_n</th>\n","      <th>gill-color_not</th>\n","      <th>gill-color_null</th>\n","      <th>gill-color_o</th>\n","      <th>gill-color_p</th>\n","      <th>gill-color_r</th>\n","      <th>gill-color_u</th>\n","      <th>gill-color_w</th>\n","      <th>gill-color_y</th>\n","      <th>stem-root_b</th>\n","      <th>stem-root_c</th>\n","      <th>stem-root_f</th>\n","      <th>stem-root_not</th>\n","      <th>stem-root_null</th>\n","      <th>stem-root_r</th>\n","      <th>stem-root_s</th>\n","      <th>stem-surface_g</th>\n","      <th>stem-surface_h</th>\n","      <th>stem-surface_i</th>\n","      <th>stem-surface_k</th>\n","      <th>stem-surface_not</th>\n","      <th>stem-surface_null</th>\n","      <th>stem-surface_s</th>\n","      <th>stem-surface_t</th>\n","      <th>stem-surface_y</th>\n","      <th>stem-color_b</th>\n","      <th>stem-color_e</th>\n","      <th>stem-color_g</th>\n","      <th>stem-color_k</th>\n","      <th>stem-color_l</th>\n","      <th>stem-color_n</th>\n","      <th>stem-color_not</th>\n","      <th>stem-color_null</th>\n","      <th>stem-color_o</th>\n","      <th>stem-color_p</th>\n","      <th>stem-color_r</th>\n","      <th>stem-color_u</th>\n","      <th>stem-color_w</th>\n","      <th>stem-color_y</th>\n","      <th>veil-type_not</th>\n","      <th>veil-type_null</th>\n","      <th>veil-type_u</th>\n","      <th>veil-color_e</th>\n","      <th>veil-color_k</th>\n","      <th>veil-color_n</th>\n","      <th>veil-color_not</th>\n","      <th>veil-color_null</th>\n","      <th>veil-color_u</th>\n","      <th>veil-color_w</th>\n","      <th>veil-color_y</th>\n","      <th>has-ring_f</th>\n","      <th>has-ring_not</th>\n","      <th>has-ring_null</th>\n","      <th>has-ring_t</th>\n","      <th>ring-type_e</th>\n","      <th>ring-type_f</th>\n","      <th>ring-type_g</th>\n","      <th>ring-type_l</th>\n","      <th>ring-type_m</th>\n","      <th>ring-type_not</th>\n","      <th>ring-type_null</th>\n","      <th>ring-type_p</th>\n","      <th>ring-type_r</th>\n","      <th>ring-type_z</th>\n","      <th>spore-print-color_g</th>\n","      <th>spore-print-color_k</th>\n","      <th>spore-print-color_n</th>\n","      <th>spore-print-color_not</th>\n","      <th>spore-print-color_null</th>\n","      <th>spore-print-color_p</th>\n","      <th>spore-print-color_r</th>\n","      <th>spore-print-color_u</th>\n","      <th>spore-print-color_w</th>\n","      <th>habitat_d</th>\n","      <th>habitat_g</th>\n","      <th>habitat_h</th>\n","      <th>habitat_l</th>\n","      <th>habitat_m</th>\n","      <th>habitat_not</th>\n","      <th>habitat_null</th>\n","      <th>habitat_p</th>\n","      <th>habitat_u</th>\n","      <th>habitat_w</th>\n","      <th>season_a</th>\n","      <th>season_s</th>\n","      <th>season_u</th>\n","      <th>season_w</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.109086</td>\n","      <td>0.050834</td>\n","      <td>0.149563</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.055907</td>\n","      <td>0.053990</td>\n","      <td>0.062974</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.086030</td>\n","      <td>0.077209</td>\n","      <td>0.096501</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.048097</td>\n","      <td>0.046889</td>\n","      <td>0.063460</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.072518</td>\n","      <td>0.037985</td>\n","      <td>0.081244</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   cap-diameter  stem-height  stem-width  class_e  class_p  cap-shape_b  \\\n","0      0.109086     0.050834    0.149563        1        0            0   \n","1      0.055907     0.053990    0.062974        0        1            0   \n","2      0.086030     0.077209    0.096501        1        0            0   \n","3      0.048097     0.046889    0.063460        1        0            0   \n","4      0.072518     0.037985    0.081244        1        0            0   \n","\n","   cap-shape_c  cap-shape_f  cap-shape_not  cap-shape_null  cap-shape_o  \\\n","0            0            1              0               0            0   \n","1            0            0              0               0            0   \n","2            0            1              0               0            0   \n","3            0            1              0               0            0   \n","4            0            0              0               0            0   \n","\n","   cap-shape_p  cap-shape_s  cap-shape_x  cap-surface_d  cap-surface_e  \\\n","0            0            0            0              0              0   \n","1            0            0            1              0              0   \n","2            0            0            0              0              0   \n","3            0            0            0              0              0   \n","4            0            0            1              0              0   \n","\n","   cap-surface_g  cap-surface_h  cap-surface_i  cap-surface_k  cap-surface_l  \\\n","0              0              0              0              0              0   \n","1              0              1              0              0              0   \n","2              0              0              0              0              0   \n","3              0              0              0              0              0   \n","4              0              0              0              0              1   \n","\n","   cap-surface_not  cap-surface_null  cap-surface_s  cap-surface_t  \\\n","0                0                 0              1              0   \n","1                0                 0              0              0   \n","2                0                 0              1              0   \n","3                0                 0              0              0   \n","4                0                 0              0              0   \n","\n","   cap-surface_w  cap-surface_y  cap-color_b  cap-color_e  cap-color_g  \\\n","0              0              0            0            0            0   \n","1              0              0            0            0            0   \n","2              0              0            1            0            0   \n","3              0              1            0            0            1   \n","4              0              0            0            0            0   \n","\n","   cap-color_k  cap-color_l  cap-color_n  cap-color_not  cap-color_null  \\\n","0            0            0            0              0               0   \n","1            0            0            0              0               0   \n","2            0            0            0              0               0   \n","3            0            0            0              0               0   \n","4            0            0            0              0               0   \n","\n","   cap-color_o  cap-color_p  cap-color_r  cap-color_u  cap-color_w  \\\n","0            0            0            0            1            0   \n","1            1            0            0            0            0   \n","2            0            0            0            0            0   \n","3            0            0            0            0            0   \n","4            0            0            0            0            1   \n","\n","   cap-color_y  does-bruise-or-bleed_f  does-bruise-or-bleed_not  \\\n","0            0                       1                         0   \n","1            0                       1                         0   \n","2            0                       1                         0   \n","3            0                       1                         0   \n","4            0                       1                         0   \n","\n","   does-bruise-or-bleed_null  does-bruise-or-bleed_t  gill-attachment_a  \\\n","0                          0                       0                  1   \n","1                          0                       0                  1   \n","2                          0                       0                  0   \n","3                          0                       0                  0   \n","4                          0                       0                  0   \n","\n","   gill-attachment_d  gill-attachment_e  gill-attachment_f  \\\n","0                  0                  0                  0   \n","1                  0                  0                  0   \n","2                  0                  0                  0   \n","3                  0                  0                  0   \n","4                  1                  0                  0   \n","\n","   gill-attachment_not  gill-attachment_null  gill-attachment_p  \\\n","0                    0                     0                  0   \n","1                    0                     0                  0   \n","2                    0                     0                  0   \n","3                    0                     0                  0   \n","4                    0                     0                  0   \n","\n","   gill-attachment_s  gill-attachment_x  gill-spacing_c  gill-spacing_d  \\\n","0                  0                  0               1               0   \n","1                  0                  0               1               0   \n","2                  0                  1               1               0   \n","3                  1                  0               0               0   \n","4                  0                  0               0               0   \n","\n","   gill-spacing_f  gill-spacing_not  gill-spacing_null  gill-color_b  \\\n","0               0                 0                  0             0   \n","1               0                 0                  0             0   \n","2               0                 0                  0             0   \n","3               0                 0                  1             0   \n","4               0                 0                  1             0   \n","\n","   gill-color_e  gill-color_f  gill-color_g  gill-color_k  gill-color_n  \\\n","0             0             0             0             0             0   \n","1             0             0             0             0             1   \n","2             0             0             0             0             0   \n","3             0             0             1             0             0   \n","4             0             0             0             0             0   \n","\n","   gill-color_not  gill-color_null  gill-color_o  gill-color_p  gill-color_r  \\\n","0               0                0             0             0             0   \n","1               0                0             0             0             0   \n","2               0                0             0             0             0   \n","3               0                0             0             0             0   \n","4               0                0             0             0             0   \n","\n","   gill-color_u  gill-color_w  gill-color_y  stem-root_b  stem-root_c  \\\n","0             0             1             0            0            0   \n","1             0             0             0            0            0   \n","2             0             1             0            0            0   \n","3             0             0             0            0            0   \n","4             0             1             0            0            0   \n","\n","   stem-root_f  stem-root_not  stem-root_null  stem-root_r  stem-root_s  \\\n","0            0              0               1            0            0   \n","1            0              0               1            0            0   \n","2            0              0               1            0            0   \n","3            0              0               1            0            0   \n","4            0              0               1            0            0   \n","\n","   stem-surface_g  stem-surface_h  stem-surface_i  stem-surface_k  \\\n","0               0               0               0               0   \n","1               0               0               0               0   \n","2               0               0               0               0   \n","3               0               0               0               0   \n","4               0               0               0               0   \n","\n","   stem-surface_not  stem-surface_null  stem-surface_s  stem-surface_t  \\\n","0                 0                  1               0               0   \n","1                 0                  0               0               0   \n","2                 0                  0               1               0   \n","3                 0                  1               0               0   \n","4                 0                  1               0               0   \n","\n","   stem-surface_y  stem-color_b  stem-color_e  stem-color_g  stem-color_k  \\\n","0               0             0             0             0             0   \n","1               1             0             0             0             0   \n","2               0             0             0             0             0   \n","3               0             0             0             0             0   \n","4               0             0             0             0             0   \n","\n","   stem-color_l  stem-color_n  stem-color_not  stem-color_null  stem-color_o  \\\n","0             0             0               0                0             0   \n","1             0             0               0                0             1   \n","2             0             1               0                0             0   \n","3             0             0               0                0             0   \n","4             0             0               0                0             0   \n","\n","   stem-color_p  stem-color_r  stem-color_u  stem-color_w  stem-color_y  \\\n","0             0             0             0             1             0   \n","1             0             0             0             0             0   \n","2             0             0             0             0             0   \n","3             0             0             0             1             0   \n","4             0             0             0             1             0   \n","\n","   veil-type_not  veil-type_null  veil-type_u  veil-color_e  veil-color_k  \\\n","0              0               1            0             0             0   \n","1              0               1            0             0             0   \n","2              0               1            0             0             0   \n","3              0               1            0             0             0   \n","4              0               1            0             0             0   \n","\n","   veil-color_n  veil-color_not  veil-color_null  veil-color_u  veil-color_w  \\\n","0             0               0                1             0             0   \n","1             0               0                1             0             0   \n","2             0               0                1             0             0   \n","3             0               0                1             0             0   \n","4             0               0                1             0             0   \n","\n","   veil-color_y  has-ring_f  has-ring_not  has-ring_null  has-ring_t  \\\n","0             0           1             0              0           0   \n","1             0           0             0              0           1   \n","2             0           1             0              0           0   \n","3             0           1             0              0           0   \n","4             0           1             0              0           0   \n","\n","   ring-type_e  ring-type_f  ring-type_g  ring-type_l  ring-type_m  \\\n","0            0            1            0            0            0   \n","1            0            0            0            0            0   \n","2            0            1            0            0            0   \n","3            0            1            0            0            0   \n","4            0            1            0            0            0   \n","\n","   ring-type_not  ring-type_null  ring-type_p  ring-type_r  ring-type_z  \\\n","0              0               0            0            0            0   \n","1              0               0            0            0            1   \n","2              0               0            0            0            0   \n","3              0               0            0            0            0   \n","4              0               0            0            0            0   \n","\n","   spore-print-color_g  spore-print-color_k  spore-print-color_n  \\\n","0                    0                    0                    0   \n","1                    0                    0                    0   \n","2                    0                    0                    0   \n","3                    0                    0                    0   \n","4                    0                    0                    0   \n","\n","   spore-print-color_not  spore-print-color_null  spore-print-color_p  \\\n","0                      0                       1                    0   \n","1                      0                       1                    0   \n","2                      0                       1                    0   \n","3                      0                       1                    0   \n","4                      0                       1                    0   \n","\n","   spore-print-color_r  spore-print-color_u  spore-print-color_w  habitat_d  \\\n","0                    0                    0                    0          1   \n","1                    0                    0                    0          1   \n","2                    0                    0                    0          0   \n","3                    0                    0                    0          1   \n","4                    0                    0                    0          0   \n","\n","   habitat_g  habitat_h  habitat_l  habitat_m  habitat_not  habitat_null  \\\n","0          0          0          0          0            0             0   \n","1          0          0          0          0            0             0   \n","2          0          0          1          0            0             0   \n","3          0          0          0          0            0             0   \n","4          1          0          0          0            0             0   \n","\n","   habitat_p  habitat_u  habitat_w  season_a  season_s  season_u  season_w  \n","0          0          0          0         1         0         0         0  \n","1          0          0          0         0         0         0         1  \n","2          0          0          0         0         0         0         1  \n","3          0          0          0         0         0         1         0  \n","4          0          0          0         1         0         0         0  "]},"execution_count":13,"metadata":{},"output_type":"execute_result"}],"source":["scaler = MinMaxScaler()\n","\n","df_encoded = pd.get_dummies(train_df, columns=train_df.select_dtypes(include=['object']).columns, dtype=int)\n","continuous_cols = df_encoded.select_dtypes(include=['float64']).columns\n","df_encoded[continuous_cols] = scaler.fit_transform(df_encoded[continuous_cols])\n","\n","df_encoded = df_encoded.drop(['id'], axis=1)\n","\n","pd.set_option('display.max_columns', None)\n","df_encoded.head()"]},{"cell_type":"markdown","id":"08dbf39f","metadata":{"papermill":{"duration":0.018125,"end_time":"2024-08-27T23:40:12.663229","exception":false,"start_time":"2024-08-27T23:40:12.645104","status":"completed"},"tags":[]},"source":["## 3.3 Creating our Train and Dev Sets\n","Since our data set is so large, we will be able to train a very accurate deep neural network. Additionally, we will be able to have three data sets- train, dev, and test sets. We will want our largest dataset to be the training set (duh) while we can keep our other two datasets relatively small <50k rows. Below, we do a 99.98%/.01%/.01% data split (very small!). "]},{"cell_type":"code","execution_count":14,"id":"b09eb413","metadata":{"execution":{"iopub.execute_input":"2024-08-27T23:40:12.701998Z","iopub.status.busy":"2024-08-27T23:40:12.70112Z","iopub.status.idle":"2024-08-27T23:40:13.888525Z","shell.execute_reply":"2024-08-27T23:40:13.887419Z"},"papermill":{"duration":1.209771,"end_time":"2024-08-27T23:40:13.891164","exception":false,"start_time":"2024-08-27T23:40:12.681393","status":"completed"},"tags":[]},"outputs":[],"source":["df_encoded_x = df_encoded.drop(columns=['class_e', 'class_p'])\n","df_encoded_y = df_encoded['class_e']"]},{"cell_type":"code","execution_count":15,"id":"d8fa4727","metadata":{"execution":{"iopub.execute_input":"2024-08-27T23:40:13.928094Z","iopub.status.busy":"2024-08-27T23:40:13.927451Z","iopub.status.idle":"2024-08-27T23:40:19.154588Z","shell.execute_reply":"2024-08-27T23:40:19.153485Z"},"papermill":{"duration":5.247503,"end_time":"2024-08-27T23:40:19.156713","exception":false,"start_time":"2024-08-27T23:40:13.90921","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["Train set size: 3054606 rows\n","Dev set size: 31169 rows\n","Test set size: 31170 rows\n"]}],"source":["train_data_x, temp_data_x, train_data_y, temp_data_y = train_test_split(df_encoded_x, df_encoded_y, test_size=0.02, random_state=16)\n","dev_data_x, test_data_x, dev_data_y, test_data_y = train_test_split(temp_data_x, temp_data_y, test_size=.5, random_state=16)\n","\n","print(f\"Train set size: {len(train_data_x)} rows\")\n","print(f\"Dev set size: {len(dev_data_x)} rows\")\n","print(f\"Test set size: {len(test_data_x)} rows\")"]},{"cell_type":"markdown","id":"8201ffcd","metadata":{"papermill":{"duration":0.016956,"end_time":"2024-08-27T23:40:19.190893","exception":false,"start_time":"2024-08-27T23:40:19.173937","status":"completed"},"tags":[]},"source":["# 4 Initial Model Testing\n","## 4.1 Define a Custom MCC Metric Function\n","Remember that scoring metric we mentioned earlier? Tensorflow has depreciated that [metric](https://www.tensorflow.org/addons/api_docs/python/tfa/metrics/MatthewsCorrelationCoefficient), so we will have to define our own."]},{"cell_type":"code","execution_count":16,"id":"5d2d45e6","metadata":{"execution":{"iopub.execute_input":"2024-08-27T23:40:19.226919Z","iopub.status.busy":"2024-08-27T23:40:19.226047Z","iopub.status.idle":"2024-08-27T23:40:19.234616Z","shell.execute_reply":"2024-08-27T23:40:19.233712Z"},"papermill":{"duration":0.028954,"end_time":"2024-08-27T23:40:19.236725","exception":false,"start_time":"2024-08-27T23:40:19.207771","status":"completed"},"tags":[]},"outputs":[],"source":["def mcc(y_true, y_pred):\n","    y_pred_pos = tf.round(tf.clip_by_value(y_pred, 0, 1))\n","    y_pred_neg = 1 - y_pred_pos\n","\n","    y_true_pos = tf.round(tf.clip_by_value(y_true, 0, 1))\n","    y_true_neg = 1 - y_true_pos\n","\n","    y_pred_pos = tf.cast(y_pred_pos, tf.float32)\n","    y_pred_neg = tf.cast(y_pred_neg, tf.float32)\n","    y_true_pos = tf.cast(y_true_pos, tf.float32)\n","    y_true_neg = tf.cast(y_true_neg, tf.float32)\n","\n","    tp = tf.reduce_sum(y_true_pos * y_pred_pos)\n","    tn = tf.reduce_sum(y_true_neg * y_pred_neg)\n","    fp = tf.reduce_sum(y_true_neg * y_pred_pos)\n","    fn = tf.reduce_sum(y_true_pos * y_pred_neg)\n","\n","    numerator = (tp * tn) - (fp * fn)\n","    denominator = tf.sqrt((tp + fp) * (tp + fn) * (tn + fp) * (tn + fn))\n","\n","    mcc = tf.where(tf.math.equal(denominator, 0), 0.0, numerator / denominator)\n","    return mcc"]},{"cell_type":"markdown","id":"f059b25b","metadata":{"papermill":{"duration":0.017075,"end_time":"2024-08-27T23:40:19.27189","exception":false,"start_time":"2024-08-27T23:40:19.254815","status":"completed"},"tags":[]},"source":["## 4.2 Define a DNN\n","Below we will define a very simple DNN, with two hidden layers, with the specific parameters listed in the code. We are going to use binary cross entropy as our loss function, but in future iterations, we will consider using our custom MCC function as the loss function. \n","\n","Beware, using a custom loss function can introduce unforeseen complexity and issues in an optimization problem. Training our model using binary cross entropy and our custom loss function will give us a good idea of comparison between the two."]},{"cell_type":"code","execution_count":17,"id":"515711fc","metadata":{"execution":{"iopub.execute_input":"2024-08-27T23:40:19.308241Z","iopub.status.busy":"2024-08-27T23:40:19.307872Z","iopub.status.idle":"2024-08-27T23:40:20.087889Z","shell.execute_reply":"2024-08-27T23:40:20.086852Z"},"papermill":{"duration":0.80076,"end_time":"2024-08-27T23:40:20.090334","exception":false,"start_time":"2024-08-27T23:40:19.289574","status":"completed"},"tags":[]},"outputs":[],"source":["model = tf.keras.Sequential([\n","    tf.keras.layers.Input(shape=(train_data_x.shape[1],)),\n","    tf.keras.layers.Dense(128, activation='relu'),\n","    tf.keras.layers.Dense(64, activation='relu'),\n","    tf.keras.layers.Dense(1, activation='sigmoid')\n","])\n","\n","\n","model.compile(optimizer='adam',\n","              loss='binary_crossentropy',\n","              metrics=[mcc])"]},{"cell_type":"code","execution_count":18,"id":"62e38318","metadata":{"execution":{"iopub.execute_input":"2024-08-27T23:40:20.12896Z","iopub.status.busy":"2024-08-27T23:40:20.127899Z","iopub.status.idle":"2024-08-27T23:41:19.750635Z","shell.execute_reply":"2024-08-27T23:41:19.749639Z"},"papermill":{"duration":59.644985,"end_time":"2024-08-27T23:41:19.753062","exception":false,"start_time":"2024-08-27T23:40:20.108077","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["Epoch 1/5\n","\u001b[1m  93/5967\u001b[0m \u001b[37m━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m9s\u001b[0m 2ms/step - loss: 0.5165 - mcc: 0.4967 "]},{"name":"stderr","output_type":"stream","text":["WARNING: All log messages before absl::InitializeLog() is called are written to STDERR\n","I0000 00:00:1724802028.793658      66 device_compiler.h:186] Compiled cluster using XLA!  This line is logged at most once for the lifetime of the process.\n","W0000 00:00:1724802028.810771      66 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"]},{"name":"stdout","output_type":"stream","text":["\u001b[1m5967/5967\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m14s\u001b[0m 2ms/step - loss: 0.0769 - mcc: 0.9516 - val_loss: 0.0399 - val_mcc: 0.9820\n","Epoch 2/5\n","\u001b[1m5967/5967\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 2ms/step - loss: 0.0419 - mcc: 0.9815 - val_loss: 0.0389 - val_mcc: 0.9828\n","Epoch 3/5\n","\u001b[1m5967/5967\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 2ms/step - loss: 0.0408 - mcc: 0.9820 - val_loss: 0.0386 - val_mcc: 0.9829\n","Epoch 4/5\n","\u001b[1m5967/5967\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 2ms/step - loss: 0.0397 - mcc: 0.9826 - val_loss: 0.0370 - val_mcc: 0.9837\n","Epoch 5/5\n","\u001b[1m5967/5967\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 2ms/step - loss: 0.0395 - mcc: 0.9829 - val_loss: 0.0378 - val_mcc: 0.9829\n"]}],"source":["DNN = model.fit(train_data_x, train_data_y, epochs=5, batch_size=512, validation_data = (dev_data_x, dev_data_y))\n"]},{"cell_type":"markdown","id":"99457bb1","metadata":{"papermill":{"duration":0.092318,"end_time":"2024-08-27T23:41:19.939563","exception":false,"start_time":"2024-08-27T23:41:19.847245","status":"completed"},"tags":[]},"source":["Already we see our model performing very well in just 5 epcohs. \n","# 5 Initial Model Validation\n","## 5.1 Loss"]},{"cell_type":"code","execution_count":19,"id":"91cd0bd7","metadata":{"execution":{"iopub.execute_input":"2024-08-27T23:41:20.125939Z","iopub.status.busy":"2024-08-27T23:41:20.125089Z","iopub.status.idle":"2024-08-27T23:41:20.454244Z","shell.execute_reply":"2024-08-27T23:41:20.453349Z"},"papermill":{"duration":0.424673,"end_time":"2024-08-27T23:41:20.456521","exception":false,"start_time":"2024-08-27T23:41:20.031848","status":"completed"},"tags":[]},"outputs":[{"data":{"image/png":"","text/plain":["<Figure size 1000x600 with 1 Axes>"]},"metadata":{},"output_type":"display_data"}],"source":["plt.figure(figsize=(10, 6))\n","plt.plot(DNN.history['loss'], label='Training Loss')\n","plt.plot(DNN.history['val_loss'], label='Validation Loss')\n","plt.title('Training and Validation Loss')\n","plt.xlabel('Epochs')\n","plt.ylabel('Loss')\n","plt.legend()\n","plt.show()"]},{"cell_type":"markdown","id":"36a9c803","metadata":{"papermill":{"duration":0.092704,"end_time":"2024-08-27T23:41:20.642455","exception":false,"start_time":"2024-08-27T23:41:20.549751","status":"completed"},"tags":[]},"source":["## 5.2 MCC Metric"]},{"cell_type":"code","execution_count":20,"id":"71731a91","metadata":{"execution":{"iopub.execute_input":"2024-08-27T23:41:20.831861Z","iopub.status.busy":"2024-08-27T23:41:20.83119Z","iopub.status.idle":"2024-08-27T23:41:21.155084Z","shell.execute_reply":"2024-08-27T23:41:21.154016Z"},"papermill":{"duration":0.421643,"end_time":"2024-08-27T23:41:21.157706","exception":false,"start_time":"2024-08-27T23:41:20.736063","status":"completed"},"tags":[]},"outputs":[{"data":{"image/png":"","text/plain":["<Figure size 1000x600 with 1 Axes>"]},"metadata":{},"output_type":"display_data"}],"source":["plt.figure(figsize=(10, 6))\n","plt.plot(DNN.history['mcc'], label='Training MCC')\n","plt.plot(DNN.history['val_mcc'], label='Validation MCC')\n","plt.title('Training and Validation MCC')\n","plt.xlabel('Epochs')\n","plt.ylabel('MCC')\n","plt.legend()\n","plt.show()"]},{"cell_type":"code","execution_count":21,"id":"f9289867","metadata":{"execution":{"iopub.execute_input":"2024-08-27T23:41:21.37725Z","iopub.status.busy":"2024-08-27T23:41:21.376637Z","iopub.status.idle":"2024-08-27T23:41:21.384071Z","shell.execute_reply":"2024-08-27T23:41:21.382975Z"},"papermill":{"duration":0.120049,"end_time":"2024-08-27T23:41:21.387703","exception":false,"start_time":"2024-08-27T23:41:21.267654","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["Difference between training and validation MCC metric:\n","0.00011008977890014648\n"]}],"source":["print(f\"Difference between training and validation MCC metric:\\n{abs(DNN.history['mcc'][-1] - DNN.history['val_mcc'][-1])}\")"]},{"cell_type":"markdown","id":"df7abd98","metadata":{"papermill":{"duration":0.093728,"end_time":"2024-08-27T23:41:21.576464","exception":false,"start_time":"2024-08-27T23:41:21.482736","status":"completed"},"tags":[]},"source":["Our test data MCC metric is very low, which means our model fits very well to this set (low bias). The final difference between our training MCC metric and our validation MCC metric is also very small, which means our model is able to generalize efficently (low variance)!  \n","## 5.3 Test Data Set - Final Model Evaluation"]},{"cell_type":"code","execution_count":22,"id":"cf1dadd4","metadata":{"execution":{"iopub.execute_input":"2024-08-27T23:41:21.767298Z","iopub.status.busy":"2024-08-27T23:41:21.766927Z","iopub.status.idle":"2024-08-27T23:41:23.580045Z","shell.execute_reply":"2024-08-27T23:41:23.579156Z"},"papermill":{"duration":1.910863,"end_time":"2024-08-27T23:41:23.581967","exception":false,"start_time":"2024-08-27T23:41:21.671104","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["\u001b[1m975/975\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 1ms/step - loss: 0.0382 - mcc: 0.9835\n","Test Loss: 0.040573637932538986\n","Test Metrics: 0.9813230037689209\n"]}],"source":["test_loss, test_metrics = model.evaluate(test_data_x, test_data_y)\n","\n","print(f\"Test Loss: {test_loss}\")\n","print(f\"Test Metrics: {test_metrics}\")"]},{"cell_type":"code","execution_count":23,"id":"a60dee59","metadata":{"execution":{"iopub.execute_input":"2024-08-27T23:41:23.777314Z","iopub.status.busy":"2024-08-27T23:41:23.776881Z","iopub.status.idle":"2024-08-27T23:41:23.782709Z","shell.execute_reply":"2024-08-27T23:41:23.781746Z"},"papermill":{"duration":0.106427,"end_time":"2024-08-27T23:41:23.785119","exception":false,"start_time":"2024-08-27T23:41:23.678692","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["Difference between training and test MCC metric:\n","0.001482844352722168\n","\n","Difference between validation and test MCC metric:\n","0.0015929341316223145\n"]}],"source":["print(f\"Difference between training and test MCC metric:\\n{abs(DNN.history['mcc'][-1] - test_metrics)}\")\n","print(f\"\\nDifference between validation and test MCC metric:\\n{abs(DNN.history['val_mcc'][-1] - test_metrics)}\")"]},{"cell_type":"markdown","id":"c36e3e7d","metadata":{"papermill":{"duration":0.103237,"end_time":"2024-08-27T23:41:23.990788","exception":false,"start_time":"2024-08-27T23:41:23.887551","status":"completed"},"tags":[]},"source":["What we are looking for here is our training, validation, and test metric. \n","\n","If the difference going from training -> test data is high, that means we might have overfitted our model to the training and validation data (high variance). \n","\n","If the difference going from validation -> test data is high, that means we might have just overfitted on the validation data. This could also mean that our validation data and our test data do not come from the same distribution, which is also a problem we should check. \n","\n","Since both differences in MCC metrics are low, this means our model is generalizing well to the test data set, and our test data set is probably from the same distribution of data as our validation data set. \n","# 6 Model Deployment\n","## 6.1 Data Aggregation Pipeline\n","It is time to deploy our model and see how it works in a production environment! First we will need to define a data pipeline to apply all our data aggregation methods in a streamlined fashion. We will reuse the code we wrote above for this process."]},{"cell_type":"code","execution_count":24,"id":"67812de0","metadata":{"execution":{"iopub.execute_input":"2024-08-27T23:41:24.192122Z","iopub.status.busy":"2024-08-27T23:41:24.191735Z","iopub.status.idle":"2024-08-27T23:41:24.201724Z","shell.execute_reply":"2024-08-27T23:41:24.200827Z"},"papermill":{"duration":0.114967,"end_time":"2024-08-27T23:41:24.203744","exception":false,"start_time":"2024-08-27T23:41:24.088777","status":"completed"},"tags":[]},"outputs":[],"source":["def remove_num_na(df):\n","    for col in df.select_dtypes(include=['float64']).columns:\n","        df[col] = df[col].fillna(0)\n","    return df\n","\n","def rewrite_values(df, threshold=0.1):\n","    for column in df.columns:\n","        if df[column].dtype == 'object':\n","            total_count = df[column].notna().sum()\n","            value_counts = df[column].value_counts()\n","            replace_dict = {\n","                value: 'not' if count / total_count < (threshold / 100) else value for value, count in value_counts.items()}\n","            df[column] = df[column].map(replace_dict).fillna('null')\n","    return df\n","\n","def normalize(df): \n","    scaler = MinMaxScaler()\n","    continuous_cols = df.select_dtypes(include=['float64']).columns\n","    df[continuous_cols] = scaler.fit_transform(df[continuous_cols])\n","    return df\n","\n","def encode(df): \n","    df = pd.get_dummies(df, columns=df.select_dtypes(include=['object']).columns, dtype=int)\n","    return df\n","    \n","def data_pipeline(df):\n","    df = remove_num_na(df)\n","    df = rewrite_values(df)\n","    df = normalize(df)\n","    df = encode(df)\n","    return df\n"]},{"cell_type":"code","execution_count":25,"id":"b2c21812","metadata":{"execution":{"iopub.execute_input":"2024-08-27T23:41:24.404006Z","iopub.status.busy":"2024-08-27T23:41:24.403629Z","iopub.status.idle":"2024-08-27T23:43:46.247431Z","shell.execute_reply":"2024-08-27T23:43:46.246286Z"},"papermill":{"duration":142.155005,"end_time":"2024-08-27T23:43:46.459124","exception":false,"start_time":"2024-08-27T23:41:24.304119","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["\u001b[1m64937/64937\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m74s\u001b[0m 1ms/step\n"]},{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>class</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>3116945</td>\n","      <td>e</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>3116946</td>\n","      <td>p</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3116947</td>\n","      <td>p</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3116948</td>\n","      <td>p</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>3116949</td>\n","      <td>e</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["        id class\n","0  3116945     e\n","1  3116946     p\n","2  3116947     p\n","3  3116948     p\n","4  3116949     e"]},"execution_count":25,"metadata":{},"output_type":"execute_result"}],"source":["test_ids = test_df['id']\n","test_features = test_df.drop(columns=['id'])\n","\n","df_prod = data_pipeline(test_features)\n","predictions = model.predict(df_prod)\n","\n","predicted_classes = (predictions > 0.5).astype(int)\n","submission_df = pd.DataFrame({\n","    'id': test_ids,\n","    'class' : pd.Series(predicted_classes.flatten()).map({1: \"e\", 0: \"p\"})\n","})\n","\n","submission_df.head()"]},{"cell_type":"markdown","id":"060a4061","metadata":{"papermill":{"duration":0.209687,"end_time":"2024-08-27T23:43:46.878356","exception":false,"start_time":"2024-08-27T23:43:46.668669","status":"completed"},"tags":[]},"source":["# 7 It's a Race Gary!!\n","So of course, the final thing to consider is that, yes, we are competing against 1k+ lovely other data scientist. So, what do we do? \n","\n","Hyperparameter tuning and ensemble! \n","## 7.1 Hyperparameter tuning \n","Since this is the meat and bones of squeezing the last bit of percentage points of your model, I will give you some generalized code to get you started. \n","\n","The below code will let you control parameters such as number of layers, units per layer (in sets of 32 nodes), dropout rate, and learning rate. You can also control the number of trials (how many different combinations we will search), number of executions (how many times each combination of parameters gets to try and be the best), epochs, and minibatch size."]},{"cell_type":"code","execution_count":26,"id":"bfb6f3bf","metadata":{"execution":{"iopub.execute_input":"2024-08-27T23:43:47.299377Z","iopub.status.busy":"2024-08-27T23:43:47.29848Z","iopub.status.idle":"2024-08-27T23:43:47.307899Z","shell.execute_reply":"2024-08-27T23:43:47.307002Z"},"papermill":{"duration":0.222278,"end_time":"2024-08-27T23:43:47.309784","exception":false,"start_time":"2024-08-27T23:43:47.087506","status":"completed"},"tags":[]},"outputs":[],"source":["class HyperModeler(HyperModel):\n","    def build(self, hp):\n","        model = keras.Sequential()\n","        model.add(keras.layers.InputLayer(input_shape=(train_data_x.shape[1],)))\n","\n","        for i in range(hp.Int('num_layers', 2, 10)):\n","            units = hp.Int(f'units_{i}', min_value=32, max_value=512, step=32)\n","            model.add(keras.layers.Dense(units=units, activation='relu'))\n","            \n","            if hp.Boolean('dropout'):\n","                dropout_rate = hp.Float(f'dropout_rate_{i}', min_value=0.1, max_value=0.5, step=0.1)\n","                model.add(keras.layers.Dropout(rate=dropout_rate))\n","        \n","        model.add(keras.layers.Dense(1, activation='sigmoid'))\n","\n","        learning_rate = hp.Choice('learning_rate', [1e-2, 1e-3, 1e-4])\n","        model.compile(\n","            optimizer=keras.optimizers.Adam(learning_rate=learning_rate),\n","            loss='binary_crossentropy',\n","            metrics=['accuracy']\n","        )\n","\n","        return model\n","\n","\n","# tuner = RandomSearch(\n","#     HyperModeler(),\n","#     objective=\"val_accuracy\",\n","#     max_trials=20,\n","#     executions_per_trial=2,\n","#     directory='kaggle',\n","#     project_name='s04e08'\n","# )\n","\n","\n","# with tf.device('/GPU:0'):\n","#     tuner.search(\n","#         train_data_x, train_data_y,\n","#         epochs=10,  \n","#         validation_data=(dev_data_x, dev_data_y),\n","#         batch_size=128,  \n","#     )"]},{"cell_type":"markdown","id":"b391990e","metadata":{"papermill":{"duration":0.208099,"end_time":"2024-08-27T23:43:47.726579","exception":false,"start_time":"2024-08-27T23:43:47.51848","status":"completed"},"tags":[]},"source":["Below is a hypertuned model that was loaded into our Kaggle notebook. Note the smaller loss than our untuned model and a slight increase in our test metric."]},{"cell_type":"code","execution_count":27,"id":"88ea637d","metadata":{"execution":{"iopub.execute_input":"2024-08-27T23:43:48.191019Z","iopub.status.busy":"2024-08-27T23:43:48.19066Z","iopub.status.idle":"2024-08-27T23:43:50.766035Z","shell.execute_reply":"2024-08-27T23:43:50.765129Z"},"papermill":{"duration":2.788601,"end_time":"2024-08-27T23:43:50.768088","exception":false,"start_time":"2024-08-27T23:43:47.979487","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["\u001b[1m975/975\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 2ms/step - loss: 0.0334 - mcc: 0.9851\n","Test Loss: 0.03596397489309311\n","Test Metrics: 0.9830251336097717\n"]}],"source":["model_path = '/kaggle/input/your-model-folder/model.h5'\n","\n","search1 = tf.keras.models.load_model('/kaggle/input/mushroomsearch/tensorflow2/default/1/search_model_2.h5', compile=False)\n","search1.compile(optimizer='adam', loss='binary_crossentropy', metrics=[mcc])\n","#search1.summary()\n","test_loss, test_metrics = search1.evaluate(test_data_x, test_data_y)\n","\n","print(f\"Test Loss: {test_loss}\")\n","print(f\"Test Metrics: {test_metrics}\")"]},{"cell_type":"markdown","id":"5314fd2d","metadata":{"papermill":{"duration":0.21381,"end_time":"2024-08-27T23:43:51.195786","exception":false,"start_time":"2024-08-27T23:43:50.981976","status":"completed"},"tags":[]},"source":["## 7.2 Ensemble with Multiple Models\n","### 7.2.1 Model Codes\n","#### 7.2.1.1 Random Forest Classifier\n","Below you will find some Random Forest Classifier code to get you started. \n","\n","A couple notes about the Random Forest. We do not need to normalize or standardize our continuous data values. In addition, training a RFC on 3 million+ rows of data is quite **computationally expensive**. It is highly recommended to shrink the dataset down to about a million rows. \n","\n","Finally, our RFC can be (and should be) used for feature importance selection. The code below will graph the importance for each feature."]},{"cell_type":"code","execution_count":28,"id":"757751c7","metadata":{"execution":{"iopub.execute_input":"2024-08-27T23:43:51.621189Z","iopub.status.busy":"2024-08-27T23:43:51.620216Z","iopub.status.idle":"2024-08-27T23:43:51.624689Z","shell.execute_reply":"2024-08-27T23:43:51.623748Z"},"papermill":{"duration":0.21873,"end_time":"2024-08-27T23:43:51.626733","exception":false,"start_time":"2024-08-27T23:43:51.408003","status":"completed"},"tags":[]},"outputs":[],"source":["run = False"]},{"cell_type":"code","execution_count":29,"id":"36137b04","metadata":{"execution":{"iopub.execute_input":"2024-08-27T23:43:52.05316Z","iopub.status.busy":"2024-08-27T23:43:52.052319Z","iopub.status.idle":"2024-08-27T23:43:52.061774Z","shell.execute_reply":"2024-08-27T23:43:52.060885Z"},"papermill":{"duration":0.223719,"end_time":"2024-08-27T23:43:52.063598","exception":false,"start_time":"2024-08-27T23:43:51.839879","status":"completed"},"tags":[]},"outputs":[],"source":["if run: \n","    train_df = data_pipeline(train_df)\n","    X = train_df.drop(columns=['class_e', 'class_p'])\n","    y = train_df['class_e']\n","\n","    train_x, temp_x, train_y, temp_y = train_test_split(X, y, test_size=0.3, random_state=16)\n","    drop_x, val_x, drop_y, val_y = train_test_split(temp_x, temp_y, test_size=0.015, random_state=16)\n","\n","\n","    print(\"Training...\")\n","    model = RandomForestClassifier(\n","        n_estimators=50, \n","        max_depth=15, \n","        min_samples_split=10, \n","        min_samples_leaf=5, \n","        random_state=16\n","    )\n","    model.fit(train_x, train_y)\n","    y_pred = model.predict(val_x)\n","\n","    print(classification_report(val_y, y_pred))\n","    mcc = matthews_corrcoef(val_y, y_pred)\n","    print(f'Matthews Correlation Coefficient: {mcc:.5f}')\n","\n","    feature_importances = model.feature_importances_\n","    feature_names = X.columns\n","    indices = np.argsort(feature_importances)[::-1]\n","\n","    # Plot feature importances\n","    plt.figure(figsize=(12, 8))\n","    plt.title(\"Feature Importance - Random Forest\")\n","    plt.bar(range(X.shape[1]), feature_importances[indices], align=\"center\")\n","    plt.xticks(range(X.shape[1]), feature_names[indices], rotation=90)\n","    plt.tight_layout()\n","    plt.show()"]},{"cell_type":"markdown","id":"a63152b4","metadata":{"papermill":{"duration":0.211238,"end_time":"2024-08-27T23:43:52.485113","exception":false,"start_time":"2024-08-27T23:43:52.273875","status":"completed"},"tags":[]},"source":["#### 7.2.1.2 XGBoost\n","Just like our RFC we do not need to normalize or standardize our data. We call the datapile here because we are lazy. With XGBoost, we do not need to shrink our dataset down. \n","\n","XGBoost can also be used for feature selection and is interesting to compare to our RFC. \n","\n","Again, some boiler plate XGBoost code is included to get you started. "]},{"cell_type":"code","execution_count":30,"id":"6d3c551e","metadata":{"execution":{"iopub.execute_input":"2024-08-27T23:43:52.90823Z","iopub.status.busy":"2024-08-27T23:43:52.907523Z","iopub.status.idle":"2024-08-27T23:43:52.917243Z","shell.execute_reply":"2024-08-27T23:43:52.916376Z"},"papermill":{"duration":0.222989,"end_time":"2024-08-27T23:43:52.919084","exception":false,"start_time":"2024-08-27T23:43:52.696095","status":"completed"},"tags":[]},"outputs":[],"source":["if run: \n","    train_df = pd.read_csv(\"clean_df.csv\")\n","    X = train_df.drop(columns=['class_e', 'class_p'])\n","    y = train_df['class_e']\n","\n","    train_x, val_x, train_y, val_y = train_test_split(X, y, test_size=0.01, random_state=16)\n","\n","    dtrain = xgb.DMatrix(train_x, label=train_y)\n","    dval = xgb.DMatrix(val_x, label=val_y)\n","\n","    def mcc_eval(preds, dtrain):\n","        labels = dtrain.get_label()\n","        preds = [1 if p > 0.5 else 0 for p in preds]\n","        mcc = matthews_corrcoef(labels, preds)\n","        return 'MCC', mcc\n","\n","    params = {\n","        'objective': 'binary:logistic',\n","        'learning_rate': 0.05,\n","        'max_depth': 10,\n","        'eval_metric': 'logloss',\n","        'verbosity': 2,\n","        'seed': 16\n","    }\n","\n","    evals = [(dtrain, 'train'), (dval, 'eval')]\n","    bst = xgb.train(params, dtrain, num_boost_round=100, evals=evals, custom_metric=mcc_eval, verbose_eval=True)\n","\n","    y_pred = bst.predict(dval)\n","    y_pred = [1 if y > 0.5 else 0 for y in y_pred]\n","\n","    mcc_score = matthews_corrcoef(val_y, y_pred)\n","    print(f'Matthews Correlation Coefficient: {mcc_score:.4f}')\n","\n","    xgb.plot_importance(bst, importance_type='weight', max_num_features=10)\n","    plt.show()"]}],"metadata":{"kaggle":{"accelerator":"none","dataSources":[{"databundleVersionId":9045607,"sourceId":76727,"sourceType":"competition"},{"isSourceIdPinned":true,"modelId":110213,"modelInstanceId":85977,"sourceId":102540,"sourceType":"modelInstanceVersion"}],"dockerImageVersionId":30746,"isGpuEnabled":false,"isInternetEnabled":true,"language":"python","sourceType":"notebook"},"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.10.13"},"papermill":{"default_parameters":{},"duration":316.379957,"end_time":"2024-08-27T23:43:56.590896","environment_variables":{},"exception":null,"input_path":"__notebook__.ipynb","output_path":"__notebook__.ipynb","parameters":{},"start_time":"2024-08-27T23:38:40.210939","version":"2.5.0"}},"nbformat":4,"nbformat_minor":5}