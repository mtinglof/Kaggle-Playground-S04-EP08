{"cells":[{"source":"<a href=\"https://www.kaggle.com/code/mtinglof/i-don-t-feel-so-good?scriptVersionId=193760068\" target=\"_blank\"><img align=\"left\" alt=\"Kaggle\" title=\"Open in Kaggle\" src=\"https://kaggle.com/static/images/open-in-kaggle.svg\"></a>","metadata":{},"cell_type":"markdown"},{"cell_type":"markdown","id":"d64be36b","metadata":{"papermill":{"duration":0.010004,"end_time":"2024-08-23T16:23:06.690268","exception":false,"start_time":"2024-08-23T16:23:06.680264","status":"completed"},"tags":[]},"source":["# Resources \n","## Links \n","* https://www.kaggle.com/code/satyaprakashshukl/mushroom-classification-analysis/notebook\n","* https://www.kaggle.com/code/ambrosm/pss4e8-eda-which-makes-sense#First-observations \n","* https://www.kaggle.com/code/annastasy/ps4e8-data-cleaning-and-eda-of-mushrooms\n","\n","## Code Imports"]},{"cell_type":"code","execution_count":1,"id":"ccf5aef7","metadata":{"_kg_hide-output":true,"execution":{"iopub.execute_input":"2024-08-23T16:23:06.710836Z","iopub.status.busy":"2024-08-23T16:23:06.710454Z","iopub.status.idle":"2024-08-23T16:23:23.95216Z","shell.execute_reply":"2024-08-23T16:23:23.951045Z"},"papermill":{"duration":17.255453,"end_time":"2024-08-23T16:23:23.955029","exception":false,"start_time":"2024-08-23T16:23:06.699576","status":"completed"},"tags":[]},"outputs":[{"name":"stderr","output_type":"stream","text":["2024-08-23 16:23:11.737671: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered\n","2024-08-23 16:23:11.737817: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered\n","2024-08-23 16:23:11.899366: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered\n"]}],"source":["import pandas as pd\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","import numpy as np\n","from sklearn.model_selection import train_test_split\n","import tensorflow as tf\n","from sklearn.preprocessing import MinMaxScaler\n","from sklearn.metrics import confusion_matrix\n","from tensorflow import keras\n","from keras_tuner import HyperModel\n","from keras_tuner.tuners import RandomSearch\n","from keras_tuner import Objective"]},{"cell_type":"markdown","id":"df4927f4","metadata":{"papermill":{"duration":0.009771,"end_time":"2024-08-23T16:23:23.974481","exception":false,"start_time":"2024-08-23T16:23:23.96471","status":"completed"},"tags":[]},"source":["# 1. Problem Definition\n","## 1.1 Scenario\n","\n","Welcome back! Today, our client has given us the task of binary classification of mushrooms. The client lives far out in a magical forest and needs an application to help her identify which mushrooms she can eat and which she cannot. Luckily for us, she brought with her an ancient tome of mushroom classification. The book is pretty old, though, and some of the text is messed up- so we will have to work around that. She is hoping that we can come up with a model, so she does not have to flip through every page of this massive book. Oh, and she's hoping that your model will not get her sick either! \n","\n","## 1.2 Scoring Metric\n","For our client, we will be using the Matthews correlation coefficient (MCC). What does this mean? The MCC is a scoring equation that is calculated using true positives (TP), true negatives (TN), false positives (FP), and false negatives (FN). For you nerds, here is the full equation. \n","\n","$$\n","\\text{MCC} = \\frac{(TP \\times TN) - (FP \\times FN)}{\\sqrt{(TP + FP) \\times (TP + FN) \\times (TN + FP) \\times (TN + FN)}}\n","$$\n","\n","The MCC is great for binary classification, especially where datasets are imbalanced in favor of one type of classification. The other thing to know is that this equation will give us a score from -1 to 1, where -1 is total misclassification, 0 is no predictive power (randomly guessing), and 1 is a perfect classification. \n","\n","# 2. Data Collection and Analysis\n","## 2.1 Import Data and Look at Raw Reads\n","Alright, let's look at this data that our client has collect from her massive tome.  "]},{"cell_type":"code","execution_count":2,"id":"a8a86420","metadata":{"execution":{"iopub.execute_input":"2024-08-23T16:23:23.995525Z","iopub.status.busy":"2024-08-23T16:23:23.994349Z","iopub.status.idle":"2024-08-23T16:23:42.773846Z","shell.execute_reply":"2024-08-23T16:23:42.772571Z"},"papermill":{"duration":18.792853,"end_time":"2024-08-23T16:23:42.776665","exception":false,"start_time":"2024-08-23T16:23:23.983812","status":"completed"},"tags":[]},"outputs":[],"source":["train_df = pd.read_csv(\"/kaggle/input/playground-series-s4e8/train.csv\")\n","test_df = pd.read_csv(\"/kaggle/input/playground-series-s4e8/test.csv\")"]},{"cell_type":"code","execution_count":3,"id":"9761792a","metadata":{"execution":{"iopub.execute_input":"2024-08-23T16:23:42.798334Z","iopub.status.busy":"2024-08-23T16:23:42.797424Z","iopub.status.idle":"2024-08-23T16:23:42.835571Z","shell.execute_reply":"2024-08-23T16:23:42.834258Z"},"papermill":{"duration":0.051401,"end_time":"2024-08-23T16:23:42.838236","exception":false,"start_time":"2024-08-23T16:23:42.786835","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>class</th>\n","      <th>cap-diameter</th>\n","      <th>cap-shape</th>\n","      <th>cap-surface</th>\n","      <th>cap-color</th>\n","      <th>does-bruise-or-bleed</th>\n","      <th>gill-attachment</th>\n","      <th>gill-spacing</th>\n","      <th>gill-color</th>\n","      <th>stem-height</th>\n","      <th>stem-width</th>\n","      <th>stem-root</th>\n","      <th>stem-surface</th>\n","      <th>stem-color</th>\n","      <th>veil-type</th>\n","      <th>veil-color</th>\n","      <th>has-ring</th>\n","      <th>ring-type</th>\n","      <th>spore-print-color</th>\n","      <th>habitat</th>\n","      <th>season</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>e</td>\n","      <td>8.80</td>\n","      <td>f</td>\n","      <td>s</td>\n","      <td>u</td>\n","      <td>f</td>\n","      <td>a</td>\n","      <td>c</td>\n","      <td>w</td>\n","      <td>4.51</td>\n","      <td>15.39</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>w</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>f</td>\n","      <td>f</td>\n","      <td>NaN</td>\n","      <td>d</td>\n","      <td>a</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>p</td>\n","      <td>4.51</td>\n","      <td>x</td>\n","      <td>h</td>\n","      <td>o</td>\n","      <td>f</td>\n","      <td>a</td>\n","      <td>c</td>\n","      <td>n</td>\n","      <td>4.79</td>\n","      <td>6.48</td>\n","      <td>NaN</td>\n","      <td>y</td>\n","      <td>o</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>t</td>\n","      <td>z</td>\n","      <td>NaN</td>\n","      <td>d</td>\n","      <td>w</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>e</td>\n","      <td>6.94</td>\n","      <td>f</td>\n","      <td>s</td>\n","      <td>b</td>\n","      <td>f</td>\n","      <td>x</td>\n","      <td>c</td>\n","      <td>w</td>\n","      <td>6.85</td>\n","      <td>9.93</td>\n","      <td>NaN</td>\n","      <td>s</td>\n","      <td>n</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>f</td>\n","      <td>f</td>\n","      <td>NaN</td>\n","      <td>l</td>\n","      <td>w</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>e</td>\n","      <td>3.88</td>\n","      <td>f</td>\n","      <td>y</td>\n","      <td>g</td>\n","      <td>f</td>\n","      <td>s</td>\n","      <td>NaN</td>\n","      <td>g</td>\n","      <td>4.16</td>\n","      <td>6.53</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>w</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>f</td>\n","      <td>f</td>\n","      <td>NaN</td>\n","      <td>d</td>\n","      <td>u</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>e</td>\n","      <td>5.85</td>\n","      <td>x</td>\n","      <td>l</td>\n","      <td>w</td>\n","      <td>f</td>\n","      <td>d</td>\n","      <td>NaN</td>\n","      <td>w</td>\n","      <td>3.37</td>\n","      <td>8.36</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>w</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>f</td>\n","      <td>f</td>\n","      <td>NaN</td>\n","      <td>g</td>\n","      <td>a</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   id class  cap-diameter cap-shape cap-surface cap-color  \\\n","0   0     e          8.80         f           s         u   \n","1   1     p          4.51         x           h         o   \n","2   2     e          6.94         f           s         b   \n","3   3     e          3.88         f           y         g   \n","4   4     e          5.85         x           l         w   \n","\n","  does-bruise-or-bleed gill-attachment gill-spacing gill-color  stem-height  \\\n","0                    f               a            c          w         4.51   \n","1                    f               a            c          n         4.79   \n","2                    f               x            c          w         6.85   \n","3                    f               s          NaN          g         4.16   \n","4                    f               d          NaN          w         3.37   \n","\n","   stem-width stem-root stem-surface stem-color veil-type veil-color has-ring  \\\n","0       15.39       NaN          NaN          w       NaN        NaN        f   \n","1        6.48       NaN            y          o       NaN        NaN        t   \n","2        9.93       NaN            s          n       NaN        NaN        f   \n","3        6.53       NaN          NaN          w       NaN        NaN        f   \n","4        8.36       NaN          NaN          w       NaN        NaN        f   \n","\n","  ring-type spore-print-color habitat season  \n","0         f               NaN       d      a  \n","1         z               NaN       d      w  \n","2         f               NaN       l      w  \n","3         f               NaN       d      u  \n","4         f               NaN       g      a  "]},"execution_count":3,"metadata":{},"output_type":"execute_result"}],"source":["pd.set_option('display.max_columns', None)\n","train_df.head()"]},{"cell_type":"code","execution_count":4,"id":"7bd408cc","metadata":{"execution":{"iopub.execute_input":"2024-08-23T16:23:42.859643Z","iopub.status.busy":"2024-08-23T16:23:42.858655Z","iopub.status.idle":"2024-08-23T16:23:42.884115Z","shell.execute_reply":"2024-08-23T16:23:42.882866Z"},"papermill":{"duration":0.038802,"end_time":"2024-08-23T16:23:42.886658","exception":false,"start_time":"2024-08-23T16:23:42.847856","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 2077964 entries, 0 to 2077963\n","Data columns (total 21 columns):\n"," #   Column                Dtype  \n","---  ------                -----  \n"," 0   id                    int64  \n"," 1   cap-diameter          float64\n"," 2   cap-shape             object \n"," 3   cap-surface           object \n"," 4   cap-color             object \n"," 5   does-bruise-or-bleed  object \n"," 6   gill-attachment       object \n"," 7   gill-spacing          object \n"," 8   gill-color            object \n"," 9   stem-height           float64\n"," 10  stem-width            float64\n"," 11  stem-root             object \n"," 12  stem-surface          object \n"," 13  stem-color            object \n"," 14  veil-type             object \n"," 15  veil-color            object \n"," 16  has-ring              object \n"," 17  ring-type             object \n"," 18  spore-print-color     object \n"," 19  habitat               object \n"," 20  season                object \n","dtypes: float64(3), int64(1), object(17)\n","memory usage: 332.9+ MB\n"]}],"source":["test_df.info()"]},{"cell_type":"markdown","id":"1caddcfe","metadata":{"papermill":{"duration":0.009736,"end_time":"2024-08-23T16:23:42.907335","exception":false,"start_time":"2024-08-23T16:23:42.897599","status":"completed"},"tags":[]},"source":["## 2.2 Visualizations\n","The biggest problem we are going to have with this dataset is the number of artifacts that can be found in each column. "]},{"cell_type":"code","execution_count":5,"id":"99e242ea","metadata":{"execution":{"iopub.execute_input":"2024-08-23T16:23:42.92997Z","iopub.status.busy":"2024-08-23T16:23:42.929553Z","iopub.status.idle":"2024-08-23T16:23:44.491063Z","shell.execute_reply":"2024-08-23T16:23:44.489744Z"},"papermill":{"duration":1.57573,"end_time":"2024-08-23T16:23:44.49363","exception":false,"start_time":"2024-08-23T16:23:42.9179","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["id                      3116945\n","class                         2\n","cap-diameter               3913\n","cap-shape                    74\n","cap-surface                  83\n","cap-color                    78\n","does-bruise-or-bleed         26\n","gill-attachment              78\n","gill-spacing                 48\n","gill-color                   63\n","stem-height                2749\n","stem-width                 5836\n","stem-root                    38\n","stem-surface                 60\n","stem-color                   59\n","veil-type                    22\n","veil-color                   24\n","has-ring                     23\n","ring-type                    40\n","spore-print-color            32\n","habitat                      52\n","season                        4\n","dtype: int64\n"]}],"source":["unique_counts = {}\n","\n","for column in train_df.columns:\n","    unique_counts[column] = train_df[column].nunique()\n","\n","unique_counts_series = pd.Series(unique_counts)\n","\n","print(unique_counts_series)"]},{"cell_type":"markdown","id":"2b5d4701","metadata":{"papermill":{"duration":0.009819,"end_time":"2024-08-23T16:23:44.51322","exception":false,"start_time":"2024-08-23T16:23:44.503401","status":"completed"},"tags":[]},"source":["From the table above, we see that there are quite a few unique values per column. In addition, it does not seem that the data dictionary found [here](https://www.kaggle.com/competitions/playground-series-s4e8/data) or [here](https://archive.ics.uci.edu/dataset/848/secondary+mushroom+dataset) correlates exactly with our dataset. While it seems very close, both data dictionaries do not seem to describe all variables in our dataset. Lets see what percentage each value makes in each column with the code below. "]},{"cell_type":"code","execution_count":6,"id":"618b5ebd","metadata":{"_kg_hide-output":true,"collapsed":true,"execution":{"iopub.execute_input":"2024-08-23T16:23:44.535417Z","iopub.status.busy":"2024-08-23T16:23:44.535001Z","iopub.status.idle":"2024-08-23T16:23:47.066355Z","shell.execute_reply":"2024-08-23T16:23:47.064598Z"},"jupyter":{"outputs_hidden":true},"papermill":{"duration":2.544974,"end_time":"2024-08-23T16:23:47.068838","exception":false,"start_time":"2024-08-23T16:23:44.523864","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["Column: class\n","class\n","p    54.713702\n","e    45.286298\n","\n","Column: cap-shape\n","cap-shape\n","x            46.072177\n","f            21.695817\n","s            11.715019\n","b            10.223154\n","o             3.491765\n","p             3.431834\n","c             3.353326\n","d             0.002085\n","e             0.001925\n","n             0.001315\n","t             0.001155\n","w             0.001155\n","g             0.001091\n","y             0.001059\n","r             0.001027\n","a             0.000962\n","u             0.000866\n","z             0.000706\n","l             0.000674\n","i             0.000449\n","k             0.000417\n","h             0.000192\n","m             0.000064\n","8             0.000064\n","3.55          0.000064\n","7 x           0.000064\n","4.97          0.000064\n","3.25          0.000032\n","11.12         0.000032\n","3 x           0.000032\n","4.3           0.000032\n","7.41          0.000032\n","6.21          0.000032\n","8.29          0.000032\n","7.21          0.000032\n","54.78         0.000032\n","2.82          0.000032\n","20.25         0.000032\n","3.52          0.000032\n","3.04          0.000032\n","6.53          0.000032\n","2.63          0.000032\n","3.91          0.000032\n","6.44          0.000032\n","8.3           0.000032\n","7.6           0.000032\n","1.66          0.000032\n","17.44         0.000032\n","4.33          0.000032\n","3.37          0.000032\n","7.43          0.000032\n","9.13          0.000032\n","ring-type     0.000032\n","19.29         0.000032\n","5 f           0.000032\n","2.85          0.000032\n","is s          0.000032\n","4.22          0.000032\n","3.6           0.000032\n","21.56         0.000032\n","6 x           0.000032\n","24.16         0.000032\n","10.13         0.000032\n","b f           0.000032\n","is p          0.000032\n","0.82          0.000032\n","10.46         0.000032\n","2.77          0.000032\n","2.94          0.000032\n","12.62         0.000032\n","5.15          0.000032\n","19.04         0.000032\n","49.21         0.000032\n","19.06         0.000032\n","\n","Column: cap-surface\n","cap-surface\n","t                       18.838581\n","s                       15.739259\n","y                       13.402962\n","h                       11.629970\n","g                       10.782396\n","d                        8.456198\n","k                        5.268974\n","e                        4.894351\n","i                        4.637924\n","w                        4.490740\n","l                        1.834032\n","n                        0.003925\n","f                        0.003066\n","p                        0.002412\n","u                        0.002003\n","a                        0.001799\n","m                        0.001717\n","o                        0.001594\n","r                        0.001431\n","x                        0.001349\n","c                        0.001267\n","b                        0.000736\n","z                        0.000327\n","season                   0.000286\n","ring-type                0.000164\n","class                    0.000082\n","has-ring                 0.000082\n","does None                0.000082\n","does t                   0.000082\n","spore-print-color        0.000041\n","4.93                     0.000041\n","does-bruise-or-bleed     0.000041\n","10.1                     0.000041\n","2.79                     0.000041\n","spore-color              0.000041\n","2.11                     0.000041\n","0.88                     0.000041\n","2.81                     0.000041\n","is k                     0.000041\n","7.99                     0.000041\n","2.92                     0.000041\n","2.51                     0.000041\n","10.34                    0.000041\n","is y                     0.000041\n","3.64                     0.000041\n","3.33                     0.000041\n","41.91                    0.000041\n","12.2                     0.000041\n","8.01                     0.000041\n","9.22                     0.000041\n","is None                  0.000041\n","1.14                     0.000041\n","6.49                     0.000041\n","1.08                     0.000041\n","24.38                    0.000041\n","veil-color               0.000041\n","5.73                     0.000041\n","6.45                     0.000041\n","15.94                    0.000041\n","2.7                      0.000041\n","does l                   0.000041\n","5.07                     0.000041\n","cap-diameter             0.000041\n","1.43                     0.000041\n","7.14                     0.000041\n","is h                     0.000041\n","0.85                     0.000041\n","6.57                     0.000041\n","12.79                    0.000041\n","4.66                     0.000041\n","14.04                    0.000041\n","23.18                    0.000041\n","3.06                     0.000041\n","16.39                    0.000041\n","4.21                     0.000041\n","11.78                    0.000041\n","8.1                      0.000041\n","does h                   0.000041\n","1.42                     0.000041\n","has h                    0.000041\n","10.83                    0.000041\n","8.96                     0.000041\n","0.87                     0.000041\n","\n","Column: cap-color\n","cap-color\n","n                       43.617941\n","y                       12.404084\n","w                       12.173569\n","g                        6.763861\n","e                        6.329620\n","o                        5.737916\n","p                        2.946422\n","r                        2.510031\n","u                        2.347564\n","b                        1.967094\n","k                        1.921376\n","l                        1.269132\n","f                        0.001700\n","d                        0.001540\n","s                        0.001251\n","a                        0.000962\n","t                        0.000834\n","h                        0.000706\n","m                        0.000449\n","x                        0.000449\n","c                        0.000449\n","i                        0.000417\n","z                        0.000321\n","ring-type                0.000192\n","season                   0.000192\n","class                    0.000160\n","11.13                    0.000064\n","does-bruise-or-bleed     0.000064\n","3.34                     0.000064\n","2.7                      0.000032\n","8.57                     0.000032\n","17.93                    0.000032\n","2.57                     0.000032\n","11.92                    0.000032\n","3.08                     0.000032\n","2.82                     0.000032\n","4.24                     0.000032\n","17.19                    0.000032\n","20.02                    0.000032\n","7                        0.000032\n","2.9                      0.000032\n","6.36                     0.000032\n","5.91                     0.000032\n","10.56                    0.000032\n","26.89                    0.000032\n","4. n                     0.000032\n","20.62                    0.000032\n","stem-surface             0.000032\n","20                       0.000032\n","25.98                    0.000032\n","8.67                     0.000032\n","3.11                     0.000032\n","does n                   0.000032\n","5.41                     0.000032\n","10.1                     0.000032\n","2.05                     0.000032\n","13                       0.000032\n","7.72                     0.000032\n","6.76                     0.000032\n","7.15                     0.000032\n","12.89                    0.000032\n","8.83                     0.000032\n","24.75                    0.000032\n","22.38                    0.000032\n","1.51                     0.000032\n","17.94                    0.000032\n","6.9                      0.000032\n","3.57                     0.000032\n","4.89                     0.000032\n","6.2                      0.000032\n","21.53                    0.000032\n","6.41                     0.000032\n","4.98                     0.000032\n","3.95                     0.000032\n","6.59                     0.000032\n","5.25                     0.000032\n","veil-color               0.000032\n","9.02                     0.000032\n","\n","Column: does-bruise-or-bleed\n","does-bruise-or-bleed\n","f           82.444496\n","t           17.552007\n","w            0.000449\n","c            0.000353\n","h            0.000289\n","a            0.000225\n","b            0.000225\n","x            0.000225\n","y            0.000225\n","k            0.000192\n","s            0.000192\n","e            0.000128\n","l            0.000128\n","p            0.000128\n","d            0.000128\n","g            0.000096\n","z            0.000096\n","o            0.000096\n","i            0.000064\n","n            0.000064\n","r            0.000032\n","has-ring     0.000032\n","3.43         0.000032\n","4.42         0.000032\n","2.9          0.000032\n","u            0.000032\n","\n","Column: gill-attachment\n","gill-attachment\n","a                       24.914453\n","d                       22.724024\n","x                       13.917345\n","e                       11.641225\n","s                       11.393674\n","p                       10.763943\n","f                        4.626016\n","c                        0.002854\n","u                        0.002160\n","w                        0.001427\n","t                        0.001388\n","k                        0.001273\n","y                        0.001080\n","i                        0.000964\n","m                        0.000848\n","g                        0.000848\n","b                        0.000810\n","n                        0.000771\n","o                        0.000694\n","h                        0.000694\n","l                        0.000617\n","r                        0.000386\n","z                        0.000193\n","season                   0.000193\n","3.45                     0.000077\n","2.54                     0.000039\n","6.32                     0.000039\n","13.15                    0.000039\n","19.65                    0.000039\n","2.41                     0.000039\n","15.49                    0.000039\n","4.01                     0.000039\n","8.37                     0.000039\n","does f                   0.000039\n","6.11                     0.000039\n","28.7                     0.000039\n","1.51                     0.000039\n","1.37                     0.000039\n","28.15                    0.000039\n","7.09                     0.000039\n","9.88                     0.000039\n","2.67                     0.000039\n","18.21                    0.000039\n","1.48                     0.000039\n","5.93                     0.000039\n","1.32                     0.000039\n","16.27                    0.000039\n","11.26                    0.000039\n","2.79                     0.000039\n","is f                     0.000039\n","8.47                     0.000039\n","3.91                     0.000039\n","has d                    0.000039\n","11.62                    0.000039\n","32.54                    0.000039\n","does-bruise-or-bleed     0.000039\n","4.64                     0.000039\n","4.77                     0.000039\n","p p                      0.000039\n","7.92                     0.000039\n","8.79                     0.000039\n","does None                0.000039\n","has f                    0.000039\n","ring-type                0.000039\n","16.33                    0.000039\n","10.85                    0.000039\n","20.07                    0.000039\n","2.82                     0.000039\n","7.86                     0.000039\n","does                     0.000039\n","10.23                    0.000039\n","6.74                     0.000039\n","0.92                     0.000039\n","1                        0.000039\n","is a                     0.000039\n","3.71                     0.000039\n","50.44                    0.000039\n","13.94                    0.000039\n","\n","Column: gill-spacing\n","gill-spacing\n","c              71.619416\n","d              21.949411\n","f               6.423425\n","e               0.001291\n","a               0.000915\n","s               0.000861\n","b               0.000646\n","x               0.000430\n","t               0.000430\n","p               0.000377\n","k               0.000215\n","g               0.000215\n","l               0.000161\n","h               0.000161\n","r               0.000108\n","6.67            0.000108\n","y               0.000108\n","0               0.000108\n","3.81            0.000054\n","1.6             0.000054\n","n               0.000054\n","1.88            0.000054\n","does f          0.000054\n","4.09            0.000054\n","1.36            0.000054\n","3.24            0.000054\n","5.55            0.000054\n","5.42            0.000054\n","5.7             0.000054\n","3.62            0.000054\n","6.4             0.000054\n","24.38           0.000054\n","12.27           0.000054\n","1               0.000054\n","cap-surface     0.000054\n","w               0.000054\n","3.57            0.000054\n","i               0.000054\n","0.73            0.000054\n","4.04            0.000054\n","5.22            0.000054\n","3.92            0.000054\n","9.01            0.000054\n","class           0.000054\n","4.8             0.000054\n","2.69            0.000054\n","3.61            0.000054\n","55.13           0.000054\n","\n","Column: gill-color\n","gill-color\n","w                       29.886797\n","n                       17.433607\n","y                       15.061946\n","p                       11.024650\n","g                        6.806918\n","o                        5.040893\n","k                        4.105698\n","f                        3.840176\n","r                        2.014798\n","e                        1.798172\n","b                        1.515839\n","u                        1.456549\n","l                        0.001765\n","d                        0.001732\n","t                        0.001732\n","s                        0.001476\n","x                        0.001123\n","c                        0.000995\n","a                        0.000898\n","h                        0.000770\n","m                        0.000513\n","z                        0.000513\n","i                        0.000289\n","class                    0.000225\n","season                   0.000225\n","ring-type                0.000160\n","spacing                  0.000128\n","spore-print-color        0.000096\n","5                        0.000096\n","has-ring                 0.000096\n","habitat                  0.000064\n","18.03                    0.000064\n","e y                      0.000032\n","is y                     0.000032\n","1.91                     0.000032\n","does n                   0.000032\n","4.64                     0.000032\n","10.21                    0.000032\n","16.41                    0.000032\n","6.41                     0.000032\n","8.83                     0.000032\n","veil-type                0.000032\n","does-bruise-or-bleed     0.000032\n","20.44                    0.000032\n","6.4                      0.000032\n","10.07                    0.000032\n","20.6                     0.000032\n","7.59                     0.000032\n","4                        0.000032\n","0.92                     0.000032\n","18.12                    0.000032\n","3.39                     0.000032\n","does w                   0.000032\n","3.45                     0.000032\n","8.06                     0.000032\n","stem-root                0.000032\n","6.19                     0.000032\n","4.49                     0.000032\n","9.46                     0.000032\n","5.01                     0.000032\n","3.4                      0.000032\n","17                       0.000032\n","8.37                     0.000032\n","\n","Column: stem-root\n","stem-root\n","b                    46.065814\n","s                    32.492040\n","r                    13.281489\n","c                     7.943943\n","f                     0.165869\n","d                     0.006668\n","y                     0.003890\n","g                     0.003334\n","w                     0.003334\n","p                     0.003334\n","k                     0.003056\n","t                     0.002778\n","l                     0.002778\n","n                     0.002778\n","x                     0.002501\n","i                     0.002223\n","u                     0.002223\n","a                     0.001945\n","e                     0.001667\n","o                     0.001389\n","m                     0.001111\n","h                     0.001111\n","z                     0.000556\n","10.87                 0.000278\n","13.03                 0.000278\n","3.49                  0.000278\n","spore-print-color     0.000278\n","18.06                 0.000278\n","20.0                  0.000278\n","1.48                  0.000278\n","3.23                  0.000278\n","15.69                 0.000278\n","16.88                 0.000278\n","5.59                  0.000278\n","2.77                  0.000278\n","20.01                 0.000278\n","3.63                  0.000278\n","7.15                  0.000278\n","\n","Column: stem-surface\n","stem-surface\n","s                       28.836776\n","y                       22.489534\n","i                       19.747307\n","t                       13.024917\n","g                        6.872731\n","k                        6.459294\n","h                        2.489517\n","f                        0.045067\n","w                        0.004313\n","d                        0.004225\n","e                        0.003169\n","n                        0.002993\n","x                        0.002289\n","b                        0.002024\n","c                        0.001936\n","l                        0.001760\n","p                        0.001760\n","r                        0.001760\n","u                        0.001408\n","o                        0.001320\n","a                        0.000968\n","m                        0.000616\n","season                   0.000528\n","0.0                      0.000264\n","z                        0.000176\n","does-bruise-or-bleed     0.000176\n","5.56                     0.000176\n","10.48                    0.000176\n","does s                   0.000088\n","1.03                     0.000088\n","7.45                     0.000088\n","has h                    0.000088\n","1.94                     0.000088\n","does None                0.000088\n","10.93                    0.000088\n","49.46                    0.000088\n","19.35                    0.000088\n","2.68                     0.000088\n","4.74                     0.000088\n","spore-print-color        0.000088\n","5.35                     0.000088\n","24.12                    0.000088\n","7.23                     0.000088\n","5.81                     0.000088\n","17.46                    0.000088\n","13.1                     0.000088\n","has-ring                 0.000088\n","class                    0.000088\n","5.51                     0.000088\n","5.48                     0.000088\n","4.41                     0.000088\n","3.68                     0.000088\n","5.97                     0.000088\n","1.59                     0.000088\n","25.83                    0.000088\n","3.89                     0.000088\n","4.34                     0.000088\n","6.58                     0.000088\n","12.04                    0.000088\n","13.94                    0.000088\n","\n","Column: stem-color\n","stem-color\n","w                    38.391810\n","n                    32.194223\n","y                    11.998144\n","g                     4.235577\n","o                     3.578580\n","e                     3.316525\n","u                     2.150112\n","p                     1.754624\n","k                     1.080430\n","r                     0.716383\n","l                     0.320638\n","b                     0.236292\n","f                     0.018384\n","s                     0.001636\n","t                     0.001283\n","a                     0.001155\n","x                     0.000642\n","i                     0.000610\n","d                     0.000513\n","h                     0.000385\n","m                     0.000353\n","c                     0.000225\n","z                     0.000192\n","ring-type             0.000096\n","class                 0.000064\n","spore-print-color     0.000064\n","is n                  0.000032\n","6.31                  0.000032\n","12.92                 0.000032\n","3.98                  0.000032\n","20.07                 0.000032\n","7.7                   0.000032\n","22.6                  0.000032\n","6.09                  0.000032\n","17.45                 0.000032\n","3.56                  0.000032\n","3.37                  0.000032\n","4.62                  0.000032\n","2.54                  0.000032\n","39.51                 0.000032\n","18.06                 0.000032\n","3.53                  0.000032\n","4.49                  0.000032\n","1.41                  0.000032\n","e n                   0.000032\n","8.49                  0.000032\n","2.75                  0.000032\n","7.84                  0.000032\n","4.75                  0.000032\n","26.4                  0.000032\n","is w                  0.000032\n","8.32                  0.000032\n","23.59                 0.000032\n","2.78                  0.000032\n","3.13                  0.000032\n","33.52                 0.000032\n","7.33                  0.000032\n","1.75                  0.000032\n","4.33                  0.000032\n","\n","Column: veil-type\n","veil-type\n","u          99.950455\n","w           0.006899\n","a           0.005644\n","f           0.005017\n","e           0.005017\n","b           0.003136\n","c           0.003136\n","y           0.002509\n","k           0.002509\n","g           0.002509\n","n           0.001881\n","s           0.001881\n","r           0.001254\n","d           0.001254\n","p           0.001254\n","h           0.001254\n","i           0.001254\n","l           0.000627\n","is None     0.000627\n","t           0.000627\n","21.11       0.000627\n","5.94        0.000627\n","\n","Column: veil-color\n","veil-color\n","w       74.221139\n","y        8.104564\n","n        7.989138\n","u        3.730339\n","k        3.478742\n","e        2.438577\n","g        0.007979\n","p        0.006117\n","r        0.003723\n","o        0.003457\n","s        0.002926\n","a        0.001862\n","t        0.001862\n","d        0.001596\n","i        0.001596\n","h        0.001330\n","c        0.001064\n","f        0.001064\n","l        0.001064\n","b        0.000798\n","z        0.000266\n","8.25     0.000266\n","2.49     0.000266\n","3.32     0.000266\n","\n","Column: has-ring\n","has-ring\n","f             75.998718\n","t             23.997464\n","r              0.000513\n","h              0.000417\n","c              0.000353\n","l              0.000353\n","s              0.000353\n","p              0.000353\n","g              0.000257\n","z              0.000192\n","e              0.000192\n","x              0.000160\n","m              0.000128\n","y              0.000096\n","d              0.000096\n","k              0.000064\n","o              0.000064\n","n              0.000064\n","f has-ring     0.000032\n","i              0.000032\n","10.3           0.000032\n","w              0.000032\n","a              0.000032\n","\n","Column: ring-type\n","ring-type\n","f                       82.902146\n","e                        4.016178\n","z                        3.807815\n","l                        2.457878\n","r                        2.272675\n","p                        2.264944\n","g                        2.131379\n","m                        0.133598\n","t                        0.003280\n","d                        0.001238\n","n                        0.001138\n","x                        0.001071\n","b                        0.000971\n","y                        0.000837\n","s                        0.000602\n","k                        0.000602\n","a                        0.000535\n","h                        0.000502\n","w                        0.000469\n","u                        0.000435\n","c                        0.000368\n","o                        0.000301\n","ring-type                0.000234\n","i                        0.000134\n","does f                   0.000100\n","season                   0.000100\n","15                       0.000033\n","14                       0.000033\n","2.87                     0.000033\n","sp                       0.000033\n","class                    0.000033\n","spore-print-color        0.000033\n","2                        0.000033\n","11                       0.000033\n","1                        0.000033\n","23.6                     0.000033\n","4                        0.000033\n","does-bruise-or-bleed     0.000033\n","3.12                     0.000033\n","8.25                     0.000033\n","\n","Column: spore-print-color\n","spore-print-color\n","k             40.151461\n","p             25.531780\n","w             18.772894\n","n              8.473302\n","r              2.983952\n","u              2.714929\n","g              1.306578\n","y              0.013470\n","s              0.007857\n","c              0.005987\n","e              0.005238\n","f              0.005238\n","t              0.004864\n","a              0.004864\n","d              0.003367\n","l              0.002993\n","b              0.001871\n","m              0.001497\n","h              0.001122\n","o              0.001122\n","x              0.000748\n","i              0.000748\n","veil-color     0.000748\n","10 None        0.000374\n","9 None         0.000374\n","2.49           0.000374\n","class          0.000374\n","2.62           0.000374\n","season         0.000374\n","9.55           0.000374\n","6.36           0.000374\n","4.58           0.000374\n","\n","Column: habitat\n","habitat\n","d                       69.863422\n","g                       14.594886\n","l                        5.514838\n","m                        4.843563\n","h                        3.854375\n","w                        0.594501\n","p                        0.551189\n","u                        0.168886\n","e                        0.001765\n","s                        0.001668\n","n                        0.001315\n","t                        0.001283\n","r                        0.001219\n","y                        0.001091\n","a                        0.001091\n","k                        0.000995\n","c                        0.000834\n","b                        0.000577\n","o                        0.000385\n","f                        0.000353\n","i                        0.000225\n","x                        0.000160\n","z                        0.000160\n","habitat                  0.000160\n","class                    0.000096\n","spore-print-color        0.000096\n","ring-type                0.000064\n","18.35                    0.000032\n","3.68                     0.000032\n","2.44                     0.000032\n","1.66                     0.000032\n","17.38                    0.000032\n","veil-type                0.000032\n","6.75                     0.000032\n","cap-diameter             0.000032\n","7.37                     0.000032\n","16.46                    0.000032\n","3.11                     0.000032\n","6.63                     0.000032\n","is w                     0.000032\n","5.62                     0.000032\n","7.31                     0.000032\n","10.07                    0.000032\n","5.56                     0.000032\n","is h                     0.000032\n","4                        0.000032\n","2.94                     0.000032\n","does-bruise-or-bleed     0.000032\n","9.28                     0.000032\n","17.1                     0.000032\n","8.09                     0.000032\n","2.25                     0.000032\n","\n","Column: season\n","season\n","a    49.513899\n","u    37.010214\n","w     8.925053\n","s     4.550834\n","\n"]}],"source":["def calculate_category_percentages(df):\n","    for column in df.columns:\n","        if df[column].dtype == 'object':\n","            print(f\"Column: {column}\")\n","            percentage = df[column].value_counts(normalize=True) * 100\n","            print(f\"{percentage.to_string()}\\n\")\n","\n","calculate_category_percentages(train_df)"]},{"cell_type":"markdown","id":"06df1585","metadata":{"papermill":{"duration":0.011809,"end_time":"2024-08-23T16:23:47.091795","exception":false,"start_time":"2024-08-23T16:23:47.079986","status":"completed"},"tags":[]},"source":["If we are trying to reduce these values per column, a good cutoff looks like any row value that is < .1% of the total count values in a column. We will handle that in our data cleaning section. \n","\n","Lets take a look at the null values now. "]},{"cell_type":"code","execution_count":7,"id":"6c7a5f88","metadata":{"execution":{"iopub.execute_input":"2024-08-23T16:23:47.115793Z","iopub.status.busy":"2024-08-23T16:23:47.115428Z","iopub.status.idle":"2024-08-23T16:23:49.906965Z","shell.execute_reply":"2024-08-23T16:23:49.905689Z"},"papermill":{"duration":2.806568,"end_time":"2024-08-23T16:23:49.909594","exception":false,"start_time":"2024-08-23T16:23:47.103026","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["veil-type               2957493\n","spore-print-color       2849682\n","stem-root               2757023\n","veil-color              2740947\n","stem-surface            1980861\n","gill-spacing            1258435\n","cap-surface              671023\n","gill-attachment          523936\n","ring-type                128880\n","gill-color                   57\n","habitat                      45\n","cap-shape                    40\n","stem-color                   38\n","has-ring                     24\n","cap-color                    12\n","does-bruise-or-bleed          8\n","cap-diameter                  4\n","id                            0\n","stem-width                    0\n","class                         0\n","stem-height                   0\n","season                        0\n","dtype: int64\n"]},{"data":{"image/png":"","text/plain":["<Figure size 1000x600 with 1 Axes>"]},"metadata":{},"output_type":"display_data"}],"source":["null_counts = train_df.isnull().sum()\n","null_counts = null_counts.sort_values(ascending=False)\n","\n","print(null_counts)\n","\n","plt.figure(figsize=(10, 6))\n","sns.barplot(x=null_counts.index, y=null_counts.values, palette='viridis')\n","\n","plt.title('Number of Null Values in Each Column')\n","plt.xlabel('Column Names')\n","plt.ylabel('Number of Null Values')\n","plt.xticks(rotation=90)\n","\n","plt.show()"]},{"cell_type":"markdown","id":"0a8c8774","metadata":{"papermill":{"duration":0.011406,"end_time":"2024-08-23T16:23:49.932994","exception":false,"start_time":"2024-08-23T16:23:49.921588","status":"completed"},"tags":[]},"source":["**NOTE** The numerical column **cap-diameter** has 4 null values. If you miss this, you're going to have some head scratching errors with training later. "]},{"cell_type":"code","execution_count":8,"id":"aab9f73a","metadata":{"execution":{"iopub.execute_input":"2024-08-23T16:23:49.958269Z","iopub.status.busy":"2024-08-23T16:23:49.957844Z","iopub.status.idle":"2024-08-23T16:23:54.215184Z","shell.execute_reply":"2024-08-23T16:23:54.213362Z"},"papermill":{"duration":4.273279,"end_time":"2024-08-23T16:23:54.218103","exception":false,"start_time":"2024-08-23T16:23:49.944824","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["Number of duplicate rows: 0\n"]}],"source":["duplicate_count = train_df.duplicated().sum()\n","\n","print(f\"Number of duplicate rows: {duplicate_count}\")"]},{"cell_type":"markdown","id":"b243662d","metadata":{"execution":{"iopub.status.busy":"2024-08-22T18:48:35.436017Z","iopub.status.idle":"2024-08-22T18:48:35.436411Z","shell.execute_reply":"2024-08-22T18:48:35.436227Z","shell.execute_reply.started":"2024-08-22T18:48:35.436211Z"},"papermill":{"duration":0.011907,"end_time":"2024-08-23T16:23:54.245983","exception":false,"start_time":"2024-08-23T16:23:54.234076","status":"completed"},"tags":[]},"source":["No duplicate rows, good to know. \n","\n","Finally, lets get some plots of our numerical data."]},{"cell_type":"code","execution_count":9,"id":"46bfda71","metadata":{"execution":{"iopub.execute_input":"2024-08-23T16:23:54.272002Z","iopub.status.busy":"2024-08-23T16:23:54.271482Z","iopub.status.idle":"2024-08-23T16:23:55.315136Z","shell.execute_reply":"2024-08-23T16:23:55.313815Z"},"papermill":{"duration":1.061542,"end_time":"2024-08-23T16:23:55.319647","exception":false,"start_time":"2024-08-23T16:23:54.258105","status":"completed"},"tags":[]},"outputs":[{"data":{"image/png":"","text/plain":["<Figure size 1500x500 with 3 Axes>"]},"metadata":{},"output_type":"display_data"}],"source":["fig, axes = plt.subplots(nrows=1, ncols=3, figsize=(15, 5))\n","\n","for i, col in enumerate(train_df.select_dtypes(include=['float64']).columns):\n","    axes[i].hist(train_df[col], bins=30, color='skyblue', edgecolor='black')\n","    axes[i].set_title(f'Histogram of {col}')\n","    axes[i].set_xlabel(col)\n","    axes[i].set_ylabel('Frequency')\n","\n","plt.tight_layout()\n","plt.show()"]},{"cell_type":"markdown","id":"eca4b249","metadata":{"papermill":{"duration":0.013616,"end_time":"2024-08-23T16:23:55.346979","exception":false,"start_time":"2024-08-23T16:23:55.333363","status":"completed"},"tags":[]},"source":["## 2.3 First Thoughts\n","* We have a **ton** of training data. Good news for us, we will be able to split this into a train, dev, test set. \n","* There are a lot of data artifacts in the set. In the next section, we will define .1% as the cutoff for artifacts that will get reassigned to another value. \n","* Null values will also have to be handled. \n","* No duplicates, that's a good sign. \n","\n","# 3. Data Cleaning\n","## 3.1 Replacing Null and Artifacts\n","Now that we have a good sense of what data we are working with, let's get it ready for a model. First, let's handle those data artifacts by writing a function to rewrite those smaller values and any null values we might have. Intuitively, we know already that we are probably going to be using a Deep Neural Network (DNN) for this problem. "]},{"cell_type":"code","execution_count":10,"id":"44496d8d","metadata":{"execution":{"iopub.execute_input":"2024-08-23T16:23:55.377493Z","iopub.status.busy":"2024-08-23T16:23:55.377082Z","iopub.status.idle":"2024-08-23T16:23:55.443288Z","shell.execute_reply":"2024-08-23T16:23:55.441999Z"},"papermill":{"duration":0.084678,"end_time":"2024-08-23T16:23:55.445975","exception":false,"start_time":"2024-08-23T16:23:55.361297","status":"completed"},"tags":[]},"outputs":[],"source":["for col in train_df.select_dtypes(include=['float64']).columns:\n","    train_df[col] = train_df[col].fillna(0)\n"]},{"cell_type":"code","execution_count":11,"id":"f8a22bef","metadata":{"execution":{"iopub.execute_input":"2024-08-23T16:23:55.472939Z","iopub.status.busy":"2024-08-23T16:23:55.472538Z","iopub.status.idle":"2024-08-23T16:24:07.91075Z","shell.execute_reply":"2024-08-23T16:24:07.909467Z"},"papermill":{"duration":12.454598,"end_time":"2024-08-23T16:24:07.91335","exception":false,"start_time":"2024-08-23T16:23:55.458752","status":"completed"},"tags":[]},"outputs":[],"source":["def rewrite_values(df, threshold=0.1):\n","    for column in df.columns:\n","        if df[column].dtype == 'object':\n","            total_count = df[column].notna().sum()\n","            value_counts = df[column].value_counts()\n","            replace_dict = {value: 'not' if count / total_count < (threshold / 100) else value for value, count in value_counts.items()}\n","            df[column] = df[column].map(replace_dict).fillna('null')\n","\n","rewrite_values(train_df)"]},{"cell_type":"code","execution_count":12,"id":"3f7594f6","metadata":{"execution":{"iopub.execute_input":"2024-08-23T16:24:07.94052Z","iopub.status.busy":"2024-08-23T16:24:07.940087Z","iopub.status.idle":"2024-08-23T16:24:11.521224Z","shell.execute_reply":"2024-08-23T16:24:11.519888Z"},"papermill":{"duration":3.597756,"end_time":"2024-08-23T16:24:11.524062","exception":false,"start_time":"2024-08-23T16:24:07.926306","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["id                      3116945\n","class                         2\n","cap-diameter               3914\n","cap-shape                     9\n","cap-surface                  13\n","cap-color                    14\n","does-bruise-or-bleed          4\n","gill-attachment               9\n","gill-spacing                  5\n","gill-color                   14\n","stem-height                2749\n","stem-width                 5836\n","stem-root                     7\n","stem-surface                  9\n","stem-color                   14\n","veil-type                     3\n","veil-color                    8\n","has-ring                      4\n","ring-type                    10\n","spore-print-color             9\n","habitat                      10\n","season                        4\n","dtype: int64\n"]}],"source":["unique_counts = {}\n","\n","for column in train_df.columns:\n","    unique_counts[column] = train_df[column].nunique()\n","\n","unique_counts_series = pd.Series(unique_counts)\n","\n","print(unique_counts_series)"]},{"cell_type":"markdown","id":"26172f02","metadata":{"papermill":{"duration":0.012373,"end_time":"2024-08-23T16:24:11.549305","exception":false,"start_time":"2024-08-23T16:24:11.536932","status":"completed"},"tags":[]},"source":["## 3.2 Prepare Data for Model\n","Alright, we handled our null values and data artifacts. Below, we are going to one hot encode our categorical values. I won't explain one hot encoding, but you can find a summary [here](https://www.geeksforgeeks.org/ml-one-hot-encoding/). We are also going to normalize our continuous variables between 0 and 1 for the NN. High level: we normalize our continuous variables to help with training our NN."]},{"cell_type":"code","execution_count":13,"id":"6957bce6","metadata":{"execution":{"iopub.execute_input":"2024-08-23T16:24:11.57686Z","iopub.status.busy":"2024-08-23T16:24:11.576457Z","iopub.status.idle":"2024-08-23T16:24:26.684729Z","shell.execute_reply":"2024-08-23T16:24:26.683368Z"},"papermill":{"duration":15.125572,"end_time":"2024-08-23T16:24:26.688073","exception":false,"start_time":"2024-08-23T16:24:11.562501","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>cap-diameter</th>\n","      <th>stem-height</th>\n","      <th>stem-width</th>\n","      <th>class_e</th>\n","      <th>class_p</th>\n","      <th>cap-shape_b</th>\n","      <th>cap-shape_c</th>\n","      <th>cap-shape_f</th>\n","      <th>cap-shape_not</th>\n","      <th>cap-shape_null</th>\n","      <th>cap-shape_o</th>\n","      <th>cap-shape_p</th>\n","      <th>cap-shape_s</th>\n","      <th>cap-shape_x</th>\n","      <th>cap-surface_d</th>\n","      <th>cap-surface_e</th>\n","      <th>cap-surface_g</th>\n","      <th>cap-surface_h</th>\n","      <th>cap-surface_i</th>\n","      <th>cap-surface_k</th>\n","      <th>cap-surface_l</th>\n","      <th>cap-surface_not</th>\n","      <th>cap-surface_null</th>\n","      <th>cap-surface_s</th>\n","      <th>cap-surface_t</th>\n","      <th>cap-surface_w</th>\n","      <th>cap-surface_y</th>\n","      <th>cap-color_b</th>\n","      <th>cap-color_e</th>\n","      <th>cap-color_g</th>\n","      <th>cap-color_k</th>\n","      <th>cap-color_l</th>\n","      <th>cap-color_n</th>\n","      <th>cap-color_not</th>\n","      <th>cap-color_null</th>\n","      <th>cap-color_o</th>\n","      <th>cap-color_p</th>\n","      <th>cap-color_r</th>\n","      <th>cap-color_u</th>\n","      <th>cap-color_w</th>\n","      <th>cap-color_y</th>\n","      <th>does-bruise-or-bleed_f</th>\n","      <th>does-bruise-or-bleed_not</th>\n","      <th>does-bruise-or-bleed_null</th>\n","      <th>does-bruise-or-bleed_t</th>\n","      <th>gill-attachment_a</th>\n","      <th>gill-attachment_d</th>\n","      <th>gill-attachment_e</th>\n","      <th>gill-attachment_f</th>\n","      <th>gill-attachment_not</th>\n","      <th>gill-attachment_null</th>\n","      <th>gill-attachment_p</th>\n","      <th>gill-attachment_s</th>\n","      <th>gill-attachment_x</th>\n","      <th>gill-spacing_c</th>\n","      <th>gill-spacing_d</th>\n","      <th>gill-spacing_f</th>\n","      <th>gill-spacing_not</th>\n","      <th>gill-spacing_null</th>\n","      <th>gill-color_b</th>\n","      <th>gill-color_e</th>\n","      <th>gill-color_f</th>\n","      <th>gill-color_g</th>\n","      <th>gill-color_k</th>\n","      <th>gill-color_n</th>\n","      <th>gill-color_not</th>\n","      <th>gill-color_null</th>\n","      <th>gill-color_o</th>\n","      <th>gill-color_p</th>\n","      <th>gill-color_r</th>\n","      <th>gill-color_u</th>\n","      <th>gill-color_w</th>\n","      <th>gill-color_y</th>\n","      <th>stem-root_b</th>\n","      <th>stem-root_c</th>\n","      <th>stem-root_f</th>\n","      <th>stem-root_not</th>\n","      <th>stem-root_null</th>\n","      <th>stem-root_r</th>\n","      <th>stem-root_s</th>\n","      <th>stem-surface_g</th>\n","      <th>stem-surface_h</th>\n","      <th>stem-surface_i</th>\n","      <th>stem-surface_k</th>\n","      <th>stem-surface_not</th>\n","      <th>stem-surface_null</th>\n","      <th>stem-surface_s</th>\n","      <th>stem-surface_t</th>\n","      <th>stem-surface_y</th>\n","      <th>stem-color_b</th>\n","      <th>stem-color_e</th>\n","      <th>stem-color_g</th>\n","      <th>stem-color_k</th>\n","      <th>stem-color_l</th>\n","      <th>stem-color_n</th>\n","      <th>stem-color_not</th>\n","      <th>stem-color_null</th>\n","      <th>stem-color_o</th>\n","      <th>stem-color_p</th>\n","      <th>stem-color_r</th>\n","      <th>stem-color_u</th>\n","      <th>stem-color_w</th>\n","      <th>stem-color_y</th>\n","      <th>veil-type_not</th>\n","      <th>veil-type_null</th>\n","      <th>veil-type_u</th>\n","      <th>veil-color_e</th>\n","      <th>veil-color_k</th>\n","      <th>veil-color_n</th>\n","      <th>veil-color_not</th>\n","      <th>veil-color_null</th>\n","      <th>veil-color_u</th>\n","      <th>veil-color_w</th>\n","      <th>veil-color_y</th>\n","      <th>has-ring_f</th>\n","      <th>has-ring_not</th>\n","      <th>has-ring_null</th>\n","      <th>has-ring_t</th>\n","      <th>ring-type_e</th>\n","      <th>ring-type_f</th>\n","      <th>ring-type_g</th>\n","      <th>ring-type_l</th>\n","      <th>ring-type_m</th>\n","      <th>ring-type_not</th>\n","      <th>ring-type_null</th>\n","      <th>ring-type_p</th>\n","      <th>ring-type_r</th>\n","      <th>ring-type_z</th>\n","      <th>spore-print-color_g</th>\n","      <th>spore-print-color_k</th>\n","      <th>spore-print-color_n</th>\n","      <th>spore-print-color_not</th>\n","      <th>spore-print-color_null</th>\n","      <th>spore-print-color_p</th>\n","      <th>spore-print-color_r</th>\n","      <th>spore-print-color_u</th>\n","      <th>spore-print-color_w</th>\n","      <th>habitat_d</th>\n","      <th>habitat_g</th>\n","      <th>habitat_h</th>\n","      <th>habitat_l</th>\n","      <th>habitat_m</th>\n","      <th>habitat_not</th>\n","      <th>habitat_null</th>\n","      <th>habitat_p</th>\n","      <th>habitat_u</th>\n","      <th>habitat_w</th>\n","      <th>season_a</th>\n","      <th>season_s</th>\n","      <th>season_u</th>\n","      <th>season_w</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.109086</td>\n","      <td>0.050834</td>\n","      <td>0.149563</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.055907</td>\n","      <td>0.053990</td>\n","      <td>0.062974</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.086030</td>\n","      <td>0.077209</td>\n","      <td>0.096501</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.048097</td>\n","      <td>0.046889</td>\n","      <td>0.063460</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.072518</td>\n","      <td>0.037985</td>\n","      <td>0.081244</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   cap-diameter  stem-height  stem-width  class_e  class_p  cap-shape_b  \\\n","0      0.109086     0.050834    0.149563        1        0            0   \n","1      0.055907     0.053990    0.062974        0        1            0   \n","2      0.086030     0.077209    0.096501        1        0            0   \n","3      0.048097     0.046889    0.063460        1        0            0   \n","4      0.072518     0.037985    0.081244        1        0            0   \n","\n","   cap-shape_c  cap-shape_f  cap-shape_not  cap-shape_null  cap-shape_o  \\\n","0            0            1              0               0            0   \n","1            0            0              0               0            0   \n","2            0            1              0               0            0   \n","3            0            1              0               0            0   \n","4            0            0              0               0            0   \n","\n","   cap-shape_p  cap-shape_s  cap-shape_x  cap-surface_d  cap-surface_e  \\\n","0            0            0            0              0              0   \n","1            0            0            1              0              0   \n","2            0            0            0              0              0   \n","3            0            0            0              0              0   \n","4            0            0            1              0              0   \n","\n","   cap-surface_g  cap-surface_h  cap-surface_i  cap-surface_k  cap-surface_l  \\\n","0              0              0              0              0              0   \n","1              0              1              0              0              0   \n","2              0              0              0              0              0   \n","3              0              0              0              0              0   \n","4              0              0              0              0              1   \n","\n","   cap-surface_not  cap-surface_null  cap-surface_s  cap-surface_t  \\\n","0                0                 0              1              0   \n","1                0                 0              0              0   \n","2                0                 0              1              0   \n","3                0                 0              0              0   \n","4                0                 0              0              0   \n","\n","   cap-surface_w  cap-surface_y  cap-color_b  cap-color_e  cap-color_g  \\\n","0              0              0            0            0            0   \n","1              0              0            0            0            0   \n","2              0              0            1            0            0   \n","3              0              1            0            0            1   \n","4              0              0            0            0            0   \n","\n","   cap-color_k  cap-color_l  cap-color_n  cap-color_not  cap-color_null  \\\n","0            0            0            0              0               0   \n","1            0            0            0              0               0   \n","2            0            0            0              0               0   \n","3            0            0            0              0               0   \n","4            0            0            0              0               0   \n","\n","   cap-color_o  cap-color_p  cap-color_r  cap-color_u  cap-color_w  \\\n","0            0            0            0            1            0   \n","1            1            0            0            0            0   \n","2            0            0            0            0            0   \n","3            0            0            0            0            0   \n","4            0            0            0            0            1   \n","\n","   cap-color_y  does-bruise-or-bleed_f  does-bruise-or-bleed_not  \\\n","0            0                       1                         0   \n","1            0                       1                         0   \n","2            0                       1                         0   \n","3            0                       1                         0   \n","4            0                       1                         0   \n","\n","   does-bruise-or-bleed_null  does-bruise-or-bleed_t  gill-attachment_a  \\\n","0                          0                       0                  1   \n","1                          0                       0                  1   \n","2                          0                       0                  0   \n","3                          0                       0                  0   \n","4                          0                       0                  0   \n","\n","   gill-attachment_d  gill-attachment_e  gill-attachment_f  \\\n","0                  0                  0                  0   \n","1                  0                  0                  0   \n","2                  0                  0                  0   \n","3                  0                  0                  0   \n","4                  1                  0                  0   \n","\n","   gill-attachment_not  gill-attachment_null  gill-attachment_p  \\\n","0                    0                     0                  0   \n","1                    0                     0                  0   \n","2                    0                     0                  0   \n","3                    0                     0                  0   \n","4                    0                     0                  0   \n","\n","   gill-attachment_s  gill-attachment_x  gill-spacing_c  gill-spacing_d  \\\n","0                  0                  0               1               0   \n","1                  0                  0               1               0   \n","2                  0                  1               1               0   \n","3                  1                  0               0               0   \n","4                  0                  0               0               0   \n","\n","   gill-spacing_f  gill-spacing_not  gill-spacing_null  gill-color_b  \\\n","0               0                 0                  0             0   \n","1               0                 0                  0             0   \n","2               0                 0                  0             0   \n","3               0                 0                  1             0   \n","4               0                 0                  1             0   \n","\n","   gill-color_e  gill-color_f  gill-color_g  gill-color_k  gill-color_n  \\\n","0             0             0             0             0             0   \n","1             0             0             0             0             1   \n","2             0             0             0             0             0   \n","3             0             0             1             0             0   \n","4             0             0             0             0             0   \n","\n","   gill-color_not  gill-color_null  gill-color_o  gill-color_p  gill-color_r  \\\n","0               0                0             0             0             0   \n","1               0                0             0             0             0   \n","2               0                0             0             0             0   \n","3               0                0             0             0             0   \n","4               0                0             0             0             0   \n","\n","   gill-color_u  gill-color_w  gill-color_y  stem-root_b  stem-root_c  \\\n","0             0             1             0            0            0   \n","1             0             0             0            0            0   \n","2             0             1             0            0            0   \n","3             0             0             0            0            0   \n","4             0             1             0            0            0   \n","\n","   stem-root_f  stem-root_not  stem-root_null  stem-root_r  stem-root_s  \\\n","0            0              0               1            0            0   \n","1            0              0               1            0            0   \n","2            0              0               1            0            0   \n","3            0              0               1            0            0   \n","4            0              0               1            0            0   \n","\n","   stem-surface_g  stem-surface_h  stem-surface_i  stem-surface_k  \\\n","0               0               0               0               0   \n","1               0               0               0               0   \n","2               0               0               0               0   \n","3               0               0               0               0   \n","4               0               0               0               0   \n","\n","   stem-surface_not  stem-surface_null  stem-surface_s  stem-surface_t  \\\n","0                 0                  1               0               0   \n","1                 0                  0               0               0   \n","2                 0                  0               1               0   \n","3                 0                  1               0               0   \n","4                 0                  1               0               0   \n","\n","   stem-surface_y  stem-color_b  stem-color_e  stem-color_g  stem-color_k  \\\n","0               0             0             0             0             0   \n","1               1             0             0             0             0   \n","2               0             0             0             0             0   \n","3               0             0             0             0             0   \n","4               0             0             0             0             0   \n","\n","   stem-color_l  stem-color_n  stem-color_not  stem-color_null  stem-color_o  \\\n","0             0             0               0                0             0   \n","1             0             0               0                0             1   \n","2             0             1               0                0             0   \n","3             0             0               0                0             0   \n","4             0             0               0                0             0   \n","\n","   stem-color_p  stem-color_r  stem-color_u  stem-color_w  stem-color_y  \\\n","0             0             0             0             1             0   \n","1             0             0             0             0             0   \n","2             0             0             0             0             0   \n","3             0             0             0             1             0   \n","4             0             0             0             1             0   \n","\n","   veil-type_not  veil-type_null  veil-type_u  veil-color_e  veil-color_k  \\\n","0              0               1            0             0             0   \n","1              0               1            0             0             0   \n","2              0               1            0             0             0   \n","3              0               1            0             0             0   \n","4              0               1            0             0             0   \n","\n","   veil-color_n  veil-color_not  veil-color_null  veil-color_u  veil-color_w  \\\n","0             0               0                1             0             0   \n","1             0               0                1             0             0   \n","2             0               0                1             0             0   \n","3             0               0                1             0             0   \n","4             0               0                1             0             0   \n","\n","   veil-color_y  has-ring_f  has-ring_not  has-ring_null  has-ring_t  \\\n","0             0           1             0              0           0   \n","1             0           0             0              0           1   \n","2             0           1             0              0           0   \n","3             0           1             0              0           0   \n","4             0           1             0              0           0   \n","\n","   ring-type_e  ring-type_f  ring-type_g  ring-type_l  ring-type_m  \\\n","0            0            1            0            0            0   \n","1            0            0            0            0            0   \n","2            0            1            0            0            0   \n","3            0            1            0            0            0   \n","4            0            1            0            0            0   \n","\n","   ring-type_not  ring-type_null  ring-type_p  ring-type_r  ring-type_z  \\\n","0              0               0            0            0            0   \n","1              0               0            0            0            1   \n","2              0               0            0            0            0   \n","3              0               0            0            0            0   \n","4              0               0            0            0            0   \n","\n","   spore-print-color_g  spore-print-color_k  spore-print-color_n  \\\n","0                    0                    0                    0   \n","1                    0                    0                    0   \n","2                    0                    0                    0   \n","3                    0                    0                    0   \n","4                    0                    0                    0   \n","\n","   spore-print-color_not  spore-print-color_null  spore-print-color_p  \\\n","0                      0                       1                    0   \n","1                      0                       1                    0   \n","2                      0                       1                    0   \n","3                      0                       1                    0   \n","4                      0                       1                    0   \n","\n","   spore-print-color_r  spore-print-color_u  spore-print-color_w  habitat_d  \\\n","0                    0                    0                    0          1   \n","1                    0                    0                    0          1   \n","2                    0                    0                    0          0   \n","3                    0                    0                    0          1   \n","4                    0                    0                    0          0   \n","\n","   habitat_g  habitat_h  habitat_l  habitat_m  habitat_not  habitat_null  \\\n","0          0          0          0          0            0             0   \n","1          0          0          0          0            0             0   \n","2          0          0          1          0            0             0   \n","3          0          0          0          0            0             0   \n","4          1          0          0          0            0             0   \n","\n","   habitat_p  habitat_u  habitat_w  season_a  season_s  season_u  season_w  \n","0          0          0          0         1         0         0         0  \n","1          0          0          0         0         0         0         1  \n","2          0          0          0         0         0         0         1  \n","3          0          0          0         0         0         1         0  \n","4          0          0          0         1         0         0         0  "]},"execution_count":13,"metadata":{},"output_type":"execute_result"}],"source":["scaler = MinMaxScaler()\n","\n","df_encoded = pd.get_dummies(train_df, columns=train_df.select_dtypes(include=['object']).columns, dtype=int)\n","continuous_cols = df_encoded.select_dtypes(include=['float64']).columns\n","df_encoded[continuous_cols] = scaler.fit_transform(df_encoded[continuous_cols])\n","\n","df_encoded = df_encoded.drop(['id'], axis=1)\n","\n","pd.set_option('display.max_columns', None)\n","df_encoded.head()"]},{"cell_type":"markdown","id":"50e8225d","metadata":{"papermill":{"duration":0.013978,"end_time":"2024-08-23T16:24:26.716695","exception":false,"start_time":"2024-08-23T16:24:26.702717","status":"completed"},"tags":[]},"source":["## 3.3 Creating our Train and Dev Sets\n","Since our data set is so large, we will be able to train a very accurate deep neural network. Additionally, we will be able to have three data sets- train, dev, and test sets. We will want our largest dataset to be the training set (duh) while we can keep our other two datasets relatively small <50k rows. Below, we do a 99.98%/.01%/.01% data split (very small!). "]},{"cell_type":"code","execution_count":14,"id":"1bb707b3","metadata":{"execution":{"iopub.execute_input":"2024-08-23T16:24:26.747209Z","iopub.status.busy":"2024-08-23T16:24:26.746779Z","iopub.status.idle":"2024-08-23T16:24:27.995536Z","shell.execute_reply":"2024-08-23T16:24:27.99441Z"},"papermill":{"duration":1.26763,"end_time":"2024-08-23T16:24:27.998423","exception":false,"start_time":"2024-08-23T16:24:26.730793","status":"completed"},"tags":[]},"outputs":[],"source":["df_encoded_x = df_encoded.drop(columns=['class_e', 'class_p'])\n","df_encoded_y = df_encoded['class_e']"]},{"cell_type":"code","execution_count":15,"id":"08ced60c","metadata":{"execution":{"iopub.execute_input":"2024-08-23T16:24:28.02837Z","iopub.status.busy":"2024-08-23T16:24:28.027935Z","iopub.status.idle":"2024-08-23T16:24:35.546346Z","shell.execute_reply":"2024-08-23T16:24:35.545197Z"},"papermill":{"duration":7.536512,"end_time":"2024-08-23T16:24:35.548991","exception":false,"start_time":"2024-08-23T16:24:28.012479","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["Train set size: 3054606 rows\n","Dev set size: 31169 rows\n","Test set size: 31170 rows\n"]}],"source":["train_data_x, temp_data_x, train_data_y, temp_data_y = train_test_split(df_encoded_x, df_encoded_y, test_size=0.02, random_state=16)\n","dev_data_x, test_data_x, dev_data_y, test_data_y = train_test_split(temp_data_x, temp_data_y, test_size=.5, random_state=16)\n","\n","print(f\"Train set size: {len(train_data_x)} rows\")\n","print(f\"Dev set size: {len(dev_data_x)} rows\")\n","print(f\"Test set size: {len(test_data_x)} rows\")"]},{"cell_type":"markdown","id":"5843e844","metadata":{"papermill":{"duration":0.013889,"end_time":"2024-08-23T16:24:35.577243","exception":false,"start_time":"2024-08-23T16:24:35.563354","status":"completed"},"tags":[]},"source":["# 4 Initial Model Testing\n","## 4.1 Define a Custom MCC Metric Function\n","Remember that scoring metric we mentioned earlier? Tensorflow has depreciated that [metric](https://www.tensorflow.org/addons/api_docs/python/tfa/metrics/MatthewsCorrelationCoefficient), so we will have to define our own."]},{"cell_type":"code","execution_count":16,"id":"e7345def","metadata":{"execution":{"iopub.execute_input":"2024-08-23T16:24:35.607902Z","iopub.status.busy":"2024-08-23T16:24:35.607049Z","iopub.status.idle":"2024-08-23T16:24:35.62857Z","shell.execute_reply":"2024-08-23T16:24:35.627406Z"},"papermill":{"duration":0.039466,"end_time":"2024-08-23T16:24:35.630975","exception":false,"start_time":"2024-08-23T16:24:35.591509","status":"completed"},"tags":[]},"outputs":[],"source":["def mcc(y_true, y_pred):\n","    y_pred_pos = tf.round(tf.clip_by_value(y_pred, 0, 1))\n","    y_pred_neg = 1 - y_pred_pos\n","\n","    y_true_pos = tf.round(tf.clip_by_value(y_true, 0, 1))\n","    y_true_neg = 1 - y_true_pos\n","\n","    y_pred_pos = tf.cast(y_pred_pos, tf.float32)\n","    y_pred_neg = tf.cast(y_pred_neg, tf.float32)\n","    y_true_pos = tf.cast(y_true_pos, tf.float32)\n","    y_true_neg = tf.cast(y_true_neg, tf.float32)\n","\n","    tp = tf.reduce_sum(y_true_pos * y_pred_pos)\n","    tn = tf.reduce_sum(y_true_neg * y_pred_neg)\n","    fp = tf.reduce_sum(y_true_neg * y_pred_pos)\n","    fn = tf.reduce_sum(y_true_pos * y_pred_neg)\n","\n","    numerator = (tp * tn) - (fp * fn)\n","    denominator = tf.sqrt((tp + fp) * (tp + fn) * (tn + fp) * (tn + fn))\n","\n","    mcc = tf.where(tf.math.equal(denominator, 0), 0.0, numerator / denominator)\n","    return mcc"]},{"cell_type":"markdown","id":"2ab694f2","metadata":{"papermill":{"duration":0.013881,"end_time":"2024-08-23T16:24:35.659631","exception":false,"start_time":"2024-08-23T16:24:35.64575","status":"completed"},"tags":[]},"source":["## 4.2 Define a DNN\n","Below we will define a very simple DNN, with two hidden layers, with the specific parameters listed in the code. We are going to use binary cross entropy as our loss function, but in future iterations, we will consider using our custom MCC function as the loss function. \n","\n","Beware, using a custom loss function can introduce unforeseen complexity and issues in an optimization problem. Training our model using binary cross entropy and our custom loss function will give us a good idea of comparison between the two."]},{"cell_type":"code","execution_count":17,"id":"26cec303","metadata":{"execution":{"iopub.execute_input":"2024-08-23T16:24:35.690745Z","iopub.status.busy":"2024-08-23T16:24:35.690334Z","iopub.status.idle":"2024-08-23T16:24:35.82561Z","shell.execute_reply":"2024-08-23T16:24:35.824182Z"},"papermill":{"duration":0.153791,"end_time":"2024-08-23T16:24:35.828361","exception":false,"start_time":"2024-08-23T16:24:35.67457","status":"completed"},"tags":[]},"outputs":[],"source":["model = tf.keras.Sequential([\n","    tf.keras.layers.Input(shape=(train_data_x.shape[1],)),\n","    tf.keras.layers.Dense(128, activation='relu'),\n","    tf.keras.layers.Dense(64, activation='relu'),\n","    tf.keras.layers.Dense(1, activation='sigmoid')\n","])\n","\n","\n","model.compile(optimizer='adam',\n","              loss='binary_crossentropy',\n","              metrics=[mcc])"]},{"cell_type":"code","execution_count":18,"id":"ee4ec1f4","metadata":{"execution":{"iopub.execute_input":"2024-08-23T16:24:35.859167Z","iopub.status.busy":"2024-08-23T16:24:35.858149Z","iopub.status.idle":"2024-08-23T16:26:30.38585Z","shell.execute_reply":"2024-08-23T16:26:30.384737Z"},"papermill":{"duration":114.546163,"end_time":"2024-08-23T16:26:30.388845","exception":false,"start_time":"2024-08-23T16:24:35.842682","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["Epoch 1/5\n","\u001b[1m5967/5967\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m23s\u001b[0m 4ms/step - loss: 0.0799 - mcc: 0.9488 - val_loss: 0.0389 - val_mcc: 0.9827\n","Epoch 2/5\n","\u001b[1m5967/5967\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m21s\u001b[0m 4ms/step - loss: 0.0415 - mcc: 0.9817 - val_loss: 0.0383 - val_mcc: 0.9831\n","Epoch 3/5\n","\u001b[1m5967/5967\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m22s\u001b[0m 4ms/step - loss: 0.0410 - mcc: 0.9820 - val_loss: 0.0390 - val_mcc: 0.9822\n","Epoch 4/5\n","\u001b[1m5967/5967\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m22s\u001b[0m 4ms/step - loss: 0.0396 - mcc: 0.9826 - val_loss: 0.0378 - val_mcc: 0.9833\n","Epoch 5/5\n","\u001b[1m5967/5967\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m21s\u001b[0m 3ms/step - loss: 0.0397 - mcc: 0.9826 - val_loss: 0.0378 - val_mcc: 0.9829\n"]}],"source":["DNN = model.fit(train_data_x, train_data_y, epochs=5, batch_size=512, validation_data = (dev_data_x, dev_data_y))\n"]},{"cell_type":"markdown","id":"1e09becd","metadata":{"papermill":{"duration":0.149438,"end_time":"2024-08-23T16:26:30.689749","exception":false,"start_time":"2024-08-23T16:26:30.540311","status":"completed"},"tags":[]},"source":["Already we see our model performing very well in just 5 epcohs. \n","# 5 Initial Model Validation\n","## 5.1 Loss"]},{"cell_type":"code","execution_count":19,"id":"9abbc882","metadata":{"execution":{"iopub.execute_input":"2024-08-23T16:26:30.994002Z","iopub.status.busy":"2024-08-23T16:26:30.993603Z","iopub.status.idle":"2024-08-23T16:26:31.324149Z","shell.execute_reply":"2024-08-23T16:26:31.323008Z"},"papermill":{"duration":0.486655,"end_time":"2024-08-23T16:26:31.32678","exception":false,"start_time":"2024-08-23T16:26:30.840125","status":"completed"},"tags":[]},"outputs":[{"data":{"image/png":"","text/plain":["<Figure size 1000x600 with 1 Axes>"]},"metadata":{},"output_type":"display_data"}],"source":["plt.figure(figsize=(10, 6))\n","plt.plot(DNN.history['loss'], label='Training Loss')\n","plt.plot(DNN.history['val_loss'], label='Validation Loss')\n","plt.title('Training and Validation Loss')\n","plt.xlabel('Epochs')\n","plt.ylabel('Loss')\n","plt.legend()\n","plt.show()"]},{"cell_type":"markdown","id":"90f90da6","metadata":{"papermill":{"duration":0.159291,"end_time":"2024-08-23T16:26:31.659215","exception":false,"start_time":"2024-08-23T16:26:31.499924","status":"completed"},"tags":[]},"source":["## 5.2 MCC Metric"]},{"cell_type":"code","execution_count":20,"id":"1da22216","metadata":{"execution":{"iopub.execute_input":"2024-08-23T16:26:31.975485Z","iopub.status.busy":"2024-08-23T16:26:31.974272Z","iopub.status.idle":"2024-08-23T16:26:32.276225Z","shell.execute_reply":"2024-08-23T16:26:32.274969Z"},"papermill":{"duration":0.459129,"end_time":"2024-08-23T16:26:32.279476","exception":false,"start_time":"2024-08-23T16:26:31.820347","status":"completed"},"tags":[]},"outputs":[{"data":{"image/png":"iVBORw0KGgoAAAANSUhEUgAAA18AAAIjCAYAAAD80aFnAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuNSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/xnp5ZAAAACXBIWXMAAA9hAAAPYQGoP6dpAAB/d0lEQVR4nO3dd3iUVfrG8XvSewIkpEAgJIQiKh0ElCIgRVlxrYhKca2gsugqKiq2ZV1ZBIG17E9Bxa6IrqtgqAoiIE0sQGihhhBKKmkz7++PSSYZkkASkryZ5Pu5rrlI3jkz88wwhLnzvOcci2EYhgAAAAAANcrN7AIAAAAAoCEgfAEAAABALSB8AQAAAEAtIHwBAAAAQC0gfAEAAABALSB8AQAAAEAtIHwBAAAAQC0gfAEAAABALSB8AQAAAEAtIHwBQD02duxYxcTEVOm206ZNk8Viqd6C6pj9+/fLYrFowYIFtf7YFotF06ZNc3y/YMECWSwW7d+//7y3jYmJ0dixY6u1ngt5rwAAKobwBQAmsFgsFbqsWrXK7FIbvAcffFAWi0W7d+8ud8yTTz4pi8WiX375pRYrq7wjR45o2rRp2rp1q9mlOBQFYIvFohdeeKHMMaNHj5bFYlFAQECZ13/xxRcaNmyYQkND5eXlpaioKN10001asWJFqbHHjh3TI488onbt2snPz0/+/v7q2rWrXnjhBZ0+fbo6nxoAlGIxDMMwuwgAaGgWLlzo9P27776rhIQEvffee07HBw8erPDw8Co/Tn5+vmw2m7y9vSt924KCAhUUFMjHx6fKj1/X7d+/X61atdL8+fPL7SStX79el112mZ599lk9/fTTZY6JjY1VQEBApcKXxWLRM8884+h+Wa1W5efny9vb+7wdx5iYGPXv37/SHbuff/5Z3bt3L/P5Xsh75UIU/R34+PgoNjZWv/32m9P1WVlZCg8Pl9Vqlbu7uzIzMx3XGYah8ePHa8GCBercubNuuOEGRURE6OjRo/riiy+0adMmrV27Vr1795Ykbdy4UcOHD1dmZqZuu+02de3aVZL9dfnoo4/Uu3dvfffdd7X35AE0OB5mFwAADdFtt93m9P1PP/2khISEUsfPlp2dLT8/vwo/jqenZ5XqkyQPDw95ePDfRM+ePdW6dWt9+OGHZYavdevWad++ffrHP/5xQY/j7u4ud3f3C7qPC3Eh75XqMHz4cC1atEjbtm1Tx44dHce//PJL5eXlaejQoaU6Wf/617+0YMECTZo0STNnznQKrU8++aTee+89x3v49OnTuu666+Tu7q4tW7aoXbt2Tvf14osv6j//+U8NPkMA4LRDAKiz+vfvr4svvlibNm1S37595efnpyeeeEKS/QPp1VdfraioKHl7eysuLk7PP/+8rFar032cPY+n6BSvGTNm6M0331RcXJy8vb3VvXt3bdy40em2Zc35slgsmjhxohYvXqyLL75Y3t7e6tChg5YsWVKq/lWrVqlbt27y8fFRXFyc3njjjQrPI/vhhx904403qkWLFvL29lZ0dLT++te/6syZM6WeX0BAgA4fPqyRI0cqICBAYWFheuSRR0q9FqdPn9bYsWMVHByskJAQjRkzpsKnmY0ePVo7duzQ5s2bS133wQcfyGKxaNSoUcrLy9PTTz+trl27Kjg4WP7+/rriiiu0cuXK8z5GWXO+DMPQCy+8oObNm8vPz08DBgwo1RmSpJMnT+qRRx7RJZdcooCAAAUFBWnYsGHatm2bY8yqVavUvXt3SdK4ceMcp/oVdc/KmvOVlZWlhx9+WNHR0fL29lbbtm01Y8YMnX3STGXeF+Xp1auXWrVqpQ8++MDp+Pvvv6+hQ4eqcePGTsfPnDmj6dOnq127dpoxY0aZ76vbb79dPXr0kCS98cYbOnz4sGbOnFkqeElSeHi4pk6dWuF6AaAq+JUmANRhJ06c0LBhw3TLLbfotttuc5yCuGDBAgUEBGjy5MkKCAjQihUr9PTTTys9PV0vv/zyee/3gw8+UEZGhu655x5ZLBb985//1J///Gft3bv3vB2QNWvWaNGiRbr//vsVGBioV199Vddff70OHDigJk2aSJK2bNmioUOHKjIyUs8++6ysVquee+45hYWFVeh5f/rpp8rOztZ9992nJk2aaMOGDZozZ44OHTqkTz/91Gms1WrVkCFD1LNnT82YMUPLli3Tv/71L8XFxem+++6TZA8x1157rdasWaN7771X7du31xdffKExY8ZUqJ7Ro0fr2Wef1QcffKAuXbo4PfYnn3yiK664Qi1atFBqaqr+7//+T6NGjdJdd92ljIwMvfXWWxoyZIg2bNigTp06Vejxijz99NN64YUXNHz4cA0fPlybN2/WVVddpby8PKdxe/fu1eLFi3XjjTeqVatWOnbsmN544w3169dPv//+u6KiotS+fXs999xzevrpp3X33XfriiuukCTHKXlnMwxDf/rTn7Ry5Urdeeed6tSpk5YuXaq//e1vOnz4sF555RWn8RV5X5zPqFGjtHDhQv3jH/+QxWJRamqqvvvuO7333nulgtyaNWt08uRJTZo0qUIdw6+++kq+vr664YYbKlQLANQIAwBgugkTJhhn/0ju16+fIcl4/fXXS43Pzs4udeyee+4x/Pz8jJycHMexMWPGGC1btnR8v2/fPkOS0aRJE+PkyZOO419++aUhyfjvf//rOPbMM8+UqkmS4eXlZezevdtxbNu2bYYkY86cOY5jI0aMMPz8/IzDhw87jiUmJhoeHh6l7rMsZT2/6dOnGxaLxUhKSnJ6fpKM5557zmls586dja5duzq+X7x4sSHJ+Oc//+k4VlBQYFxxxRWGJGP+/Pnnral79+5G8+bNDavV6ji2ZMkSQ5LxxhtvOO4zNzfX6XanTp0ywsPDjfHjxzsdl2Q888wzju/nz59vSDL27dtnGIZhpKSkGF5eXsbVV19t2Gw2x7gnnnjCkGSMGTPGcSwnJ8epLsOw/117e3s7vTYbN24s9/me/V4pes1eeOEFp3E33HCDYbFYnN4DFX1flKXoPfnyyy8bv/76qyHJ+OGHHwzDMIx58+YZAQEBRlZWljFmzBjD39/fcbvZs2cbkowvvvjinPdfpFGjRkbHjh0rNBYAagqnHQJAHebt7a1x48aVOu7r6+v4OiMjQ6mpqbriiiuUnZ2tHTt2nPd+b775ZjVq1MjxfVEXZO/evee97aBBgxQXF+f4/tJLL1VQUJDjtlarVcuWLdPIkSMVFRXlGNe6dWsNGzbsvPcvOT+/rKwspaamqnfv3jIMQ1u2bCk1/t5773X6/oorrnB6Lt988408PDwcnTDJPsfqgQceqFA9kn2e3qFDh/T99987jn3wwQfy8vLSjTfe6LhPLy8vSZLNZtPJkydVUFCgbt26lXnK4rksW7ZMeXl5euCBB5xOqZs0aVKpsd7e3nJzs/+XbrVadeLECQUEBKht27aVftwi33zzjdzd3fXggw86HX/44YdlGIa+/fZbp+Pne19URIcOHXTppZfqww8/lGR/fa+99toy5zmmp6dLkgIDAyt03+np6RUeCwA1hfAFAHVYs2bNHB/mS/rtt9903XXXKTg4WEFBQQoLC3Ms1pGWlnbe+23RooXT90VB7NSpU5W+bdHti26bkpKiM2fOqHXr1qXGlXWsLAcOHNDYsWPVuHFjxzyufv36SSr9/Hx8fEqdzliyHklKSkpSZGRkqaXK27ZtW6F6JOmWW26Ru7u7Y05STk6OY4nzkkH2nXfe0aWXXiofHx81adJEYWFh+t///lehv5eSkpKSJEnx8fFOx8PCwpweT7IHvVdeeUXx8fHy9vZWaGiowsLC9Msvv1T6cUs+flRUVKnA0r59e6f6ipzvfVFRt956qz799FPt3r1bP/74o2699dYyxwUFBUmy//KhIoKCgio8FgBqCuELAOqwkh2gIqdPn1a/fv20bds2Pffcc/rvf/+rhIQEvfTSS5LsH8TPp7w5MkYFdh+5kNtWhNVq1eDBg/W///1Pjz32mBYvXqyEhATHwhBnP7/aWiGwadOmGjx4sD7//HPl5+frv//9rzIyMjR69GjHmIULF2rs2LGKi4vTW2+9pSVLlighIUFXXnllhf5equrvf/+7Jk+erL59+2rhwoVaunSpEhIS1KFDhxp93JKq630xatQopaam6q677lKTJk101VVXlTmuaNGM7du3V+h+27Vrp127dpWaLwcAtYkFNwDAxaxatUonTpzQokWL1LdvX8fxffv2mVhVsaZNm8rHx6fMTYnPtVFxke3bt2vXrl165513dMcddziOJyQkVLmmli1bavny5crMzHTqfu3cubNS9zN69GgtWbJE3377rT744AMFBQVpxIgRjus/++wzxcbGatGiRU6nCj7zzDNVqlmSEhMTFRsb6zh+/PjxUt2kzz77TAMGDNBbb73ldPz06dMKDQ11fF+RlSZLPv6yZcuUkZHh1P0qOq21qL7q1qJFC/Xp00erVq3SfffdV+52B5dffrkaNWqkDz/8UE888cR5Q/iIESO0bt06ff755xo1alRNlA4A50XnCwBcTNGHzJIdhby8PP373/82qyQn7u7uGjRokBYvXqwjR444ju/evbvUPKHybi85Pz/DMDR79uwq1zR8+HAVFBTotddecxyzWq2aM2dOpe5n5MiR8vPz07///W99++23+vOf/+y0CXVZta9fv17r1q2rdM2DBg2Sp6en5syZ43R/s2bNKjXW3d29VIfp008/1eHDh52O+fv7S1KFltgfPny4rFar5s6d63T8lVdekcViqfD8vap44YUX9Mwzz5xzTp6fn58ee+wx/fHHH3rsscfK7LAtXLhQGzZskGSfFxgZGamHH35Yu3btKjU2JSVFL7zwQvU9CQAoA50vAHAxvXv3VqNGjTRmzBg9+OCDslgseu+996rttL/qMG3aNH333Xfq06eP7rvvPseH+Isvvlhbt249523btWunuLg4PfLIIzp8+LCCgoL0+eefV3ruUEkjRoxQnz59NGXKFO3fv18XXXSRFi1aVOn5UAEBARo5cqRj3lfJUw4l6ZprrtGiRYt03XXX6eqrr9a+ffv0+uuv66KLLlJmZmalHqtov7Lp06frmmuu0fDhw7VlyxZ9++23Tt2sosd97rnnNG7cOPXu3Vvbt2/X+++/79Qxk6S4uDiFhITo9ddfV2BgoPz9/dWzZ0+1atWq1OOPGDFCAwYM0JNPPqn9+/erY8eO+u677/Tll19q0qRJTotrVLd+/fo55vidy9/+9jf99ttv+te//qWVK1fqhhtuUEREhJKTk7V48WJt2LBBP/74oyT7/LMvvvhCw4cPV6dOnXTbbbepa9eukqTNmzfrww8/VK9evWrsOQGAROcLAFxOkyZN9PXXXysyMlJTp07VjBkzNHjwYP3zn/80uzSHrl276ttvv1WjRo301FNP6a233tJzzz2ngQMHOnWKyuLp6an//ve/6tSpk6ZPn65nn31W8fHxevfdd6tcj5ubm7766iuNHj1aCxcu1JNPPqlmzZrpnXfeqfR9FQWuyMhIXXnllU7XjR07Vn//+9+1bds2Pfjgg1q6dKkWLlyobt26VanuF154Qc8++6y2bNmiv/3tb9qzZ4++++47RweryBNPPKGHH35YS5cu1UMPPaTNmzfrf//7n6Kjo53GeXp66p133pG7u7vuvfdejRo1SqtXry7zsYtes0mTJunrr7/WpEmT9Pvvv+vll1/WzJkzq/R8qpubm5veffddffbZZwoNDdWMGTN09913a86cOWrVqpVWrVrlFKh69uypX3/9Vffee69Wr16tSZMmafLkydq0aZOmTJlSag85AKhuFqMu/aoUAFCvjRw5Ur/99psSExPNLgUAgFpH5wsAUCPOnDnj9H1iYqK++eYb9e/f35yCAAAwGZ0vAECNiIyM1NixYxUbG6ukpCS99tprys3N1ZYtW0rtXQUAQEPAghsAgBoxdOhQffjh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mDFjnMZ98sknev/99/Xhhx/qiSeeUPfu3RUTE6Nrr71WK1as0IABAyRJTzzxhPbv36/169drzJgxuuiii9SmTRvddddd2rp1q1OIrQvofDUg2w+l6bvfj8nNIv11ULzZ5QAAANSIM/lWXfT0UlMe+/fnhsjPq3o+Yk+ZMkUzZsxQbGysGjVqpIMHD2r48OF68cUX5e3trXfffVcjRozQzp071aJFi3Lv59lnn9U///lPvfzyy5ozZ45Gjx6tpKQkNW7cuMzx2dnZmjFjht577z25ubnptttu0yOPPKL3339fkvTSSy/p/fff1/z589W+fXvNnj1bixcvdgSic7n99tv18ssv68CBA2rRooU+//xzxcTEqEuXLk7j3n//fbVt21bXXnttqfuwWCwKDg6WzWbTRx99pNGjRysqKqrUuLoWvCQ6Xw3KzAR7K/vaTs3UummgydUAAADgXJ577jkNHjxYcXFxaty4sTp27Kh77rlHF198seLj4/X8888rLi7OqZNVlrFjx2rUqFFq3bq1/v73vyszM1MbNmwod3x+fr5ef/11devWTV26dNHEiRO1fPlyx/Vz5szR448/ruuuu07t2rXT3LlzK3xqX9OmTTVs2DAtWLBAkvT2229r/PjxpcYlJiaqbdtzLwyXmpqqU6dOqV27dhV67LqAzlcDsSnplFbuPC53N4seHEjXCwAA1F++nu76/bkhpj12denWrZvT95mZmZo2bZr+97//6ejRoyooKNCZM2dKzZU626WXXur42t/fX0FBQUpJSSl3vJ+fn+Li4hzfR0ZGOsanpaXp2LFj6tGjh+N6d3d3de3aVTabrULPa/z48XrooYd02223ad26dfr000/1ww8/OI2pyOmbdW0xjYogfDUQs5bZ53r9uXMztQr1N7kaAACAmmOxWKrt1D8z+fs7f2Z75JFHlJCQoBkzZqh169by9fXVDTfcoLy8vHPej6enp9P3FovlnEGprPHVGXSGDRumu+++W3feeadGjBihJk2alBrTpk0b7dix45z3ExYWppCQkPOOq0s47bAB2LDvpH5ITJUHXS8AAACXtXbtWo0dO1bXXXedLrnkEkVERGj//v21WkNwcLDCw8O1ceNGxzGr1arNmzdX+D48PDx0xx13aNWqVWWecihJt956q3bt2qUvv/yy1HWGYSgtLU1ubm665ZZb9P777+vIkSOlxmVmZqqgoKDCddUGwlc9ZxiG/vWdfa7XTd2jFd3Yz+SKAAAAUBXx8fFatGiRtm7dqm3btunWW2+t8Kl+1emBBx7Q9OnT9eWXX2rnzp166KGHdOrUqVL7dJ3L888/r+PHj2vIkLJPD73pppt08803a9SoUfr73/+un3/+WUlJSfr66681aNAgrVy5UpL04osvKjo6Wj179tS7776r33//XYmJiXr77bfVuXNnZWZmVstzri6u34/FOf2454TW7zspL3c3TRzQ2uxyAAAAUEUzZ87U+PHj1bt3b4WGhuqxxx5Tenp6rdfx2GOPKTk5WXfccYfc3d119913a8iQIXJ3r/h8Ny8vL4WGhpZ7vcVi0QcffKA333xTb7/9tl588UV5eHgoPj5ed9xxhyO0NW7cWD/99JP+8Y9/6IUXXlBSUpIaNWqkSy65RC+//HKNbx5dWRbDFWeq1QHp6ekKDg5WWlqagoLq5n5ZhmHo+td+1OYDpzW2d4ym/amD2SUBAABUq5ycHO3bt0+tWrWSj4+P2eU0SDabTe3bt9dNN92k559/3uxyasy53msVzQZ0vuqxVbuOa/OB0/L2cNP9/ePOfwMAAADgPJKSkvTdd9+pX79+ys3N1dy5c7Vv3z7deuutZpdW5zHnq54yDEOvJNhXOLyjV0s1DeI3QQAAALhwbm5uWrBggbp3764+ffpo+/btWrZsmdq3b292aXUena96KuH3Y/rlUJr8vNx1bz+6XgAAAKge0dHRWrt2rdlluCQ6X/WQzWZoZmHXa0zvGDUJ8Da5IgAAAACEr3poyW/J2pGcoQBvD919RazZ5QAAAAAQ4avesdqK53qNv7yVGvl7mVwRAAAAAInwVe98/csRJaZkKsjHQ3de3srscgAAAAAUInzVIwVWm2YtS5Qk3d03VsG+niZXBAAAAKAI4ase+WLLYe1LzVIjP0+N7UPXCwAAAKhLCF/1RL7VpldX2Lte9/aLU4A3uwgAAADUd/3799ekSZMc38fExGjWrFnnvI3FYtHixYsv+LGr634aEsJXPfHpz4d08OQZhQZ4645eMWaXAwAAgHMYMWKEhg4dWuZ1P/zwgywWi3755ZdK3+/GjRt19913X2h5TqZNm6ZOnTqVOn706FENGzasWh/rbAsWLJDFYilzA+dPP/1UFotFMTExTsfz8vL0z3/+Ux07dpSfn59CQ0PVp08fzZ8/X/n5+Y5xycnJeuCBBxQbGytvb29FR0drxIgRWr58eY09H9oj9UBugVVzC7te9/ePk6+Xu8kVAQAA4FzuvPNOXX/99Tp06JCaN2/udN38+fPVrVs3XXrppZW+37CwsOoq8bwiIiJq5XH8/f2VkpKidevWqVevXo7jb731llq0aOE0Ni8vT0OGDNG2bdv0/PPPq0+fPgoKCtJPP/2kGTNmqHPnzurUqZP279+vPn36KCQkRC+//LIuueQS5efna+nSpZowYYJ27NhRI8+Fzlc98NGGgzqSlqPwIG/d2rPF+W8AAABQnxmGlJdlzsUwKlTiNddco7CwMC1YsMDpeGZmpj799FPdeeedOnHihEaNGqVmzZrJz89Pl1xyiT788MNz3u/Zpx0mJiaqb9++8vHx0UUXXaSEhIRSt3nsscfUpk0b+fn5KTY2Vk899ZSjQ7RgwQI9++yz2rZtmywWiywWi6Pms0873L59u6688kr5+vqqSZMmuvvuu5WZmem4fuzYsRo5cqRmzJihyMhINWnSRBMmTHDqRpXFw8NDt956q95++23HsUOHDmnVqlW69dZbncbOmjVL33//vZYvX64JEyaoU6dOio2N1a233qr169crPj5eknT//ffLYrFow4YNuv7669WmTRt16NBBkydP1k8//XTOei4EnS8Xl5Nv1byVuyVJEwe0lo8nXS8AANDA5WdLf48y57GfOCJ5+Z93mIeHh+644w4tWLBATz75pCwWiyT7qXRWq1WjRo1SZmamunbtqscee0xBQUH63//+p9tvv11xcXHq0aPHeR/DZrPpz3/+s8LDw7V+/XqlpaU5zQ8rEhgYqAULFigqKkrbt2/XXXfdpcDAQD366KO6+eab9euvv2rJkiVatmyZJCk4OLjUfWRlZWnIkCHq1auXNm7cqJSUFP3lL3/RxIkTnQLmypUrFRkZqZUrV2r37t26+eab1alTJ911113nfC7jx49X//79NXv2bPn5+WnBggUaOnSowsPDnca9//77GjRokDp37lzqPjw9PeXp6amTJ09qyZIlevHFF+XvX/rvKiQk5Jy1XAg6Xy4ut8Cm4ZdEKjbUXzd1jza7HAAAAFTQ+PHjtWfPHq1evdpxbP78+br++usVHBysZs2a6ZFHHnF0bx544AENHTpUn3zySYXuf9myZdqxY4feffdddezYUX379tXf//73UuOmTp2q3r17KyYmRiNGjNAjjzzieAxfX18FBATIw8NDERERioiIkK+vb6n7+OCDD5STk6N3331XF198sa688krNnTtX7733no4dO+YY16hRI82dO1ft2rXTNddco6uvvrpCc6w6d+6s2NhYffbZZzIMQwsWLND48eNLjUtMTFS7du3OeV+7d++WYRjnHVcT6Hy5uGBfT037UwflW23ydCdLAwAAyNPP3oEy67ErqF27durdu7fefvtt9e/fX7t379YPP/yg5557TpJktVr197//XZ988okOHz6svLw85ebmys+vYo/xxx9/KDo6WlFRxV3AknOminz88cd69dVXtWfPHmVmZqqgoEBBQUEVfh5Fj9WxY0enTlKfPn1ks9m0c+dOR4eqQ4cOcncvPlMrMjJS27dvr9BjjB8/XvPnz1eLFi2UlZWl4cOHa+7cuU5jjAqc9lmRMTWFT+v1BMELAACgkMViP/XPjEvh6YMVdeedd+rzzz9XRkaG5s+fr7i4OPXr10+S9PLLL2v27Nl67LHHtHLlSm3dulVDhgxRXl5etb1U69at0+jRozV8+HB9/fXX2rJli5588slqfYySPD09nb63WCyy2WwVuu3o0aP1008/adq0abr99tvl4VG6j9SmTZvzLpYRHx8vi8VSY4tqnAuf2AEAAACT3HTTTXJzc9MHH3ygd999V+PHj3fM/1q7dq2uvfZa3XbbberYsaNiY2O1a9euCt93+/btdfDgQR09etRx7OzFJH788Ue1bNlSTz75pLp166b4+HglJSU5jfHy8pLVaj3vY23btk1ZWVmOY2vXrpWbm5vatm1b4ZrPpXHjxvrTn/6k1atXl3nKoSTdeuutWrZsmbZs2VLquvz8fGVlZalx48YaMmSI5s2b51RvkdOnT1dLvWUhfAEAAAAmCQgI0M0336zHH39cR48e1dixYx3XxcfHKyEhQT/++KP++OMP3XPPPU7zp85n0KBBatOmjcaMGaNt27bphx9+0JNPPuk0Jj4+XgcOHNBHH32kPXv26NVXX9UXX3zhNCYmJkb79u3T1q1blZqaqtzc3FKPNXr0aPn4+GjMmDH69ddftXLlSj3wwAO6/fbbSy2KcSEWLFig1NTUcudrTZo0SX369NHAgQM1b948bdu2TXv37tUnn3yiyy67TImJ9u2Z5s2bJ6vVqh49eujzzz9XYmKi/vjjD7366qtlnppZXQhfAAAAgInuvPNOnTp1SkOGDHGanzV16lR16dJFQ4YMUf/+/RUREaGRI0dW+H7d3Nz0xRdf6MyZM+rRo4f+8pe/6MUXX3Qa86c//Ul//etfNXHiRHXq1Ek//vijnnrqKacx119/vYYOHaoBAwYoLCyszOXu/fz8tHTpUp08eVLdu3fXDTfcoIEDB5aak3WhipaxL4+3t7cSEhL06KOP6o033tBll12m7t2769VXX9WDDz6oiy++WJIUGxurzZs3a8CAAXr44Yd18cUXa/DgwVq+fLlee+21aq25JIth5owzF5aenq7g4GClpaVVekIiAAAAqkdOTo727dunVq1aycfHx+xyUI+d671W0WxA5wsAAAAAagHhCwAAAABqAeELAAAAAGoB4QsAAAAAagHhCwAAAC6PNeRQ06rjPUb4AgAAgMvy9PSUJGVnZ5tcCeq7ovdY0XuuKjyqqxgAAACgtrm7uyskJEQpKSmS7PtNWSwWk6tCfWIYhrKzs5WSkqKQkBC5u7tX+b4IXwAAAHBpERERkuQIYEBNCAkJcbzXqorwBQAAAJdmsVgUGRmppk2bKj8/3+xyUA95enpeUMerCOELAAAA9YK7u3u1fEAGagoLbgAAAABALSB8AQAAAEAtIHwBAAAAQC1gzlcVFW2ylp6ebnIlAAAAAMxUlAnOtxEz4auKMjIyJEnR0dEmVwIAAACgLsjIyFBwcHC511uM88UzlMlms+nIkSMKDAw0fSO/9PR0RUdH6+DBgwoKCjK1lvqI17dm8frWLF7fmsXrW7N4fWser3HN4vWtWXXp9TUMQxkZGYqKipKbW/kzu+h8VZGbm5uaN29udhlOgoKCTH/j1We8vjWL17dm8frWLF7fmsXrW/N4jWsWr2/Nqiuv77k6XkVYcAMAAAAAagHhCwAAAABqAeGrHvD29tYzzzwjb29vs0upl3h9axavb83i9a1ZvL41i9e35vEa1yxe35rliq8vC24AAAAAQC2g8wUAAAAAtYDwBQAAAAC1gPAFAAAAALWA8AUAAAAAtYDw5SLmzZunmJgY+fj4qGfPntqwYcM5x3/66adq166dfHx8dMkll+ibb76ppUpdU2Ve3wULFshisThdfHx8arFa1/L9999rxIgRioqKksVi0eLFi897m1WrVqlLly7y9vZW69attWDBghqv01VV9vVdtWpVqfevxWJRcnJy7RTsQqZPn67u3bsrMDBQTZs21ciRI7Vz587z3o6fvxVXldeYn8EV99prr+nSSy91bEDbq1cvffvtt+e8De/fiqvs68t7t+r+8Y9/yGKxaNKkSecc5wrvX8KXC/j44481efJkPfPMM9q8ebM6duyoIUOGKCUlpczxP/74o0aNGqU777xTW7Zs0ciRIzVy5Ej9+uuvtVy5a6js6yvZd1I/evSo45KUlFSLFbuWrKwsdezYUfPmzavQ+H379unqq6/WgAEDtHXrVk2aNEl/+ctftHTp0hqu1DVV9vUtsnPnTqf3cNOmTWuoQte1evVqTZgwQT/99JMSEhKUn5+vq666SllZWeXehp+/lVOV11jiZ3BFNW/eXP/4xz+0adMm/fzzz7ryyit17bXX6rfffitzPO/fyqns6yvx3q2KjRs36o033tCll156znEu8/41UOf16NHDmDBhguN7q9VqREVFGdOnTy9z/E033WRcffXVTsd69uxp3HPPPTVap6uq7Os7f/58Izg4uJaqq18kGV988cU5xzz66KNGhw4dnI7dfPPNxpAhQ2qwsvqhIq/vypUrDUnGqVOnaqWm+iQlJcWQZKxevbrcMfz8vTAVeY35GXxhGjVqZPzf//1fmdfx/r1w53p9ee9WXkZGhhEfH28kJCQY/fr1Mx566KFyx7rK+5fOVx2Xl5enTZs2adCgQY5jbm5uGjRokNatW1fmbdatW+c0XpKGDBlS7viGrCqvryRlZmaqZcuWio6OPu9vuVA5vH9rR6dOnRQZGanBgwdr7dq1ZpfjEtLS0iRJjRs3LncM798LU5HXWOJncFVYrVZ99NFHysrKUq9evcocw/u36iry+kq8dytrwoQJuvrqq0u9L8viKu9fwlcdl5qaKqvVqvDwcKfj4eHh5c7RSE5OrtT4hqwqr2/btm319ttv68svv9TChQtls9nUu3dvHTp0qDZKrvfKe/+mp6frzJkzJlVVf0RGRur111/X559/rs8//1zR0dHq37+/Nm/ebHZpdZrNZtOkSZPUp08fXXzxxeWO4+dv1VX0NeZncOVs375dAQEB8vb21r333qsvvvhCF110UZljef9WXmVeX967lfPRRx9p8+bNmj59eoXGu8r718PsAgBX06tXL6ff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","text/plain":["<Figure size 1000x600 with 1 Axes>"]},"metadata":{},"output_type":"display_data"}],"source":["plt.figure(figsize=(10, 6))\n","plt.plot(DNN.history['mcc'], label='Training MCC')\n","plt.plot(DNN.history['val_mcc'], label='Validation MCC')\n","plt.title('Training and Validation MCC')\n","plt.xlabel('Epochs')\n","plt.ylabel('MCC')\n","plt.legend()\n","plt.show()"]},{"cell_type":"code","execution_count":21,"id":"b75dc4c8","metadata":{"execution":{"iopub.execute_input":"2024-08-23T16:26:32.593475Z","iopub.status.busy":"2024-08-23T16:26:32.593092Z","iopub.status.idle":"2024-08-23T16:26:32.599118Z","shell.execute_reply":"2024-08-23T16:26:32.597736Z"},"papermill":{"duration":0.165838,"end_time":"2024-08-23T16:26:32.60165","exception":false,"start_time":"2024-08-23T16:26:32.435812","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["Difference between training and validation MCC metric:\n","0.00013631582260131836\n"]}],"source":["print(f\"Difference between training and validation MCC metric:\\n{abs(DNN.history['mcc'][-1] - DNN.history['val_mcc'][-1])}\")"]},{"cell_type":"markdown","id":"a728b414","metadata":{"papermill":{"duration":0.152784,"end_time":"2024-08-23T16:26:32.907879","exception":false,"start_time":"2024-08-23T16:26:32.755095","status":"completed"},"tags":[]},"source":["Our test data MCC metric is very low, which means our model fits very well to this set (low bias). The final difference between our training MCC metric and our validation MCC metric is also very small, which means our model is able to generalize efficently (low variance)!  \n","## 5.3 Test Data Set - Final Model Evaluation"]},{"cell_type":"code","execution_count":22,"id":"b0999f4f","metadata":{"execution":{"iopub.execute_input":"2024-08-23T16:26:33.216922Z","iopub.status.busy":"2024-08-23T16:26:33.216516Z","iopub.status.idle":"2024-08-23T16:26:34.572117Z","shell.execute_reply":"2024-08-23T16:26:34.570707Z"},"papermill":{"duration":1.512648,"end_time":"2024-08-23T16:26:34.574613","exception":false,"start_time":"2024-08-23T16:26:33.061965","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["\u001b[1m975/975\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 1ms/step - loss: 0.0378 - mcc: 0.9841\n","Test Loss: 0.04108290746808052\n","Test Metrics: 0.9813686609268188\n"]}],"source":["test_loss, test_metrics = model.evaluate(test_data_x, test_data_y)\n","\n","print(f\"Test Loss: {test_loss}\")\n","print(f\"Test Metrics: {test_metrics}\")"]},{"cell_type":"code","execution_count":23,"id":"0ab6f38e","metadata":{"execution":{"iopub.execute_input":"2024-08-23T16:26:34.883444Z","iopub.status.busy":"2024-08-23T16:26:34.883039Z","iopub.status.idle":"2024-08-23T16:26:34.889485Z","shell.execute_reply":"2024-08-23T16:26:34.888208Z"},"papermill":{"duration":0.163255,"end_time":"2024-08-23T16:26:34.891797","exception":false,"start_time":"2024-08-23T16:26:34.728542","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["Difference between training and test MCC metric:\n","0.0014053583145141602\n","\n","Difference between validation and test MCC metric:\n","0.0015416741371154785\n"]}],"source":["print(f\"Difference between training and test MCC metric:\\n{abs(DNN.history['mcc'][-1] - test_metrics)}\")\n","print(f\"\\nDifference between validation and test MCC metric:\\n{abs(DNN.history['val_mcc'][-1] - test_metrics)}\")"]},{"cell_type":"markdown","id":"f57e1bf4","metadata":{"papermill":{"duration":0.155158,"end_time":"2024-08-23T16:26:35.20135","exception":false,"start_time":"2024-08-23T16:26:35.046192","status":"completed"},"tags":[]},"source":["What we are looking for here is our training, validation, and test metric. \n","\n","If the difference going from training -> test data is high, that means we might have overfitted our model to the training and validation data (high variance). \n","\n","If the difference going from validation -> test data is high, that means we might have just overfitted on the validation data. This could also mean that our validation data and our test data do not come from the same distribution, which is also a problem we should check. \n","\n","Since both differences in MCC metrics are low, this means our model is generalizing well to the test data set, and our test data set is probably from the same distribution of data as our validation data set. \n","# 6 Model Deployment\n","## 6.1 Data Aggregation Pipeline\n","It is time to deploy our model and see how it works in a production environment! First we will need to define a data pipeline to apply all our data aggregation methods in a streamlined fashion. We will reuse the code we wrote above for this process."]},{"cell_type":"code","execution_count":24,"id":"710a0951","metadata":{"execution":{"iopub.execute_input":"2024-08-23T16:26:35.507101Z","iopub.status.busy":"2024-08-23T16:26:35.506685Z","iopub.status.idle":"2024-08-23T16:26:35.516448Z","shell.execute_reply":"2024-08-23T16:26:35.515261Z"},"papermill":{"duration":0.165496,"end_time":"2024-08-23T16:26:35.519309","exception":false,"start_time":"2024-08-23T16:26:35.353813","status":"completed"},"tags":[]},"outputs":[],"source":["def remove_num_na(df):\n","    for col in df.select_dtypes(include=['float64']).columns:\n","        df[col] = df[col].fillna(0)\n","    return df\n","\n","def rewrite_values(df, threshold=0.1):\n","    for column in df.columns:\n","        if df[column].dtype == 'object':\n","            total_count = df[column].notna().sum()\n","            value_counts = df[column].value_counts()\n","            replace_dict = {\n","                value: 'not' if count / total_count < (threshold / 100) else value for value, count in value_counts.items()}\n","            df[column] = df[column].map(replace_dict).fillna('null')\n","    return df\n","\n","def normalize(df): \n","    scaler = MinMaxScaler()\n","    continuous_cols = df.select_dtypes(include=['float64']).columns\n","    df[continuous_cols] = scaler.fit_transform(df[continuous_cols])\n","    return df\n","\n","def encode(df): \n","    df = pd.get_dummies(df, columns=df.select_dtypes(include=['object']).columns, dtype=int)\n","    return df\n","    \n","def data_pipeline(df):\n","    df = remove_num_na(df)\n","    df = rewrite_values(df)\n","    df = normalize(df)\n","    df = encode(df)\n","    return df\n"]},{"cell_type":"code","execution_count":25,"id":"d8d0d6a2","metadata":{"execution":{"iopub.execute_input":"2024-08-23T16:26:35.890311Z","iopub.status.busy":"2024-08-23T16:26:35.889901Z","iopub.status.idle":"2024-08-23T16:28:43.905423Z","shell.execute_reply":"2024-08-23T16:28:43.904196Z"},"papermill":{"duration":128.433506,"end_time":"2024-08-23T16:28:44.168348","exception":false,"start_time":"2024-08-23T16:26:35.734842","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["\u001b[1m64937/64937\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m76s\u001b[0m 1ms/step\n"]},{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>class</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>3116945</td>\n","      <td>e</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>3116946</td>\n","      <td>p</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3116947</td>\n","      <td>p</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3116948</td>\n","      <td>p</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>3116949</td>\n","      <td>e</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["        id class\n","0  3116945     e\n","1  3116946     p\n","2  3116947     p\n","3  3116948     p\n","4  3116949     e"]},"execution_count":25,"metadata":{},"output_type":"execute_result"}],"source":["test_ids = test_df['id']\n","test_features = test_df.drop(columns=['id'])\n","\n","df_prod = data_pipeline(test_features)\n","predictions = model.predict(df_prod)\n","\n","predicted_classes = (predictions > 0.5).astype(int)\n","submission_df = pd.DataFrame({\n","    'id': test_ids,\n","    'class' : pd.Series(predicted_classes.flatten()).map({1: \"e\", 0: \"p\"})\n","})\n","\n","submission_df.head()"]},{"cell_type":"markdown","id":"ef7a1e7e","metadata":{"papermill":{"duration":0.318658,"end_time":"2024-08-23T16:28:44.740532","exception":false,"start_time":"2024-08-23T16:28:44.421874","status":"completed"},"tags":[]},"source":["# 7 It's a Race Gary!!\n","So of course, the final thing to consider is that, yes, we are competing against 1k+ lovely other data scientist. So, what do we do? \n","\n","Hyperparameter tuning and ensemble! \n","# 7.1 Hyperparameter tuning \n","Since this is the meat and bones of squeezing the last bit of percentage points of your model, I will give you some generalized code to get you started. \n","\n","The below code will let you control parameters such as number of layers, units per layer (in sets of 32 nodes), dropout rate, and learning rate. You can also control the number of trials (how many different combinations we will search), number of executions (how many times each combination of parameters gets to try and be the best), epochs, and minibatch size."]},{"cell_type":"code","execution_count":26,"id":"a0537af1","metadata":{"execution":{"iopub.execute_input":"2024-08-23T16:28:45.246791Z","iopub.status.busy":"2024-08-23T16:28:45.246393Z","iopub.status.idle":"2024-08-23T16:28:45.314644Z","shell.execute_reply":"2024-08-23T16:28:45.313423Z"},"papermill":{"duration":0.328065,"end_time":"2024-08-23T16:28:45.317034","exception":false,"start_time":"2024-08-23T16:28:44.988969","status":"completed"},"tags":[]},"outputs":[{"name":"stderr","output_type":"stream","text":["/opt/conda/lib/python3.10/site-packages/keras/src/layers/core/input_layer.py:26: UserWarning: Argument `input_shape` is deprecated. Use `shape` instead.\n","  warnings.warn(\n"]}],"source":["class HyperModeler(HyperModel):\n","    def build(self, hp):\n","        model = keras.Sequential()\n","        model.add(keras.layers.InputLayer(input_shape=(train_data_x.shape[1],)))\n","\n","        for i in range(hp.Int('num_layers', 2, 10)):\n","            units = hp.Int(f'units_{i}', min_value=32, max_value=512, step=32)\n","            model.add(keras.layers.Dense(units=units, activation='relu'))\n","            \n","            if hp.Boolean('dropout'):\n","                dropout_rate = hp.Float(f'dropout_rate_{i}', min_value=0.1, max_value=0.5, step=0.1)\n","                model.add(keras.layers.Dropout(rate=dropout_rate))\n","        \n","        model.add(keras.layers.Dense(1, activation='sigmoid'))\n","\n","        learning_rate = hp.Choice('learning_rate', [1e-2, 1e-3, 1e-4])\n","        model.compile(\n","            optimizer=keras.optimizers.Adam(learning_rate=learning_rate),\n","            loss='binary_crossentropy',\n","            metrics=['accuracy']\n","        )\n","\n","        return model\n","\n","\n","tuner = RandomSearch(\n","    HyperModeler(),\n","    objective=\"val_accuracy\",\n","    max_trials=20,\n","    executions_per_trial=2,\n","    directory='kaggle',\n","    project_name='s04e08'\n",")\n","\n","x = False\n","if x:\n","    with tf.device('/GPU:0'):\n","        tuner.search(\n","            train_data_x, train_data_y,\n","            epochs=10,  \n","            validation_data=(dev_data_x, dev_data_y),\n","            batch_size=128,  \n","        )"]},{"cell_type":"markdown","id":"d7b6e4d3","metadata":{"papermill":{"duration":0.249369,"end_time":"2024-08-23T16:28:45.819098","exception":false,"start_time":"2024-08-23T16:28:45.569729","status":"completed"},"tags":[]},"source":["# 7.2 Ensemble (Coming Soon)"]}],"metadata":{"kaggle":{"accelerator":"none","dataSources":[{"databundleVersionId":9045607,"sourceId":76727,"sourceType":"competition"}],"dockerImageVersionId":30746,"isGpuEnabled":false,"isInternetEnabled":true,"language":"python","sourceType":"notebook"},"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.10.13"},"papermill":{"default_parameters":{},"duration":345.875025,"end_time":"2024-08-23T16:28:49.134601","environment_variables":{},"exception":null,"input_path":"__notebook__.ipynb","output_path":"__notebook__.ipynb","parameters":{},"start_time":"2024-08-23T16:23:03.259576","version":"2.5.0"}},"nbformat":4,"nbformat_minor":5}